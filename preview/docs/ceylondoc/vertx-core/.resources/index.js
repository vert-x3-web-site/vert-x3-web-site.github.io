var index = [
{'name': 'io.vertx.ceylon.core', 'type': 'package', 'url': 'index.html#section-package', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'VertxOptions.toJson', 'type': 'function', 'url': 'VertxOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'VertxOptions', 'type': 'class', 'url': 'VertxOptions.type.html', 'doc': '<p>Instances of this class are used to configure <a href="Vertx.type.html">Vertx</a> instances.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'vertxOptions.fromJson', 'type': 'function', 'url': 'vertxOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'vertxOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'vertxOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'vertxOptions.toJava', 'type': 'value', 'url': 'vertxOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'vertxOptions.toJson', 'type': 'function', 'url': 'vertxOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'vertxOptions', 'type': 'object', 'url': 'vertxOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'vertxOptions', 'type': 'value', 'url': 'index.html#vertxOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DeploymentOptions.toJson', 'type': 'function', 'url': 'DeploymentOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'DeploymentOptions', 'type': 'class', 'url': 'DeploymentOptions.type.html', 'doc': '<p>Options for configuring a verticle deployment.\n<p><', 'tags': [],'icons': ['icon-class']},
{'name': 'deploymentOptions.fromJson', 'type': 'function', 'url': 'deploymentOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'deploymentOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'deploymentOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'deploymentOptions.toCeylon', 'type': 'value', 'url': 'deploymentOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'deploymentOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'deploymentOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'deploymentOptions.toJava', 'type': 'value', 'url': 'deploymentOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'deploymentOptions.toJson', 'type': 'function', 'url': 'deploymentOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'deploymentOptions', 'type': 'object', 'url': 'deploymentOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'deploymentOptions', 'type': 'value', 'url': 'index.html#deploymentOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.init', 'type': 'function', 'url': 'Verticle.type.html#init', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.vertx', 'type': 'attribute', 'url': 'Verticle.type.html#vertx', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.context', 'type': 'attribute', 'url': 'Verticle.type.html#context', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.deploymentID', 'type': 'attribute', 'url': 'Verticle.type.html#deploymentID', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.config', 'type': 'attribute', 'url': 'Verticle.type.html#config', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.processArgs', 'type': 'attribute', 'url': 'Verticle.type.html#processArgs', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.startAsync', 'type': 'function', 'url': 'Verticle.type.html#startAsync', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.start', 'type': 'function', 'url': 'Verticle.type.html#start', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.stopAsync', 'type': 'function', 'url': 'Verticle.type.html#stopAsync', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.stop', 'type': 'function', 'url': 'Verticle.type.html#stop', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.deploy', 'type': 'function', 'url': 'Verticle.type.html#deploy', 'doc': '<p>Deploy a verticle instance to Vert.x</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.nativeVerticle', 'type': 'attribute', 'url': 'Verticle.type.html#nativeVerticle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle', 'type': 'class', 'url': 'Verticle.type.html', 'doc': '', 'tags': [],'icons': ['icon-class', 'icon-decoration-abstract']},
{'name': 'Vertx.close', 'type': 'function', 'url': 'Vertx.type.html#close', 'doc': '<p>Stop the the Vertx instance and release any resources held by it.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.close', 'type': 'function', 'url': 'Vertx.type.html#close', 'doc': '<p>Like <a href="Vertx.type.html#close">close</a> but the completionHandler will be called when the close is complete</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.close', 'type': 'function', 'url': 'Vertx.type.html#close', 'doc': '<p>Stop the the Vertx instance and release any resources held by it.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.isMetricsEnabled', 'type': 'function', 'url': 'Vertx.type.html#isMetricsEnabled', 'doc': '<p>Whether the metrics are enabled for this measured object</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.getOrCreateContext', 'type': 'function', 'url': 'Vertx.type.html#getOrCreateContext', 'doc': '<p>Gets the current context, or creates one if there isn\'t one</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.isClustered', 'type': 'function', 'url': 'Vertx.type.html#isClustered', 'doc': '<p>Is this Vert.x instance clustered?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.isNativeTransportEnabled', 'type': 'function', 'url': 'Vertx.type.html#isNativeTransportEnabled', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createHttpClient', 'type': 'function', 'url': 'Vertx.type.html#createHttpClient', 'doc': '<p>Create a HTTP/HTTPS client using the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createHttpClient', 'type': 'function', 'url': 'Vertx.type.html#createHttpClient', 'doc': '<p>Create a HTTP/HTTPS client using default options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createHttpClient', 'type': 'function', 'url': 'Vertx.type.html#createHttpClient', 'doc': '<p>Create a HTTP/HTTPS client using the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.exceptionHandler', 'type': 'function', 'url': 'Vertx.type.html#exceptionHandler', 'doc': '<p>Set a default exception handler for <a href="Context.type.html">Context</a>, set on  at creation.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.fileSystem', 'type': 'function', 'url': 'Vertx.type.html#fileSystem', 'doc': '<p>Get the filesystem object.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.executeBlocking', 'type': 'function', 'url': 'Vertx.type.html#executeBlocking', 'doc': '<p>Like <a href="Vertx.type.html#executeBlocking">executeBlocking</a> called with ordered = true.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.executeBlocking', 'type': 'function', 'url': 'Vertx.type.html#executeBlocking', 'doc': '<p>Safely execute some blocking code.\n<p>\nE', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.executeBlocking', 'type': 'function', 'url': 'Vertx.type.html#executeBlocking', 'doc': '<p>Like <a href="Vertx.type.html#executeBlocking">executeBlocking</a> called with ordered = true.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createNetServer', 'type': 'function', 'url': 'Vertx.type.html#createNetServer', 'doc': '<p>Create a TCP/SSL server using default options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createNetServer', 'type': 'function', 'url': 'Vertx.type.html#createNetServer', 'doc': '<p>Create a TCP/SSL server using the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createNetServer', 'type': 'function', 'url': 'Vertx.type.html#createNetServer', 'doc': '<p>Create a TCP/SSL server using default options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createNetClient', 'type': 'function', 'url': 'Vertx.type.html#createNetClient', 'doc': '<p>Create a TCP/SSL client using the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createNetClient', 'type': 'function', 'url': 'Vertx.type.html#createNetClient', 'doc': '<p>Create a TCP/SSL client using default options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createNetClient', 'type': 'function', 'url': 'Vertx.type.html#createNetClient', 'doc': '<p>Create a TCP/SSL client using the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createHttpServer', 'type': 'function', 'url': 'Vertx.type.html#createHttpServer', 'doc': '<p>Create an HTTP/HTTPS server using default options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createHttpServer', 'type': 'function', 'url': 'Vertx.type.html#createHttpServer', 'doc': '<p>Create an HTTP/HTTPS server using the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createHttpServer', 'type': 'function', 'url': 'Vertx.type.html#createHttpServer', 'doc': '<p>Create an HTTP/HTTPS server using default options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createDatagramSocket', 'type': 'function', 'url': 'Vertx.type.html#createDatagramSocket', 'doc': '<p>Create a datagram socket using default options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createDatagramSocket', 'type': 'function', 'url': 'Vertx.type.html#createDatagramSocket', 'doc': '<p>Create a datagram socket using the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createDatagramSocket', 'type': 'function', 'url': 'Vertx.type.html#createDatagramSocket', 'doc': '<p>Create a datagram socket using default options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createDnsClient', 'type': 'function', 'url': 'Vertx.type.html#createDnsClient', 'doc': '<p>Create a DNS client to connect to a DNS server at the specified host and port, with the default query timeout (5…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createDnsClient', 'type': 'function', 'url': 'Vertx.type.html#createDnsClient', 'doc': '<p>Create a DNS client to connect to the DNS server configured by <a href="VertxOptions.type.html#getAddressResolverOptions">getAddressResolverOptions</a>\n<p>\nD', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createDnsClient', 'type': 'function', 'url': 'Vertx.type.html#createDnsClient', 'doc': '<p>Create a DNS client to connect to a DNS server</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createDnsClient', 'type': 'function', 'url': 'Vertx.type.html#createDnsClient', 'doc': '<p>Create a DNS client to connect to a DNS server at the specified host and port, with the default query timeout (5…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.deployVerticle', 'type': 'function', 'url': 'Vertx.type.html#deployVerticle', 'doc': '<p>Like <a href="Vertx.type.html#deployVerticle">deployVerticle</a> but the completionHandler will be notified when the deployment is complete.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.deployVerticle', 'type': 'function', 'url': 'Vertx.type.html#deployVerticle', 'doc': '<p>Like <a href="Vertx.type.html#deployVerticle">deployVerticle</a> but <a href="DeploymentOptions.type.html">DeploymentOptions</a> are provided to configure the\ndeployment.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.deployVerticle', 'type': 'function', 'url': 'Vertx.type.html#deployVerticle', 'doc': '<p>Like <a href="Vertx.type.html#deployVerticle">deployVerticle</a> but <a href="DeploymentOptions.type.html">DeploymentOptions</a> are provided to configure the\ndeployment.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.deployVerticle', 'type': 'function', 'url': 'Vertx.type.html#deployVerticle', 'doc': '<p>Deploy a verticle instance given a name.\n<p>\nG', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.deployVerticle', 'type': 'function', 'url': 'Vertx.type.html#deployVerticle', 'doc': '<p>Like <a href="Vertx.type.html#deployVerticle">deployVerticle</a> but the completionHandler will be notified when the deployment is complete.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.runOnContext', 'type': 'function', 'url': 'Vertx.type.html#runOnContext', 'doc': '<p>Puts the handler on the event queue for the current context so it will be run asynchronously ASAP after all\npreceeding…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.eventBus', 'type': 'function', 'url': 'Vertx.type.html#eventBus', 'doc': '<p>Get the event bus object.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.sharedData', 'type': 'function', 'url': 'Vertx.type.html#sharedData', 'doc': '<p>Get the shared data object.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.setTimer', 'type': 'function', 'url': 'Vertx.type.html#setTimer', 'doc': '<p>Set a one-shot timer to fire after <code>delay</code> milliseconds, at which point <code>handler</code> will be called with\nthe id of the timer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.timerStream', 'type': 'function', 'url': 'Vertx.type.html#timerStream', 'doc': '<p>Returns a one-shot timer as a read stream. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.setPeriodic', 'type': 'function', 'url': 'Vertx.type.html#setPeriodic', 'doc': '<p>Set a periodic timer to fire every <code>delay</code> milliseconds, at which point <code>handler</code> will be called with\nthe id of the timer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.periodicStream', 'type': 'function', 'url': 'Vertx.type.html#periodicStream', 'doc': '<p>Returns a periodic timer as a read stream. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.cancelTimer', 'type': 'function', 'url': 'Vertx.type.html#cancelTimer', 'doc': '<p>Cancels the timer with the specified <code>id</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.undeploy', 'type': 'function', 'url': 'Vertx.type.html#undeploy', 'doc': '<p>Like <a href="Vertx.type.html">#undeploy(String)</a> but the completionHandler will be notified when the undeployment is complete.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.undeploy', 'type': 'function', 'url': 'Vertx.type.html#undeploy', 'doc': '<p>Undeploy a verticle deployment.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.undeploy', 'type': 'function', 'url': 'Vertx.type.html#undeploy', 'doc': '<p>Like <a href="Vertx.type.html">#undeploy(String)</a> but the completionHandler will be notified when the undeployment is complete.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.deploymentIDs', 'type': 'function', 'url': 'Vertx.type.html#deploymentIDs', 'doc': '<p>Return a Set of deployment IDs for the currently deployed deploymentIDs.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createSharedWorkerExecutor', 'type': 'function', 'url': 'Vertx.type.html#createSharedWorkerExecutor', 'doc': '<p>Create a named worker executor, the executor should be closed when it\'s not needed anymore to release\nresources.<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createSharedWorkerExecutor', 'type': 'function', 'url': 'Vertx.type.html#createSharedWorkerExecutor', 'doc': '<p>Like <a href="Vertx.type.html#createSharedWorkerExecutor">createSharedWorkerExecutor</a> but with the <a href="VertxOptions.type.html#setWorkerPoolSize">setWorkerPoolSize</a> <code>poolSize</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createSharedWorkerExecutor', 'type': 'function', 'url': 'Vertx.type.html#createSharedWorkerExecutor', 'doc': '<p>Like <a href="Vertx.type.html#createSharedWorkerExecutor">createSharedWorkerExecutor</a> but with the <a href="VertxOptions.type.html#setMaxWorkerExecuteTime">setMaxWorkerExecuteTime</a> <code>maxExecuteTime</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx.createSharedWorkerExecutor', 'type': 'function', 'url': 'Vertx.type.html#createSharedWorkerExecutor', 'doc': '<p>Create a named worker executor, the executor should be closed when it\'s not needed anymore to release\nresources.<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Vertx', 'type': 'class', 'url': 'Vertx.type.html', 'doc': '<p>The entry point into the Vert.x Core API.\n<p>\nY', 'tags': [],'icons': ['icon-class']},
{'name': 'Context.remove', 'type': 'function', 'url': 'Context.type.html#remove', 'doc': '<p>Remove some data from the context.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.get', 'type': 'function', 'url': 'Context.type.html#get', 'doc': '<p>Get some data from the context.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.put', 'type': 'function', 'url': 'Context.type.html#put', 'doc': '<p>Put some data in the context.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.isEventLoopContext', 'type': 'function', 'url': 'Context.type.html#isEventLoopContext', 'doc': '<p>Is the current context an event loop context?\n<p>\nN', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.isWorkerContext', 'type': 'function', 'url': 'Context.type.html#isWorkerContext', 'doc': '<p>Is the current context a worker context?\n<p>\nN', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.isMultiThreadedWorkerContext', 'type': 'function', 'url': 'Context.type.html#isMultiThreadedWorkerContext', 'doc': '<p>Is the current context a multi-threaded worker context?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.getInstanceCount', 'type': 'function', 'url': 'Context.type.html#getInstanceCount', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.processArgs', 'type': 'function', 'url': 'Context.type.html#processArgs', 'doc': '<p>The process args</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.owner', 'type': 'function', 'url': 'Context.type.html#owner', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.config', 'type': 'function', 'url': 'Context.type.html#config', 'doc': '<p>If the context is associated with a Verticle deployment, this returns the configuration that was specified when\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.exceptionHandler', 'type': 'function', 'url': 'Context.type.html#exceptionHandler', 'doc': '<p>Set an exception handler called when the context runs an action throwing an uncaught throwable.<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.executeBlocking', 'type': 'function', 'url': 'Context.type.html#executeBlocking', 'doc': '<p>Safely execute some blocking code.\n<p>\nE', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.executeBlocking', 'type': 'function', 'url': 'Context.type.html#executeBlocking', 'doc': '<p>Invoke <a href="Context.type.html#executeBlocking">executeBlocking</a> with order = true.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.executeBlocking', 'type': 'function', 'url': 'Context.type.html#executeBlocking', 'doc': '<p>Safely execute some blocking code.\n<p>\nE', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.runOnContext', 'type': 'function', 'url': 'Context.type.html#runOnContext', 'doc': '<p>Run the specified action asynchronously on the same context, some time after the current execution has completed.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context.deploymentID', 'type': 'function', 'url': 'Context.type.html#deploymentID', 'doc': '<p>If the context is associated with a Verticle deployment, this returns the deployment ID of that deployment.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Context', 'type': 'class', 'url': 'Context.type.html', 'doc': '<p>The execution context of a <em>handler</em> execution.\n<p>\nW', 'tags': [],'icons': ['icon-class']},
{'name': 'Future.cause', 'type': 'function', 'url': 'Future.type.html#cause', 'doc': '<p>A Throwable describing failure.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.result', 'type': 'function', 'url': 'Future.type.html#result', 'doc': '<p>The result of the operation.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.map', 'type': 'function', 'url': 'Future.type.html#map', 'doc': '<p>Apply a <code>mapper</code> function on this future.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.map', 'type': 'function', 'url': 'Future.type.html#map', 'doc': '<p>Map the result of a future to a specific <code>value</code>.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.map', 'type': 'function', 'url': 'Future.type.html#map', 'doc': '<p>Apply a <code>mapper</code> function on this future.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.completer', 'type': 'function', 'url': 'Future.type.html#completer', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.compose', 'type': 'function', 'url': 'Future.type.html#compose', 'doc': '<p>Compose this future with a <code>mapper</code> function.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.compose', 'type': 'function', 'url': 'Future.type.html#compose', 'doc': '<p>Compose this future with a provided <code>next</code> future.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.compose', 'type': 'function', 'url': 'Future.type.html#compose', 'doc': '<p>Compose this future with a <code>mapper</code> function.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.failed', 'type': 'function', 'url': 'Future.type.html#failed', 'doc': '<p>Did it fail?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.succeeded', 'type': 'function', 'url': 'Future.type.html#succeeded', 'doc': '<p>Did it succeed?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.fail', 'type': 'function', 'url': 'Future.type.html#fail', 'doc': '<p>Try to set the failure.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.fail', 'type': 'function', 'url': 'Future.type.html#fail', 'doc': '<p>Set the failure.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.fail', 'type': 'function', 'url': 'Future.type.html#fail', 'doc': '<p>Try to set the failure.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.setHandler', 'type': 'function', 'url': 'Future.type.html#setHandler', 'doc': '<p>Set a handler for the result.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.recover', 'type': 'function', 'url': 'Future.type.html#recover', 'doc': '<p>Handles a failure of this Future by returning the result of another Future.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.complete', 'type': 'function', 'url': 'Future.type.html#complete', 'doc': '<p>Set a null result.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.complete', 'type': 'function', 'url': 'Future.type.html#complete', 'doc': '<p>Set the result.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.complete', 'type': 'function', 'url': 'Future.type.html#complete', 'doc': '<p>Set a null result.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.otherwise', 'type': 'function', 'url': 'Future.type.html#otherwise', 'doc': '<p>Map the failure of a future to a specific <code>value</code>.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.otherwise', 'type': 'function', 'url': 'Future.type.html#otherwise', 'doc': '<p>Apply a <code>mapper</code> function on this future.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.otherwise', 'type': 'function', 'url': 'Future.type.html#otherwise', 'doc': '<p>Map the failure of a future to a specific <code>value</code>.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.tryComplete', 'type': 'function', 'url': 'Future.type.html#tryComplete', 'doc': '<p>Try to set the result.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.tryComplete', 'type': 'function', 'url': 'Future.type.html#tryComplete', 'doc': '<p>Set the failure.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.tryComplete', 'type': 'function', 'url': 'Future.type.html#tryComplete', 'doc': '<p>Try to set the result.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.tryFail', 'type': 'function', 'url': 'Future.type.html#tryFail', 'doc': '<p>Try to set the failure.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.tryFail', 'type': 'function', 'url': 'Future.type.html#tryFail', 'doc': '<p>Try to set the failure.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.tryFail', 'type': 'function', 'url': 'Future.type.html#tryFail', 'doc': '<p>Try to set the failure.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.mapEmpty', 'type': 'function', 'url': 'Future.type.html#mapEmpty', 'doc': '<p>Map the result of a future to <code>null</code>.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.otherwiseEmpty', 'type': 'function', 'url': 'Future.type.html#otherwiseEmpty', 'doc': '<p>Map the failure of a future to <code>null</code>.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future.isComplete', 'type': 'function', 'url': 'Future.type.html#isComplete', 'doc': '<p>Has the future completed?\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Future', 'type': 'class', 'url': 'Future.type.html', 'doc': '<p>Represents the result of an action that may, or may not, have occurred yet.\n<p><', 'tags': [],'icons': ['icon-class']},
{'name': 'TimeoutStream.resume', 'type': 'function', 'url': 'TimeoutStream.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TimeoutStream.handler', 'type': 'function', 'url': 'TimeoutStream.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TimeoutStream.cancel', 'type': 'function', 'url': 'TimeoutStream.type.html#cancel', 'doc': '<p>Cancels the timeout. N</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TimeoutStream.exceptionHandler', 'type': 'function', 'url': 'TimeoutStream.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TimeoutStream.pause', 'type': 'function', 'url': 'TimeoutStream.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TimeoutStream.endHandler', 'type': 'function', 'url': 'TimeoutStream.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TimeoutStream', 'type': 'class', 'url': 'TimeoutStream.type.html', 'doc': '<p>A timeout stream is triggered by a timer, the <em>handler</em> will be call when the timer is fired,\nit can be once or several…</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'WorkerExecutor.close', 'type': 'function', 'url': 'WorkerExecutor.type.html#close', 'doc': '<p>Close the executor.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WorkerExecutor.isMetricsEnabled', 'type': 'function', 'url': 'WorkerExecutor.type.html#isMetricsEnabled', 'doc': '<p>Whether the metrics are enabled for this measured object</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WorkerExecutor.executeBlocking', 'type': 'function', 'url': 'WorkerExecutor.type.html#executeBlocking', 'doc': '<p>Safely execute some blocking code.\n<p>\nE', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WorkerExecutor.executeBlocking', 'type': 'function', 'url': 'WorkerExecutor.type.html#executeBlocking', 'doc': '<p>Like <a href="WorkerExecutor.type.html#executeBlocking">executeBlocking</a> called with ordered = true.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WorkerExecutor.executeBlocking', 'type': 'function', 'url': 'WorkerExecutor.type.html#executeBlocking', 'doc': '<p>Safely execute some blocking code.\n<p>\nE', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WorkerExecutor', 'type': 'class', 'url': 'WorkerExecutor.type.html', 'doc': '<p>An executor for executing blocking code in Vert.x .<p><', 'tags': [],'icons': ['icon-class']},
{'name': 'CompositeFuture.size', 'type': 'function', 'url': 'CompositeFuture.type.html#size', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CompositeFuture.cause', 'type': 'function', 'url': 'CompositeFuture.type.html#cause', 'doc': '<p>Returns a cause of a wrapped future</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CompositeFuture.cause', 'type': 'function', 'url': 'CompositeFuture.type.html#cause', 'doc': '<p>Returns a cause of a wrapped future</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CompositeFuture.result', 'type': 'function', 'url': 'CompositeFuture.type.html#result', 'doc': '<p>The result of the operation.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.map', 'type': 'function', 'url': 'CompositeFuture.type.html#map', 'doc': '<p>Apply a <code>mapper</code> function on this future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.map', 'type': 'function', 'url': 'CompositeFuture.type.html#map', 'doc': '<p>Apply a <code>mapper</code> function on this future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.completer', 'type': 'function', 'url': 'CompositeFuture.type.html#completer', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.isComplete', 'type': 'function', 'url': 'CompositeFuture.type.html#isComplete', 'doc': '<p>Returns true if a wrapped future is completed</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CompositeFuture.compose', 'type': 'function', 'url': 'CompositeFuture.type.html#compose', 'doc': '<p>Compose this future with a provided <code>next</code> future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.compose', 'type': 'function', 'url': 'CompositeFuture.type.html#compose', 'doc': '<p>Compose this future with a <code>mapper</code> function.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.compose', 'type': 'function', 'url': 'CompositeFuture.type.html#compose', 'doc': '<p>Compose this future with a provided <code>next</code> future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.failed', 'type': 'function', 'url': 'CompositeFuture.type.html#failed', 'doc': '<p>Returns true if a wrapped future is failed</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CompositeFuture.failed', 'type': 'function', 'url': 'CompositeFuture.type.html#failed', 'doc': '<p>Returns true if a wrapped future is failed</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CompositeFuture.succeeded', 'type': 'function', 'url': 'CompositeFuture.type.html#succeeded', 'doc': '<p>Returns true if a wrapped future is succeeded</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CompositeFuture.succeeded', 'type': 'function', 'url': 'CompositeFuture.type.html#succeeded', 'doc': '<p>Returns true if a wrapped future is succeeded</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CompositeFuture.setHandler', 'type': 'function', 'url': 'CompositeFuture.type.html#setHandler', 'doc': '<p>Set a handler for the result.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.recover', 'type': 'function', 'url': 'CompositeFuture.type.html#recover', 'doc': '<p>Handles a failure of this Future by returning the result of another Future.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.complete', 'type': 'function', 'url': 'CompositeFuture.type.html#complete', 'doc': '<p>Set the result.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.complete', 'type': 'function', 'url': 'CompositeFuture.type.html#complete', 'doc': '<p>Set this instance as result.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.complete', 'type': 'function', 'url': 'CompositeFuture.type.html#complete', 'doc': '<p>Set the result.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.otherwise', 'type': 'function', 'url': 'CompositeFuture.type.html#otherwise', 'doc': '<p>Apply a <code>mapper</code> function on this future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.otherwise', 'type': 'function', 'url': 'CompositeFuture.type.html#otherwise', 'doc': '<p>Map the failure of a future to a specific <code>value</code>.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.otherwise', 'type': 'function', 'url': 'CompositeFuture.type.html#otherwise', 'doc': '<p>Apply a <code>mapper</code> function on this future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.resultAt', 'type': 'function', 'url': 'CompositeFuture.type.html#resultAt', 'doc': '<p>Returns the result of a wrapped future</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CompositeFuture.tryComplete', 'type': 'function', 'url': 'CompositeFuture.type.html#tryComplete', 'doc': '<p>Try to set this instance as result.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.tryComplete', 'type': 'function', 'url': 'CompositeFuture.type.html#tryComplete', 'doc': '<p>Set the failure.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.tryComplete', 'type': 'function', 'url': 'CompositeFuture.type.html#tryComplete', 'doc': '<p>Try to set this instance as result.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture.otherwiseEmpty', 'type': 'function', 'url': 'CompositeFuture.type.html#otherwiseEmpty', 'doc': '<p>Map the failure of a future to <code>null</code>.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'CompositeFuture', 'type': 'class', 'url': 'CompositeFuture.type.html', 'doc': '<p>The composite future wraps a list of <a href="Future.type.html">futures</a>, it is useful when several futures\nneeds to be coordinated.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'context.isOnWorkerThread', 'type': 'function', 'url': 'context.object.html#isOnWorkerThread', 'doc': '<p>Is the current thread a worker thread?\n<p>\nN', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'context.isOnEventLoopThread', 'type': 'function', 'url': 'context.object.html#isOnEventLoopThread', 'doc': '<p>Is the current thread an event thread?\n<p>\nN', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'context.isOnVertxThread', 'type': 'function', 'url': 'context.object.html#isOnVertxThread', 'doc': '<p>Is the current thread a Vert.x thread?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'context', 'type': 'object', 'url': 'context.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'context', 'type': 'value', 'url': 'index.html#context', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.add', 'type': 'function', 'url': 'MultiMap.type.html#add', 'doc': '<p>Adds a new value with the specified name and value.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.remove', 'type': 'function', 'url': 'MultiMap.type.html#remove', 'doc': '<p>Removes the value with the given name</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.get', 'type': 'function', 'url': 'MultiMap.type.html#get', 'doc': '<p>Returns the value of with the specified name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.clear', 'type': 'function', 'url': 'MultiMap.type.html#clear', 'doc': '<p>Removes all</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.contains', 'type': 'function', 'url': 'MultiMap.type.html#contains', 'doc': '<p>Check if there is a header with the specified <code>name</code> and <code>value</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.contains', 'type': 'function', 'url': 'MultiMap.type.html#contains', 'doc': '<p>Checks to see if there is a value with the specified name</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.contains', 'type': 'function', 'url': 'MultiMap.type.html#contains', 'doc': '<p>Check if there is a header with the specified <code>name</code> and <code>value</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.size', 'type': 'function', 'url': 'MultiMap.type.html#size', 'doc': '<p>Return the number of keys.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.addAll', 'type': 'function', 'url': 'MultiMap.type.html#addAll', 'doc': '<p>Adds all the entries from another MultiMap to this one</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.set', 'type': 'function', 'url': 'MultiMap.type.html#set', 'doc': '<p>Sets a value under the specified name.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.names', 'type': 'function', 'url': 'MultiMap.type.html#names', 'doc': '<p>Gets a immutable <code>Set</code> of all names</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.setAll', 'type': 'function', 'url': 'MultiMap.type.html#setAll', 'doc': '<p>Cleans this instance.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.isEmpty', 'type': 'function', 'url': 'MultiMap.type.html#isEmpty', 'doc': '<p>Return true if empty</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap.getAll', 'type': 'function', 'url': 'MultiMap.type.html#getAll', 'doc': '<p>Returns the values with the specified name</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MultiMap', 'type': 'class', 'url': 'MultiMap.type.html', 'doc': '<p>This class represents a MultiMap of String keys to a List of String values.\n<p>\nI', 'tags': [],'icons': ['icon-class']},
{'name': 'compositeFuture.join', 'type': 'function', 'url': 'compositeFuture.object.html#join', 'doc': '<p>Return a composite future, succeeded when all futures are succeeded, failed when any future is failed.\n<p />\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.join', 'type': 'function', 'url': 'compositeFuture.object.html#join', 'doc': '<p>Like <a href="compositeFuture.type.html#join">join</a> but with 6 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.join', 'type': 'function', 'url': 'compositeFuture.object.html#join', 'doc': '<p>Like <a href="compositeFuture.type.html#join">join</a> but with 5 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.join', 'type': 'function', 'url': 'compositeFuture.object.html#join', 'doc': '<p>Like <a href="compositeFuture.type.html#join">join</a> but with 4 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.join', 'type': 'function', 'url': 'compositeFuture.object.html#join', 'doc': '<p>Like <a href="compositeFuture.type.html#join">join</a> but with 3 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.join', 'type': 'function', 'url': 'compositeFuture.object.html#join', 'doc': '<p>Like <a href="compositeFuture.type.html#join">join</a> but with a list of futures.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.join', 'type': 'function', 'url': 'compositeFuture.object.html#join', 'doc': '<p>Return a composite future, succeeded when all futures are succeeded, failed when any future is failed.\n<p />\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.all', 'type': 'function', 'url': 'compositeFuture.object.html#all', 'doc': '<p>Like <a href="compositeFuture.type.html#all">all</a> but with 3 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.all', 'type': 'function', 'url': 'compositeFuture.object.html#all', 'doc': '<p>Like <a href="compositeFuture.type.html#all">all</a> but with a list of futures.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.all', 'type': 'function', 'url': 'compositeFuture.object.html#all', 'doc': '<p>Return a composite future, succeeded when all futures are succeeded, failed when any future is failed.\n<p />\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.all', 'type': 'function', 'url': 'compositeFuture.object.html#all', 'doc': '<p>Like <a href="compositeFuture.type.html#all">all</a> but with 6 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.all', 'type': 'function', 'url': 'compositeFuture.object.html#all', 'doc': '<p>Like <a href="compositeFuture.type.html#all">all</a> but with 5 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.all', 'type': 'function', 'url': 'compositeFuture.object.html#all', 'doc': '<p>Like <a href="compositeFuture.type.html#all">all</a> but with 4 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.all', 'type': 'function', 'url': 'compositeFuture.object.html#all', 'doc': '<p>Like <a href="compositeFuture.type.html#all">all</a> but with 3 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.any', 'type': 'function', 'url': 'compositeFuture.object.html#any', 'doc': '<p>Like <a href="compositeFuture.type.html#any">any</a> but with 5 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.any', 'type': 'function', 'url': 'compositeFuture.object.html#any', 'doc': '<p>Return a composite future, succeeded when any futures is succeeded, failed when all futures are failed.\n<p />\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.any', 'type': 'function', 'url': 'compositeFuture.object.html#any', 'doc': '<p>Like <a href="compositeFuture.type.html#any">any</a> but with 3 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.any', 'type': 'function', 'url': 'compositeFuture.object.html#any', 'doc': '<p>Like <a href="compositeFuture.type.html#any">any</a> but with a list of futures.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.any', 'type': 'function', 'url': 'compositeFuture.object.html#any', 'doc': '<p>Like <a href="compositeFuture.type.html#any">any</a> but with 6 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.any', 'type': 'function', 'url': 'compositeFuture.object.html#any', 'doc': '<p>Like <a href="compositeFuture.type.html#any">any</a> but with 4 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture.any', 'type': 'function', 'url': 'compositeFuture.object.html#any', 'doc': '<p>Like <a href="compositeFuture.type.html#any">any</a> but with 5 futures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'compositeFuture', 'type': 'object', 'url': 'compositeFuture.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'compositeFuture', 'type': 'value', 'url': 'index.html#compositeFuture', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'multiMap.caseInsensitiveMultiMap', 'type': 'function', 'url': 'multiMap.object.html#caseInsensitiveMultiMap', 'doc': '<p>Create a multi-map implementation with case insensitive keys, for instance it can be used to hold some HTTP headers.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'multiMap', 'type': 'object', 'url': 'multiMap.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'multiMap', 'type': 'value', 'url': 'index.html#multiMap', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'vertx.vertx', 'type': 'function', 'url': 'vertx.object.html#vertx', 'doc': '<p>Creates a non clustered instance using the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'vertx.vertx', 'type': 'function', 'url': 'vertx.object.html#vertx', 'doc': '<p>Creates a non clustered instance using default options.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'vertx.vertx', 'type': 'function', 'url': 'vertx.object.html#vertx', 'doc': '<p>Creates a non clustered instance using the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'vertx.currentContext', 'type': 'function', 'url': 'vertx.object.html#currentContext', 'doc': '<p>Gets the current context</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'vertx.clusteredVertx', 'type': 'function', 'url': 'vertx.object.html#clusteredVertx', 'doc': '<p>Creates a clustered instance using the specified options.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'vertx', 'type': 'object', 'url': 'vertx.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'vertx', 'type': 'value', 'url': 'index.html#vertx', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'future.future', 'type': 'function', 'url': 'future.object.html#future', 'doc': '<p>Create a future that hasn\'t completed yet</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'future.future', 'type': 'function', 'url': 'future.object.html#future', 'doc': '<p>Create a future that hasn\'t completed yet and that is passed to the <code>handler</code> before it is returned.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'future.future', 'type': 'function', 'url': 'future.object.html#future', 'doc': '<p>Create a future that hasn\'t completed yet</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'future.succeededFuture', 'type': 'function', 'url': 'future.object.html#succeededFuture', 'doc': '<p>Create a succeeded future with a null result</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'future.succeededFuture', 'type': 'function', 'url': 'future.object.html#succeededFuture', 'doc': '<p>Created a succeeded future with the specified result.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'future.succeededFuture', 'type': 'function', 'url': 'future.object.html#succeededFuture', 'doc': '<p>Create a succeeded future with a null result</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'future.failedFuture', 'type': 'function', 'url': 'future.object.html#failedFuture', 'doc': '<p>Create a failed future with the specified failure message.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'future.failedFuture', 'type': 'function', 'url': 'future.object.html#failedFuture', 'doc': '<p>Create a failed future with the specified failure cause.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'future.failedFuture', 'type': 'function', 'url': 'future.object.html#failedFuture', 'doc': '<p>Create a failed future with the specified failure message.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'future', 'type': 'object', 'url': 'future.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'future', 'type': 'value', 'url': 'index.html#future', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'io.vertx.ceylon.core.buffer', 'type': 'package', 'url': 'buffer/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'buffer.buffer', 'type': 'function', 'url': 'buffer/buffer.object.html#buffer', 'doc': '<p>Create a new buffer given the initial size hint.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'buffer.buffer', 'type': 'function', 'url': 'buffer/buffer.object.html#buffer', 'doc': '<p>Create a new buffer from a string and using the specified encoding.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'buffer.buffer', 'type': 'function', 'url': 'buffer/buffer.object.html#buffer', 'doc': '<p>Create a new, empty buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'buffer.buffer', 'type': 'function', 'url': 'buffer/buffer.object.html#buffer', 'doc': '<p>Create a new buffer from a string.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'buffer.buffer', 'type': 'function', 'url': 'buffer/buffer.object.html#buffer', 'doc': '<p>Create a new buffer given the initial size hint.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'buffer', 'type': 'object', 'url': 'buffer/buffer.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'buffer', 'type': 'value', 'url': 'buffer/index.html#buffer', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.string', 'type': 'value', 'url': 'buffer/Buffer.type.html#string', 'doc': '<p>A developer-friendly string representing the instance.\nC</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'Buffer.toString', 'type': 'function', 'url': 'buffer/Buffer.type.html#toString', 'doc': '<p>Returns a <code>String</code> representation of the Buffer with the encoding specified by <code>enc</code></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.toString', 'type': 'function', 'url': 'buffer/Buffer.type.html#toString', 'doc': '<p>Returns a <code>String</code> representation of the Buffer with the encoding specified by <code>enc</code></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getByte', 'type': 'function', 'url': 'buffer/Buffer.type.html#getByte', 'doc': '<p>Returns the <code>byte</code> at position <code>pos</code> in the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getShort', 'type': 'function', 'url': 'buffer/Buffer.type.html#getShort', 'doc': '<p>Returns the <code>short</code> at position <code>pos</code> in the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getInt', 'type': 'function', 'url': 'buffer/Buffer.type.html#getInt', 'doc': '<p>Returns the <code>int</code> at position <code>pos</code> in the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getLong', 'type': 'function', 'url': 'buffer/Buffer.type.html#getLong', 'doc': '<p>Returns the <code>long</code> at position <code>pos</code> in the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getFloat', 'type': 'function', 'url': 'buffer/Buffer.type.html#getFloat', 'doc': '<p>Returns the <code>float</code> at position <code>pos</code> in the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getDouble', 'type': 'function', 'url': 'buffer/Buffer.type.html#getDouble', 'doc': '<p>Returns the <code>double</code> at position <code>pos</code> in the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.length', 'type': 'function', 'url': 'buffer/Buffer.type.html#length', 'doc': '<p>Returns the length of the buffer, measured in bytes.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.copy', 'type': 'function', 'url': 'buffer/Buffer.type.html#copy', 'doc': '<p>Returns a copy of the entire Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setByte', 'type': 'function', 'url': 'buffer/Buffer.type.html#setByte', 'doc': '<p>Sets the <code>byte</code> at position <code>pos</code> in the Buffer to the value <code>b</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setShort', 'type': 'function', 'url': 'buffer/Buffer.type.html#setShort', 'doc': '<p>Sets the <code>short</code> at position <code>pos</code> in the Buffer to the value <code>s</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setInt', 'type': 'function', 'url': 'buffer/Buffer.type.html#setInt', 'doc': '<p>Sets the <code>int</code> at position <code>pos</code> in the Buffer to the value <code>i</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setLong', 'type': 'function', 'url': 'buffer/Buffer.type.html#setLong', 'doc': '<p>Sets the <code>long</code> at position <code>pos</code> in the Buffer to the value <code>l</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setFloat', 'type': 'function', 'url': 'buffer/Buffer.type.html#setFloat', 'doc': '<p>Sets the <code>float</code> at position <code>pos</code> in the Buffer to the value <code>f</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setDouble', 'type': 'function', 'url': 'buffer/Buffer.type.html#setDouble', 'doc': '<p>Sets the <code>double</code> at position <code>pos</code> in the Buffer to the value <code>d</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.slice', 'type': 'function', 'url': 'buffer/Buffer.type.html#slice', 'doc': '<p>Returns a slice of this buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.slice', 'type': 'function', 'url': 'buffer/Buffer.type.html#slice', 'doc': '<p>Returns a slice of this buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.slice', 'type': 'function', 'url': 'buffer/Buffer.type.html#slice', 'doc': '<p>Returns a slice of this buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setBuffer', 'type': 'function', 'url': 'buffer/Buffer.type.html#setBuffer', 'doc': '<p>Sets the bytes at position <code>pos</code> in the Buffer to the bytes represented by the <code>Buffer b</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setBuffer', 'type': 'function', 'url': 'buffer/Buffer.type.html#setBuffer', 'doc': '<p>Sets the bytes at position <code>pos</code> in the Buffer to the bytes represented by the <code>Buffer b</code> on the given <code>offset</code> and <code>len</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setBuffer', 'type': 'function', 'url': 'buffer/Buffer.type.html#setBuffer', 'doc': '<p>Sets the bytes at position <code>pos</code> in the Buffer to the bytes represented by the <code>Buffer b</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendString', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendString', 'doc': '<p>Appends the specified <code>String</code> to the end of the Buffer with the encoding as specified by <code>enc</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendString', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendString', 'doc': '<p>Appends the specified <code>String str</code> to the end of the Buffer with UTF-8 encoding.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendString', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendString', 'doc': '<p>Appends the specified <code>String</code> to the end of the Buffer with the encoding as specified by <code>enc</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.toJsonObject', 'type': 'function', 'url': 'buffer/Buffer.type.html#toJsonObject', 'doc': '<p>Returns a Json object representation of the Buffer</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.toJsonArray', 'type': 'function', 'url': 'buffer/Buffer.type.html#toJsonArray', 'doc': '<p>Returns a Json array representation of the Buffer</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendByte', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendByte', 'doc': '<p>Appends the specified <code>byte</code> to the end of the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendInt', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendInt', 'doc': '<p>Appends the specified <code>int</code> to the end of the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendLong', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendLong', 'doc': '<p>Appends the specified <code>long</code> to the end of the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendFloat', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendFloat', 'doc': '<p>Appends the specified <code>float</code> to the end of the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendDouble', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendDouble', 'doc': '<p>Appends the specified <code>double</code> to the end of the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getString', 'type': 'function', 'url': 'buffer/Buffer.type.html#getString', 'doc': '<p>Returns a copy of a sub-sequence the Buffer as a <code>String</code> starting at position <code>start</code>\nand ending at position <code>end - 1</code>…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getString', 'type': 'function', 'url': 'buffer/Buffer.type.html#getString', 'doc': '<p>Returns a copy of a sub-sequence the Buffer as a <code>String</code> starting at position <code>start</code>\nand ending at position <code>end - 1</code>…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getString', 'type': 'function', 'url': 'buffer/Buffer.type.html#getString', 'doc': '<p>Returns a copy of a sub-sequence the Buffer as a <code>String</code> starting at position <code>start</code>\nand ending at position <code>end - 1</code>…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getBuffer', 'type': 'function', 'url': 'buffer/Buffer.type.html#getBuffer', 'doc': '<p>Returns a copy of a sub-sequence the Buffer as a <a href="../buffer/Buffer.type.html">Buffer</a> starting at position <code>start</code>\nand ending at position <code>end - 1</code></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setString', 'type': 'function', 'url': 'buffer/Buffer.type.html#setString', 'doc': '<p>Sets the bytes at position <code>pos</code> in the Buffer to the value of <code>str</code> encoded in encoding <code>enc</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setString', 'type': 'function', 'url': 'buffer/Buffer.type.html#setString', 'doc': '<p>Sets the bytes at position <code>pos</code> in the Buffer to the value of <code>str</code> encoded in UTF-8.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setString', 'type': 'function', 'url': 'buffer/Buffer.type.html#setString', 'doc': '<p>Sets the bytes at position <code>pos</code> in the Buffer to the value of <code>str</code> encoded in encoding <code>enc</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setIntLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#setIntLE', 'doc': '<p>Sets the <code>int</code> at position <code>pos</code> in the Buffer to the value <code>i</code> in the Little Endian Byte Order.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getIntLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#getIntLE', 'doc': '<p>Gets a 32-bit integer at the specified absolute <code>index</code> in this buffer with Little Endian Byte Order.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getUnsignedByte', 'type': 'function', 'url': 'buffer/Buffer.type.html#getUnsignedByte', 'doc': '<p>Returns the unsigned <code>byte</code> at position <code>pos</code> in the Buffer, as a <code>short</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getUnsignedInt', 'type': 'function', 'url': 'buffer/Buffer.type.html#getUnsignedInt', 'doc': '<p>Returns the unsigned <code>int</code> at position <code>pos</code> in the Buffer, as a <code>long</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getUnsignedIntLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#getUnsignedIntLE', 'doc': '<p>Returns the unsigned <code>int</code> at position <code>pos</code> in the Buffer, as a <code>long</code> in Little Endian Byte Order.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getLongLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#getLongLE', 'doc': '<p>Gets a 64-bit long integer at the specified absolute <code>index</code> in this buffer in Little Endian Byte Order.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getShortLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#getShortLE', 'doc': '<p>Gets a 16-bit short integer at the specified absolute <code>index</code> in this buffer in Little Endian Byte Order.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getUnsignedShort', 'type': 'function', 'url': 'buffer/Buffer.type.html#getUnsignedShort', 'doc': '<p>Returns the unsigned <code>short</code> at position <code>pos</code> in the Buffer, as an <code>int</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getUnsignedShortLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#getUnsignedShortLE', 'doc': '<p>Gets an unsigned 16-bit short integer at the specified absolute <code>index</code> in this buffer in Little Endian Byte Order.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getMedium', 'type': 'function', 'url': 'buffer/Buffer.type.html#getMedium', 'doc': '<p>Gets a 24-bit medium integer at the specified absolute <code>index</code> in this buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getMediumLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#getMediumLE', 'doc': '<p>Gets a 24-bit medium integer at the specified absolute <code>index</code> in this buffer in the Little Endian Byte Order.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getUnsignedMedium', 'type': 'function', 'url': 'buffer/Buffer.type.html#getUnsignedMedium', 'doc': '<p>Gets an unsigned 24-bit medium integer at the specified absolute <code>index</code> in this buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.getUnsignedMediumLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#getUnsignedMediumLE', 'doc': '<p>Gets an unsigned 24-bit medium integer at the specified absolute <code>index</code> in this buffer in Little Endian Byte Order.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendBuffer', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendBuffer', 'doc': '<p>Appends the specified <code>Buffer</code> starting at the <code>offset</code> using <code>len</code> to the end of this Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendBuffer', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendBuffer', 'doc': '<p>Appends the specified <code>Buffer</code> to the end of this Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendBuffer', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendBuffer', 'doc': '<p>Appends the specified <code>Buffer</code> starting at the <code>offset</code> using <code>len</code> to the end of this Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendUnsignedByte', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendUnsignedByte', 'doc': '<p>Appends the specified unsigned <code>byte</code> to the end of the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendIntLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendIntLE', 'doc': '<p>Appends the specified <code>int</code> to the end of the Buffer in the Little Endian Byte Order.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendUnsignedInt', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendUnsignedInt', 'doc': '<p>Appends the specified unsigned <code>int</code> to the end of the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendUnsignedIntLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendUnsignedIntLE', 'doc': '<p>Appends the specified unsigned <code>int</code> to the end of the Buffer in the Little Endian Byte Order.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendMedium', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendMedium', 'doc': '<p>Appends the specified 24bit <code>int</code> to the end of the Buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendMediumLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendMediumLE', 'doc': '<p>Appends the specified 24bit <code>int</code> to the end of the Buffer in the Little Endian Byte Order.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendLongLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendLongLE', 'doc': '<p>Appends the specified <code>long</code> to the end of the Buffer in the Little Endian Byte Order.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendShort', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendShort', 'doc': '<p>Appends the specified <code>short</code> to the end of the Buffer.The buffer will expand as necessary to accommodate any bytes…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendShortLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendShortLE', 'doc': '<p>Appends the specified <code>short</code> to the end of the Buffer in the Little Endian Byte Order.The buffer will expand as…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendUnsignedShort', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendUnsignedShort', 'doc': '<p>Appends the specified unsigned <code>short</code> to the end of the Buffer.The buffer will expand as necessary to accommodate any…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.appendUnsignedShortLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#appendUnsignedShortLE', 'doc': '<p>Appends the specified unsigned <code>short</code> to the end of the Buffer in the Little Endian Byte Order.The buffer will expand as…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setUnsignedByte', 'type': 'function', 'url': 'buffer/Buffer.type.html#setUnsignedByte', 'doc': '<p>Sets the unsigned <code>byte</code> at position <code>pos</code> in the Buffer to the value <code>b</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setUnsignedInt', 'type': 'function', 'url': 'buffer/Buffer.type.html#setUnsignedInt', 'doc': '<p>Sets the unsigned <code>int</code> at position <code>pos</code> in the Buffer to the value <code>i</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setUnsignedIntLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#setUnsignedIntLE', 'doc': '<p>Sets the unsigned <code>int</code> at position <code>pos</code> in the Buffer to the value <code>i</code> in the Little Endian Byte Order.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setMedium', 'type': 'function', 'url': 'buffer/Buffer.type.html#setMedium', 'doc': '<p>Sets the 24bit <code>int</code> at position <code>pos</code> in the Buffer to the value <code>i</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setMediumLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#setMediumLE', 'doc': '<p>Sets the 24bit <code>int</code> at position <code>pos</code> in the Buffer to the value <code>i</code>. in the Little Endian Byte Order<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setLongLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#setLongLE', 'doc': '<p>Sets the <code>long</code> at position <code>pos</code> in the Buffer to the value <code>l</code> in the Little Endian Byte Order.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setShortLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#setShortLE', 'doc': '<p>Sets the <code>short</code> at position <code>pos</code> in the Buffer to the value <code>s</code> in the Little Endian Byte Order.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setUnsignedShort', 'type': 'function', 'url': 'buffer/Buffer.type.html#setUnsignedShort', 'doc': '<p>Sets the unsigned <code>short</code> at position <code>pos</code> in the Buffer to the value <code>s</code>.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer.setUnsignedShortLE', 'type': 'function', 'url': 'buffer/Buffer.type.html#setUnsignedShortLE', 'doc': '<p>Sets the unsigned <code>short</code> at position <code>pos</code> in the Buffer to the value <code>s</code> in the Little Endian Byte Order.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Buffer', 'type': 'class', 'url': 'buffer/Buffer.type.html', 'doc': '<p>Most data is shuffled around inside Vert.x using buffers.\n<p>\nA', 'tags': [],'icons': ['icon-class']},
{'name': 'io.vertx.ceylon.core.cli', 'type': 'package', 'url': 'cli/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'Argument.toJson', 'type': 'function', 'url': 'cli/Argument.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'Argument', 'type': 'class', 'url': 'cli/Argument.type.html', 'doc': '<p>Defines a command line argument.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'argument.fromJson', 'type': 'function', 'url': 'cli/argument.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'cli/argument.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'cli/argument.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'argument.toCeylon', 'type': 'value', 'url': 'cli/argument.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'cli/argument.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'cli/argument.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'argument.toJava', 'type': 'value', 'url': 'cli/argument.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'argument.toJson', 'type': 'function', 'url': 'cli/argument.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'argument', 'type': 'object', 'url': 'cli/argument.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'argument', 'type': 'value', 'url': 'cli/index.html#argument', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Option.toJson', 'type': 'function', 'url': 'cli/Option.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'Option', 'type': 'class', 'url': 'cli/Option.type.html', 'doc': '<p>Models command line options.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'option.fromJson', 'type': 'function', 'url': 'cli/option.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'cli/option.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'cli/option.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'option.toCeylon', 'type': 'value', 'url': 'cli/option.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'cli/option.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'cli/option.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'option.toJava', 'type': 'value', 'url': 'cli/option.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'option.toJson', 'type': 'function', 'url': 'cli/option.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'option', 'type': 'object', 'url': 'cli/option.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'option', 'type': 'value', 'url': 'cli/index.html#option', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.isAskingForHelp', 'type': 'function', 'url': 'cli/CommandLine.type.html#isAskingForHelp', 'doc': '<p>Checks whether or not the user has passed a &ldquo;help&rdquo; option and is asking for help.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.isValid', 'type': 'function', 'url': 'cli/CommandLine.type.html#isValid', 'doc': '<p>Checks whether or not the command line is valid, i.e. all constraints from arguments and options have been\nsatisfied.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.cli', 'type': 'function', 'url': 'cli/CommandLine.type.html#cli', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.getOptionValue', 'type': 'function', 'url': 'cli/CommandLine.type.html#getOptionValue', 'doc': '<p>Gets the value of an option with the matching name (can be the long name, short name or arg name).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.getArgumentValue', 'type': 'function', 'url': 'cli/CommandLine.type.html#getArgumentValue', 'doc': '<p>Gets the value of an argument with the matching name (arg name).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.getArgumentValue', 'type': 'function', 'url': 'cli/CommandLine.type.html#getArgumentValue', 'doc': '<p>Gets the value of an argument with the given index.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.getArgumentValue', 'type': 'function', 'url': 'cli/CommandLine.type.html#getArgumentValue', 'doc': '<p>Gets the value of an argument with the matching name (arg name).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.isOptionAssigned', 'type': 'function', 'url': 'cli/CommandLine.type.html#isOptionAssigned', 'doc': '<p>Checks whether or not the given option has been assigned in the command line.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.getRawValues', 'type': 'function', 'url': 'cli/CommandLine.type.html#getRawValues', 'doc': '<p>Gets the raw values of the given option.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.getRawValuesForOption', 'type': 'function', 'url': 'cli/CommandLine.type.html#getRawValuesForOption', 'doc': '<p>Gets the raw values of the given option.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.getRawValuesForArgument', 'type': 'function', 'url': 'cli/CommandLine.type.html#getRawValuesForArgument', 'doc': '<p>Gets the raw values of the given argument.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.getRawValueForOption', 'type': 'function', 'url': 'cli/CommandLine.type.html#getRawValueForOption', 'doc': '<p>Gets the raw value of the given option.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.acceptMoreValues', 'type': 'function', 'url': 'cli/CommandLine.type.html#acceptMoreValues', 'doc': '<p>Checks whether or not the given option accept more values.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.getRawValueForArgument', 'type': 'function', 'url': 'cli/CommandLine.type.html#getRawValueForArgument', 'doc': '<p>Gets the raw value of the given argument.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.isArgumentAssigned', 'type': 'function', 'url': 'cli/CommandLine.type.html#isArgumentAssigned', 'doc': '<p>Checks whether or not the given argument has been assigned in the command line.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.isSeenInCommandLine', 'type': 'function', 'url': 'cli/CommandLine.type.html#isSeenInCommandLine', 'doc': '<p>Checks whether or not the given option has been seen in the user command line.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.allArguments', 'type': 'function', 'url': 'cli/CommandLine.type.html#allArguments', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine.isFlagEnabled', 'type': 'function', 'url': 'cli/CommandLine.type.html#isFlagEnabled', 'doc': '<p>Gets the value of an option marked as a flag.\n<p />\nC', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CommandLine', 'type': 'class', 'url': 'cli/CommandLine.type.html', 'doc': '<p>The parser transforms a CLI (a model) into an <a href="../cli/CommandLine.type.html">CommandLine</a>. T</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'commandLine.create', 'type': 'function', 'url': 'cli/commandLine.object.html#create', 'doc': '<p>Creates a command line object from the <a href="../cli/CLI.type.html">CLI</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'commandLine', 'type': 'object', 'url': 'cli/commandLine.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'commandLine', 'type': 'value', 'url': 'cli/index.html#commandLine', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'cli.create', 'type': 'function', 'url': 'cli/cli.object.html#create', 'doc': '<p>Creates an instance of <a href="../cli/CLI.type.html">CLI</a> using the default implementation.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'cli', 'type': 'object', 'url': 'cli/cli.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'cli', 'type': 'value', 'url': 'cli/index.html#cli', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.setName', 'type': 'function', 'url': 'cli/CLI.type.html#setName', 'doc': '<p>Sets the name of the CLI.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.addArguments', 'type': 'function', 'url': 'cli/CLI.type.html#addArguments', 'doc': '<p>Adds a set of arguments. U</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.parse', 'type': 'function', 'url': 'cli/CLI.type.html#parse', 'doc': '<p>Parses the user command line interface and create a new <a href="../cli/CommandLine.type.html">CommandLine</a> containing extracting values.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.parse', 'type': 'function', 'url': 'cli/CLI.type.html#parse', 'doc': '<p>Parses the user command line interface and create a new <a href="../cli/CommandLine.type.html">CommandLine</a> containing extracting values.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.parse', 'type': 'function', 'url': 'cli/CLI.type.html#parse', 'doc': '<p>Parses the user command line interface and create a new <a href="../cli/CommandLine.type.html">CommandLine</a> containing extracting values.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.setDescription', 'type': 'function', 'url': 'cli/CLI.type.html#setDescription', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.setOptions', 'type': 'function', 'url': 'cli/CLI.type.html#setOptions', 'doc': '<p>Sets the list of arguments.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.addOption', 'type': 'function', 'url': 'cli/CLI.type.html#addOption', 'doc': '<p>Adds an option.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.getOption', 'type': 'function', 'url': 'cli/CLI.type.html#getOption', 'doc': '<p>Gets an <a href="../cli/Option.type.html">Option</a> based on its name (short name, long name or argument name).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.setHidden', 'type': 'function', 'url': 'cli/CLI.type.html#setHidden', 'doc': '<p>Sets whether or not the current instance of <a href="../cli/CLI.type.html">CLI</a> must be hidden.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.addArgument', 'type': 'function', 'url': 'cli/CLI.type.html#addArgument', 'doc': '<p>Adds an argument.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.getArgument', 'type': 'function', 'url': 'cli/CLI.type.html#getArgument', 'doc': '<p>Gets an <a href="../cli/Argument.type.html">Argument</a> based on its index.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.getArgument', 'type': 'function', 'url': 'cli/CLI.type.html#getArgument', 'doc': '<p>Gets an <a href="../cli/Argument.type.html">Argument</a> based on its name (argument name).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.getArgument', 'type': 'function', 'url': 'cli/CLI.type.html#getArgument', 'doc': '<p>Gets an <a href="../cli/Argument.type.html">Argument</a> based on its index.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.removeArgument', 'type': 'function', 'url': 'cli/CLI.type.html#removeArgument', 'doc': '<p>Removes an argument identified by its index.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.addOptions', 'type': 'function', 'url': 'cli/CLI.type.html#addOptions', 'doc': '<p>Adds a set of options. U</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.setArguments', 'type': 'function', 'url': 'cli/CLI.type.html#setArguments', 'doc': '<p>Sets the list of arguments.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.setSummary', 'type': 'function', 'url': 'cli/CLI.type.html#setSummary', 'doc': '<p>Sets the summary of the CLI.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.removeOption', 'type': 'function', 'url': 'cli/CLI.type.html#removeOption', 'doc': '<p>Removes an option identified by its name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.getOptions', 'type': 'function', 'url': 'cli/CLI.type.html#getOptions', 'doc': '<p>Gets the list of options.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.isHidden', 'type': 'function', 'url': 'cli/CLI.type.html#isHidden', 'doc': '<p>Checks whether or not the current <a href="../cli/CLI.type.html">CLI</a> instance is hidden.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.getDescription', 'type': 'function', 'url': 'cli/CLI.type.html#getDescription', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.getSummary', 'type': 'function', 'url': 'cli/CLI.type.html#getSummary', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.getArguments', 'type': 'function', 'url': 'cli/CLI.type.html#getArguments', 'doc': '<p>Gets the list of defined arguments.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI.getName', 'type': 'function', 'url': 'cli/CLI.type.html#getName', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CLI', 'type': 'class', 'url': 'cli/CLI.type.html', 'doc': '<p>Interface defining a command-line interface (in other words a command such as \'run\', \'ls\'&hel</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'io.vertx.ceylon.core.datagram', 'type': 'package', 'url': 'datagram/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'DatagramSocketOptions.toJson', 'type': 'function', 'url': 'datagram/DatagramSocketOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'DatagramSocketOptions', 'type': 'class', 'url': 'datagram/DatagramSocketOptions.type.html', 'doc': '<p>Options used to configure a datagram socket.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'datagramSocketOptions.fromJson', 'type': 'function', 'url': 'datagram/datagramSocketOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'datagram/datagramSocketOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'datagram/datagramSocketOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'datagramSocketOptions.toCeylon', 'type': 'value', 'url': 'datagram/datagramSocketOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'datagram/datagramSocketOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'datagram/datagramSocketOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'datagramSocketOptions.toJava', 'type': 'value', 'url': 'datagram/datagramSocketOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'datagramSocketOptions.toJson', 'type': 'function', 'url': 'datagram/datagramSocketOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'datagramSocketOptions', 'type': 'object', 'url': 'datagram/datagramSocketOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'datagramSocketOptions', 'type': 'value', 'url': 'datagram/index.html#datagramSocketOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.listen', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#listen', 'doc': '<p>Start listening on the given port and host.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.resume', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.close', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#close', 'doc': '<p>Closes the <a href="../datagram/DatagramSocket.type.html">DatagramSocket</a> implementation asynchronous\nand notifies the handler once done.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.close', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#close', 'doc': '<p>Closes the <a href="../datagram/DatagramSocket.type.html">DatagramSocket</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.close', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#close', 'doc': '<p>Closes the <a href="../datagram/DatagramSocket.type.html">DatagramSocket</a> implementation asynchronous\nand notifies the handler once done.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.handler', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.isMetricsEnabled', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#isMetricsEnabled', 'doc': '<p>Whether the metrics are enabled for this measured object</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.localAddress', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#localAddress', 'doc': '<p>Return the <a href="../net/SocketAddress.type.html">SocketAddress</a> to which\nthis <a href="../datagram/DatagramSocket.type.html">DatagramSocket</a> is bound.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.sender', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#sender', 'doc': '<p>Returns a <code>WriteStream<Buffer></code> able to send  to the\n<a href="../net/SocketAddress.type.html">SocketAddress</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.send', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#send', 'doc': '<p>Write the given <code>String</code> to the <a href="../net/SocketAddress.type.html">SocketAddress</a> using the given encoding.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.send', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#send', 'doc': '<p>Write the given <code>String</code> to the <a href="../net/SocketAddress.type.html">SocketAddress</a> using UTF8 encoding.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.send', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#send', 'doc': '<p>Write the given <a href="../buffer/Buffer.type.html">Buffer</a> to the <a href="../net/SocketAddress.type.html">SocketAddress</a>.\nT</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.send', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#send', 'doc': '<p>Write the given <code>String</code> to the <a href="../net/SocketAddress.type.html">SocketAddress</a> using the given encoding.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.exceptionHandler', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.pause', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.endHandler', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.listenMulticastGroup', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#listenMulticastGroup', 'doc': '<p>Joins a multicast group and listens for packets send to it on the given network interface.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.listenMulticastGroup', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#listenMulticastGroup', 'doc': '<p>Joins a multicast group and listens for packets send to it.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.listenMulticastGroup', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#listenMulticastGroup', 'doc': '<p>Joins a multicast group and listens for packets send to it on the given network interface.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.unlistenMulticastGroup', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#unlistenMulticastGroup', 'doc': '<p>Leaves a multicast group and stops listening for packets send to it on the given network interface.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.unlistenMulticastGroup', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#unlistenMulticastGroup', 'doc': '<p>Leaves a multicast group and stops listening for packets send to it.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.unlistenMulticastGroup', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#unlistenMulticastGroup', 'doc': '<p>Leaves a multicast group and stops listening for packets send to it on the given network interface.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.blockMulticastGroup', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#blockMulticastGroup', 'doc': '<p>Block the given address for the given multicast address and notifies the  once\nthe operation completes.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.blockMulticastGroup', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#blockMulticastGroup', 'doc': '<p>Block the given address for the given multicast address on the given network interface and notifies\nthe  once the…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket.blockMulticastGroup', 'type': 'function', 'url': 'datagram/DatagramSocket.type.html#blockMulticastGroup', 'doc': '<p>Block the given address for the given multicast address and notifies the  once\nthe operation completes.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramSocket', 'type': 'class', 'url': 'datagram/DatagramSocket.type.html', 'doc': '<p>A datagram socket can be used to send <a href="../datagram/DatagramPacket.type.html">DatagramPacket</a>\'s to remote datagram servers\nand receive <a href="../datagram/DatagramPacket.type.html">DatagramPacket</a>s .\n<p>\nU', 'tags': [],'icons': ['icon-class']},
{'name': 'DatagramPacket.data', 'type': 'function', 'url': 'datagram/DatagramPacket.type.html#data', 'doc': '<p>Returns the data of the <a href="../datagram/DatagramPacket.type.html">DatagramPacket</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramPacket.sender', 'type': 'function', 'url': 'datagram/DatagramPacket.type.html#sender', 'doc': '<p>Returns the <a href="../net/SocketAddress.type.html">SocketAddress</a> of the sender that sent\nthis <a href="../datagram/DatagramPacket.type.html">DatagramPacket</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DatagramPacket', 'type': 'class', 'url': 'datagram/DatagramPacket.type.html', 'doc': '<p>A received datagram packet (UDP) which contains the data and information about the sender of the data itself.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'io.vertx.ceylon.core.dns', 'type': 'package', 'url': 'dns/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'DnsResponseCode', 'type': 'class', 'url': 'dns/DnsResponseCode.type.html', 'doc': '<p>Represents the possible response codes a server may send after receiving a\nquery.</p>', 'tags': [],'icons': ['icon-class', 'icon-decoration-abstract', 'icon-decoration-enumerated']},
{'name': 'noerror', 'type': 'object', 'url': 'dns/noerror.object.html', 'doc': '<p>ID 0, no error</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'noerror', 'type': 'value', 'url': 'dns/index.html#noerror', 'doc': '<p>ID 0, no error</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'formerror', 'type': 'object', 'url': 'dns/formerror.object.html', 'doc': '<p>ID 1, format error</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'formerror', 'type': 'value', 'url': 'dns/index.html#formerror', 'doc': '<p>ID 1, format error</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'servfail', 'type': 'object', 'url': 'dns/servfail.object.html', 'doc': '<p>ID 2, server failure</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'servfail', 'type': 'value', 'url': 'dns/index.html#servfail', 'doc': '<p>ID 2, server failure</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'nxdomain', 'type': 'object', 'url': 'dns/nxdomain.object.html', 'doc': '<p>ID 3, name error</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'nxdomain', 'type': 'value', 'url': 'dns/index.html#nxdomain', 'doc': '<p>ID 3, name error</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'notimpl', 'type': 'object', 'url': 'dns/notimpl.object.html', 'doc': '<p>ID 4, not implemented</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'notimpl', 'type': 'value', 'url': 'dns/index.html#notimpl', 'doc': '<p>ID 4, not implemented</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'refused', 'type': 'object', 'url': 'dns/refused.object.html', 'doc': '<p>ID 5, operation refused</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'refused', 'type': 'value', 'url': 'dns/index.html#refused', 'doc': '<p>ID 5, operation refused</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'yxdomain', 'type': 'object', 'url': 'dns/yxdomain.object.html', 'doc': '<p>ID 6, domain name should not exist</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'yxdomain', 'type': 'value', 'url': 'dns/index.html#yxdomain', 'doc': '<p>ID 6, domain name should not exist</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'yxrrset', 'type': 'object', 'url': 'dns/yxrrset.object.html', 'doc': '<p>ID 7, resource record set should not exist</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'yxrrset', 'type': 'value', 'url': 'dns/index.html#yxrrset', 'doc': '<p>ID 7, resource record set should not exist</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'nxrrset', 'type': 'object', 'url': 'dns/nxrrset.object.html', 'doc': '<p>ID 8, rrset does not exist</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'nxrrset', 'type': 'value', 'url': 'dns/index.html#nxrrset', 'doc': '<p>ID 8, rrset does not exist</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'notauth', 'type': 'object', 'url': 'dns/notauth.object.html', 'doc': '<p>ID 9, not authoritative for zone</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'notauth', 'type': 'value', 'url': 'dns/index.html#notauth', 'doc': '<p>ID 9, not authoritative for zone</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'notzone', 'type': 'object', 'url': 'dns/notzone.object.html', 'doc': '<p>ID 10, name not in zone</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'notzone', 'type': 'value', 'url': 'dns/index.html#notzone', 'doc': '<p>ID 10, name not in zone</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'badvers', 'type': 'object', 'url': 'dns/badvers.object.html', 'doc': '<p>ID 11, bad extension mechanism for version</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'badvers', 'type': 'value', 'url': 'dns/index.html#badvers', 'doc': '<p>ID 11, bad extension mechanism for version</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'badsig', 'type': 'object', 'url': 'dns/badsig.object.html', 'doc': '<p>ID 12, bad signature</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'badsig', 'type': 'value', 'url': 'dns/index.html#badsig', 'doc': '<p>ID 12, bad signature</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'badkey', 'type': 'object', 'url': 'dns/badkey.object.html', 'doc': '<p>ID 13, bad key</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'badkey', 'type': 'value', 'url': 'dns/index.html#badkey', 'doc': '<p>ID 13, bad key</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'badtime', 'type': 'object', 'url': 'dns/badtime.object.html', 'doc': '<p>ID 14, bad timestamp</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'badtime', 'type': 'value', 'url': 'dns/index.html#badtime', 'doc': '<p>ID 14, bad timestamp</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'dnsResponseCode.toString', 'type': 'function', 'url': 'dns/dnsResponseCode.object.html#toString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'dnsResponseCode.fromString', 'type': 'function', 'url': 'dns/dnsResponseCode.object.html#fromString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'dns/dnsResponseCode.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'dns/dnsResponseCode.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'dnsResponseCode.toJava', 'type': 'value', 'url': 'dns/dnsResponseCode.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'dns/dnsResponseCode.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'dns/dnsResponseCode.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'dnsResponseCode.toCeylon', 'type': 'value', 'url': 'dns/dnsResponseCode.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'dnsResponseCode', 'type': 'object', 'url': 'dns/dnsResponseCode.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'dnsResponseCode', 'type': 'value', 'url': 'dns/index.html#dnsResponseCode', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClientOptions.toJson', 'type': 'function', 'url': 'dns/DnsClientOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'DnsClientOptions', 'type': 'class', 'url': 'dns/DnsClientOptions.type.html', 'doc': '<p>Configuration options for Vert.x DNS client.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'dnsClientOptions.fromJson', 'type': 'function', 'url': 'dns/dnsClientOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'dns/dnsClientOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'dns/dnsClientOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'dnsClientOptions.toCeylon', 'type': 'value', 'url': 'dns/dnsClientOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'dns/dnsClientOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'dns/dnsClientOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'dnsClientOptions.toJava', 'type': 'value', 'url': 'dns/dnsClientOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'dnsClientOptions.toJson', 'type': 'function', 'url': 'dns/dnsClientOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'dnsClientOptions', 'type': 'object', 'url': 'dns/dnsClientOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'dnsClientOptions', 'type': 'value', 'url': 'dns/index.html#dnsClientOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AddressResolverOptions.toJson', 'type': 'function', 'url': 'dns/AddressResolverOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'AddressResolverOptions', 'type': 'class', 'url': 'dns/AddressResolverOptions.type.html', 'doc': '<p>Configuration options for Vert.x hostname resolver. T</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'addressResolverOptions.fromJson', 'type': 'function', 'url': 'dns/addressResolverOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'dns/addressResolverOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'dns/addressResolverOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'addressResolverOptions.toCeylon', 'type': 'value', 'url': 'dns/addressResolverOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'dns/addressResolverOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'dns/addressResolverOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'addressResolverOptions.toJava', 'type': 'value', 'url': 'dns/addressResolverOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'addressResolverOptions.toJson', 'type': 'function', 'url': 'dns/addressResolverOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'addressResolverOptions', 'type': 'object', 'url': 'dns/addressResolverOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'addressResolverOptions', 'type': 'value', 'url': 'dns/index.html#addressResolverOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.lookup', 'type': 'function', 'url': 'dns/DnsClient.type.html#lookup', 'doc': '<p>Try to lookup the A (ipv4) or AAAA (ipv6) record for the given name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.resolveA', 'type': 'function', 'url': 'dns/DnsClient.type.html#resolveA', 'doc': '<p>Try to resolve all A (ipv4) records for the given name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.lookup6', 'type': 'function', 'url': 'dns/DnsClient.type.html#lookup6', 'doc': '<p>Try to lookup the AAAA (ipv6) record for the given name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.lookup4', 'type': 'function', 'url': 'dns/DnsClient.type.html#lookup4', 'doc': '<p>Try to lookup the A (ipv4) record for the given name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.resolveCNAME', 'type': 'function', 'url': 'dns/DnsClient.type.html#resolveCNAME', 'doc': '<p>Try to resolve the CNAME record for the given name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.resolveAAAA', 'type': 'function', 'url': 'dns/DnsClient.type.html#resolveAAAA', 'doc': '<p>Try to resolve all AAAA (ipv6) records for the given name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.resolveMX', 'type': 'function', 'url': 'dns/DnsClient.type.html#resolveMX', 'doc': '<p>Try to resolve the MX records for the given name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.resolveTXT', 'type': 'function', 'url': 'dns/DnsClient.type.html#resolveTXT', 'doc': '<p>Try to resolve the TXT records for the given name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.resolvePTR', 'type': 'function', 'url': 'dns/DnsClient.type.html#resolvePTR', 'doc': '<p>Try to resolve the PTR record for the given name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.resolveNS', 'type': 'function', 'url': 'dns/DnsClient.type.html#resolveNS', 'doc': '<p>Try to resolve the NS records for the given name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.resolveSRV', 'type': 'function', 'url': 'dns/DnsClient.type.html#resolveSRV', 'doc': '<p>Try to resolve the SRV records for the given name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient.reverseLookup', 'type': 'function', 'url': 'dns/DnsClient.type.html#reverseLookup', 'doc': '<p>Try to do a reverse lookup of an IP address.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DnsClient', 'type': 'class', 'url': 'dns/DnsClient.type.html', 'doc': '<p>Provides a way to asynchronously lookup information from DNS servers.\n<p>\nP', 'tags': [],'icons': ['icon-class']},
{'name': 'MxRecord.name', 'type': 'function', 'url': 'dns/MxRecord.type.html#name', 'doc': '<p>The name of the MX record</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MxRecord.priority', 'type': 'function', 'url': 'dns/MxRecord.type.html#priority', 'doc': '<p>The priority of the MX record.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MxRecord', 'type': 'class', 'url': 'dns/MxRecord.type.html', 'doc': '<p>Represent a Mail-Exchange-Record (MX) which was resolved for a domain.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'SrvRecord.name', 'type': 'function', 'url': 'dns/SrvRecord.type.html#name', 'doc': '<p>Returns the name for the server being queried.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SrvRecord.priority', 'type': 'function', 'url': 'dns/SrvRecord.type.html#priority', 'doc': '<p>Returns the priority for this service record.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SrvRecord.target', 'type': 'function', 'url': 'dns/SrvRecord.type.html#target', 'doc': '<p>Returns the name of the host for the service.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SrvRecord.protocol', 'type': 'function', 'url': 'dns/SrvRecord.type.html#protocol', 'doc': '<p>Returns the protocol for the service being queried (i.e.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SrvRecord.port', 'type': 'function', 'url': 'dns/SrvRecord.type.html#port', 'doc': '<p>Returns the port the service is running on.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SrvRecord.weight', 'type': 'function', 'url': 'dns/SrvRecord.type.html#weight', 'doc': '<p>Returns the weight of this service record.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SrvRecord.service', 'type': 'function', 'url': 'dns/SrvRecord.type.html#service', 'doc': '<p>Returns the service\'s name (i.e.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SrvRecord', 'type': 'class', 'url': 'dns/SrvRecord.type.html', 'doc': '<p>Represent a Service-Record (SRV) which was resolved for a domain.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'io.vertx.ceylon.core.eventbus', 'type': 'package', 'url': 'eventbus/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'DeliveryOptions.toJson', 'type': 'function', 'url': 'eventbus/DeliveryOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'DeliveryOptions', 'type': 'class', 'url': 'eventbus/DeliveryOptions.type.html', 'doc': '<p>Delivery options are used to configure message delivery.\n<p>\nD', 'tags': [],'icons': ['icon-class']},
{'name': 'deliveryOptions.fromJson', 'type': 'function', 'url': 'eventbus/deliveryOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'eventbus/deliveryOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'eventbus/deliveryOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'deliveryOptions.toCeylon', 'type': 'value', 'url': 'eventbus/deliveryOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'eventbus/deliveryOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'eventbus/deliveryOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'deliveryOptions.toJava', 'type': 'value', 'url': 'eventbus/deliveryOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'deliveryOptions.toJson', 'type': 'function', 'url': 'eventbus/deliveryOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'deliveryOptions', 'type': 'object', 'url': 'eventbus/deliveryOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'deliveryOptions', 'type': 'value', 'url': 'eventbus/index.html#deliveryOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ReplyFailure', 'type': 'class', 'url': 'eventbus/ReplyFailure.type.html', 'doc': '<p>Represents the type of reply failure</p>', 'tags': [],'icons': ['icon-class', 'icon-decoration-abstract', 'icon-decoration-enumerated']},
{'name': 'timeout', 'type': 'object', 'url': 'eventbus/timeout.object.html', 'doc': '<p>The message send failed because no reply was received before the timeout time.</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'timeout', 'type': 'value', 'url': 'eventbus/index.html#timeout', 'doc': '<p>The message send failed because no reply was received before the timeout time.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'no_handlers', 'type': 'object', 'url': 'eventbus/no_handlers.object.html', 'doc': '<p>The message send failed because no handlers were available to handle the message.</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'no_handlers', 'type': 'value', 'url': 'eventbus/index.html#no_handlers', 'doc': '<p>The message send failed because no handlers were available to handle the message.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recipient_failure', 'type': 'object', 'url': 'eventbus/recipient_failure.object.html', 'doc': '<p>The message send failed because the recipient actively sent back a failure (rejected the message)</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'recipient_failure', 'type': 'value', 'url': 'eventbus/index.html#recipient_failure', 'doc': '<p>The message send failed because the recipient actively sent back a failure (rejected the message)</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'replyFailure.toString', 'type': 'function', 'url': 'eventbus/replyFailure.object.html#toString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'replyFailure.fromString', 'type': 'function', 'url': 'eventbus/replyFailure.object.html#fromString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'eventbus/replyFailure.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'eventbus/replyFailure.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'replyFailure.toJava', 'type': 'value', 'url': 'eventbus/replyFailure.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'eventbus/replyFailure.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'eventbus/replyFailure.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'replyFailure.toCeylon', 'type': 'value', 'url': 'eventbus/replyFailure.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'replyFailure', 'type': 'object', 'url': 'eventbus/replyFailure.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'replyFailure', 'type': 'value', 'url': 'eventbus/index.html#replyFailure', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBusOptions.toJson', 'type': 'function', 'url': 'eventbus/EventBusOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'EventBusOptions', 'type': 'class', 'url': 'eventbus/EventBusOptions.type.html', 'doc': '<p>Options to configure the event bus.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'eventBusOptions.fromJson', 'type': 'function', 'url': 'eventbus/eventBusOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'eventbus/eventBusOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'eventbus/eventBusOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'eventBusOptions.toCeylon', 'type': 'value', 'url': 'eventbus/eventBusOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'eventbus/eventBusOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'eventbus/eventBusOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'eventBusOptions.toJava', 'type': 'value', 'url': 'eventbus/eventBusOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'eventBusOptions.toJson', 'type': 'function', 'url': 'eventbus/eventBusOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'eventBusOptions', 'type': 'object', 'url': 'eventbus/eventBusOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'eventBusOptions', 'type': 'value', 'url': 'eventbus/index.html#eventBusOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.isMetricsEnabled', 'type': 'function', 'url': 'eventbus/EventBus.type.html#isMetricsEnabled', 'doc': '<p>Whether the metrics are enabled for this measured object</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.publish', 'type': 'function', 'url': 'eventbus/EventBus.type.html#publish', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#publish">publish</a> but specifying <code>options</code> that can be used to configure the delivery.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.publish', 'type': 'function', 'url': 'eventbus/EventBus.type.html#publish', 'doc': '<p>Publish a message.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.publish', 'type': 'function', 'url': 'eventbus/EventBus.type.html#publish', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#publish">publish</a> but specifying <code>options</code> that can be used to configure the delivery.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.publisher', 'type': 'function', 'url': 'eventbus/EventBus.type.html#publisher', 'doc': '<p>Create a message publisher against the specified address.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.publisher', 'type': 'function', 'url': 'eventbus/EventBus.type.html#publisher', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#publisher">publisher</a> but specifying delivery options that will be used for configuring the delivery of\nthe message.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.publisher', 'type': 'function', 'url': 'eventbus/EventBus.type.html#publisher', 'doc': '<p>Create a message publisher against the specified address.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.consumer', 'type': 'function', 'url': 'eventbus/EventBus.type.html#consumer', 'doc': '<p>Create a consumer and register it against the specified address.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.consumer', 'type': 'function', 'url': 'eventbus/EventBus.type.html#consumer', 'doc': '<p>Create a message consumer against the specified address.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.consumer', 'type': 'function', 'url': 'eventbus/EventBus.type.html#consumer', 'doc': '<p>Create a consumer and register it against the specified address.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.sender', 'type': 'function', 'url': 'eventbus/EventBus.type.html#sender', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#sender">sender</a> but specifying delivery options that will be used for configuring the delivery of\nthe message.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.sender', 'type': 'function', 'url': 'eventbus/EventBus.type.html#sender', 'doc': '<p>Create a message sender against the specified address.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.sender', 'type': 'function', 'url': 'eventbus/EventBus.type.html#sender', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#sender">sender</a> but specifying delivery options that will be used for configuring the delivery of\nthe message.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.send', 'type': 'function', 'url': 'eventbus/EventBus.type.html#send', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#send">send</a> but specifying a <code>replyHandler</code> that will be called if the recipient\nsubsequently replies to the message.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.send', 'type': 'function', 'url': 'eventbus/EventBus.type.html#send', 'doc': '<p>Sends a message.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.send', 'type': 'function', 'url': 'eventbus/EventBus.type.html#send', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#send">send</a> but specifying <code>options</code> that can be used to configure the delivery.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.send', 'type': 'function', 'url': 'eventbus/EventBus.type.html#send', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#send">send</a> but specifying a <code>replyHandler</code> that will be called if the recipient\nsubsequently replies to the message.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.send', 'type': 'function', 'url': 'eventbus/EventBus.type.html#send', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#send">send</a> but specifying a <code>replyHandler</code> that will be called if the recipient\nsubsequently replies to the message.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.localConsumer', 'type': 'function', 'url': 'eventbus/EventBus.type.html#localConsumer', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#consumer">consumer</a> but the address won\'t be propagated across the cluster.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.localConsumer', 'type': 'function', 'url': 'eventbus/EventBus.type.html#localConsumer', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#consumer">consumer</a> but the address won\'t be propagated across the cluster.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.localConsumer', 'type': 'function', 'url': 'eventbus/EventBus.type.html#localConsumer', 'doc': '<p>Like <a href="../eventbus/EventBus.type.html#consumer">consumer</a> but the address won\'t be propagated across the cluster.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.addInterceptor', 'type': 'function', 'url': 'eventbus/EventBus.type.html#addInterceptor', 'doc': '<p>Add an interceptor that will be called whenever a message is sent from Vert.x</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus.removeInterceptor', 'type': 'function', 'url': 'eventbus/EventBus.type.html#removeInterceptor', 'doc': '<p>Remove an interceptor</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'EventBus', 'type': 'class', 'url': 'eventbus/EventBus.type.html', 'doc': '<p>A Vert.x event-bus is a light-weight distributed messaging system which allows different parts of your application,\nor…</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'Message.address', 'type': 'function', 'url': 'eventbus/Message.type.html#address', 'doc': '<p>The address the message was sent to</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Message.isSend', 'type': 'function', 'url': 'eventbus/Message.type.html#isSend', 'doc': '<p>Signals if this message represents a send or publish event.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Message.headers', 'type': 'function', 'url': 'eventbus/Message.type.html#headers', 'doc': '<p>Multi-map of message headers.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Message.body', 'type': 'function', 'url': 'eventbus/Message.type.html#body', 'doc': '<p>The body of the message.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Message.fail', 'type': 'function', 'url': 'eventbus/Message.type.html#fail', 'doc': '<p>Signal to the sender that processing of this message failed.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Message.reply', 'type': 'function', 'url': 'eventbus/Message.type.html#reply', 'doc': '<p>Reply to this message.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Message.reply', 'type': 'function', 'url': 'eventbus/Message.type.html#reply', 'doc': '<p>The same as <code>reply(R message)</code> but you can specify handler for the reply - i.e.\nto receive the reply to the reply.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Message.reply', 'type': 'function', 'url': 'eventbus/Message.type.html#reply', 'doc': '<p>The same as <code>reply(R message, DeliveryOptions)</code> but you can specify handler for the reply - i.e.\nto receive the reply to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Message.reply', 'type': 'function', 'url': 'eventbus/Message.type.html#reply', 'doc': '<p>Link <a href="../eventbus/Message.type.html#reply">reply</a> but allows you to specify delivery options for the reply.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Message.reply', 'type': 'function', 'url': 'eventbus/Message.type.html#reply', 'doc': '<p>Reply to this message.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Message.replyAddress', 'type': 'function', 'url': 'eventbus/Message.type.html#replyAddress', 'doc': '<p>The reply address.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Message', 'type': 'class', 'url': 'eventbus/Message.type.html', 'doc': '<p>Represents a message that is received from the event bus in a handler.\n<p>\nM', 'tags': [],'icons': ['icon-class']},
{'name': 'SendContext.next', 'type': 'function', 'url': 'eventbus/SendContext.type.html#next', 'doc': '<p>Call the next interceptor</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SendContext.message', 'type': 'function', 'url': 'eventbus/SendContext.type.html#message', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SendContext.send', 'type': 'function', 'url': 'eventbus/SendContext.type.html#send', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SendContext.sentBody', 'type': 'function', 'url': 'eventbus/SendContext.type.html#sentBody', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SendContext', 'type': 'class', 'url': 'eventbus/SendContext.type.html', 'doc': '<p>Encapsulates a message being sent from Vert.x.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'MessageConsumer.resume', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.handler', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.address', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#address', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.getMaxBufferedMessages', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#getMaxBufferedMessages', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.isRegistered', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#isRegistered', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.unregister', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#unregister', 'doc': '<p>Unregisters the handler which created this registration</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.unregister', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#unregister', 'doc': '<p>Unregisters the handler which created this registration</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.unregister', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#unregister', 'doc': '<p>Unregisters the handler which created this registration</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.exceptionHandler', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.completionHandler', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#completionHandler', 'doc': '<p>Optional method which can be called to indicate when the registration has been propagated across the cluster.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.pause', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.endHandler', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.bodyStream', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#bodyStream', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer.setMaxBufferedMessages', 'type': 'function', 'url': 'eventbus/MessageConsumer.type.html#setMaxBufferedMessages', 'doc': '<p>Set the number of messages this registration will buffer when this stream is paused. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageConsumer', 'type': 'class', 'url': 'eventbus/MessageConsumer.type.html', 'doc': '<p>An event bus consumer object representing a stream of message to an <a href="../eventbus/EventBus.type.html">EventBus</a> address that can\nbe read from.\n<p>\nT', 'tags': [],'icons': ['icon-class']},
{'name': 'MessageProducer.write', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#write', 'doc': '<p>Write some data to the stream. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.close', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#close', 'doc': '<p>Closes the producer, this method should be called when the message producer is not used anymore.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.address', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#address', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.end', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#end', 'doc': '<p>Closes the producer, calls <a href="../eventbus/MessageProducer.type.html#close">close</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.end', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#end', 'doc': '<p>Same as <a href="../eventbus/MessageProducer.type.html#end">end</a> but writes some data to the stream before ending.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.end', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#end', 'doc': '<p>Closes the producer, calls <a href="../eventbus/MessageProducer.type.html#close">close</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.send', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#send', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.send', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#send', 'doc': '<p>Synonym for <a href="../eventbus/MessageProducer.type.html#write">write</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.send', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#send', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.exceptionHandler', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.deliveryOptions', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#deliveryOptions', 'doc': '<p>Update the delivery options of this producer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.setWriteQueueMaxSize', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#setWriteQueueMaxSize', 'doc': '<p>Set the maximum size of the write queue to <code>maxSize</code>. Y</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.drainHandler', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#drainHandler', 'doc': '<p>Set a drain handler on the stream. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer.writeQueueFull', 'type': 'function', 'url': 'eventbus/MessageProducer.type.html#writeQueueFull', 'doc': '<p>This will return <code>true</code> if there are more bytes in the write queue than the value set using <a href="../eventbus/MessageProducer.type.html#setWriteQueueMaxSize">setWriteQueueMaxSize</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MessageProducer', 'type': 'class', 'url': 'eventbus/MessageProducer.type.html', 'doc': '<p>Represents a stream of message that can be written to.\n<p><', 'tags': [],'icons': ['icon-class']},
{'name': 'io.vertx.ceylon.core.file', 'type': 'package', 'url': 'file/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'CopyOptions.toJson', 'type': 'function', 'url': 'file/CopyOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'CopyOptions', 'type': 'class', 'url': 'file/CopyOptions.type.html', 'doc': '<p>Describes the copy (and move) options.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'copyOptions.fromJson', 'type': 'function', 'url': 'file/copyOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'file/copyOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'file/copyOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'copyOptions.toJava', 'type': 'value', 'url': 'file/copyOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'copyOptions.toJson', 'type': 'function', 'url': 'file/copyOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'copyOptions', 'type': 'object', 'url': 'file/copyOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'copyOptions', 'type': 'value', 'url': 'file/index.html#copyOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'OpenOptions.toJson', 'type': 'function', 'url': 'file/OpenOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'OpenOptions', 'type': 'class', 'url': 'file/OpenOptions.type.html', 'doc': '<p>Describes how an <a href="../file/AsyncFile.type.html">AsyncFile</a> should be opened.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'openOptions.fromJson', 'type': 'function', 'url': 'file/openOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'file/openOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'file/openOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'openOptions.toJava', 'type': 'value', 'url': 'file/openOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'openOptions.toJson', 'type': 'function', 'url': 'file/openOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'openOptions', 'type': 'object', 'url': 'file/openOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'openOptions', 'type': 'value', 'url': 'file/index.html#openOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.props', 'type': 'function', 'url': 'file/FileSystem.type.html#props', 'doc': '<p>Obtain properties for the file represented by <code>path</code>, asynchronously.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.delete', 'type': 'function', 'url': 'file/FileSystem.type.html#delete', 'doc': '<p>Deletes the file represented by the specified <code>path</code>, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.copy', 'type': 'function', 'url': 'file/FileSystem.type.html#copy', 'doc': '<p>Copy a file from the path <code>from</code> to path <code>to</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.copy', 'type': 'function', 'url': 'file/FileSystem.type.html#copy', 'doc': '<p>Copy a file from the path <code>from</code> to path <code>to</code>, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.copy', 'type': 'function', 'url': 'file/FileSystem.type.html#copy', 'doc': '<p>Copy a file from the path <code>from</code> to path <code>to</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.exists', 'type': 'function', 'url': 'file/FileSystem.type.html#exists', 'doc': '<p>Determines whether the file as specified by the path <code>path</code> exists, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdir', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdir', 'doc': '<p>Create the directory represented by <code>path</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdir', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdir', 'doc': '<p>Create the directory represented by <code>path</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdir', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdir', 'doc': '<p>Create the directory represented by <code>path</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdirs', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdirs', 'doc': '<p>Create the directory represented by <code>path</code> and any non existent parents, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdirs', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdirs', 'doc': '<p>Create the directory represented by <code>path</code> and any non existent parents, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdirs', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdirs', 'doc': '<p>Create the directory represented by <code>path</code> and any non existent parents, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.truncate', 'type': 'function', 'url': 'file/FileSystem.type.html#truncate', 'doc': '<p>Truncate the file represented by <code>path</code> to length <code>len</code> in bytes, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.open', 'type': 'function', 'url': 'file/FileSystem.type.html#open', 'doc': '<p>Open the file represented by <code>path</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.move', 'type': 'function', 'url': 'file/FileSystem.type.html#move', 'doc': '<p>Move a file from the path <code>from</code> to path <code>to</code>, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.move', 'type': 'function', 'url': 'file/FileSystem.type.html#move', 'doc': '<p>Move a file from the path <code>from</code> to path <code>to</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.move', 'type': 'function', 'url': 'file/FileSystem.type.html#move', 'doc': '<p>Move a file from the path <code>from</code> to path <code>to</code>, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.chmod', 'type': 'function', 'url': 'file/FileSystem.type.html#chmod', 'doc': '<p>Change the permissions on the file represented by <code>path</code> to <code>perms</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.readFile', 'type': 'function', 'url': 'file/FileSystem.type.html#readFile', 'doc': '<p>Reads the entire file as represented by the path <code>path</code> as a , asynchronously.\n<p>\nD', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.createFile', 'type': 'function', 'url': 'file/FileSystem.type.html#createFile', 'doc': '<p>Creates an empty file with the specified <code>path</code> and permissions <code>perms</code>, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.createFile', 'type': 'function', 'url': 'file/FileSystem.type.html#createFile', 'doc': '<p>Creates an empty file with the specified <code>path</code>, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.createFile', 'type': 'function', 'url': 'file/FileSystem.type.html#createFile', 'doc': '<p>Creates an empty file with the specified <code>path</code> and permissions <code>perms</code>, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.symlink', 'type': 'function', 'url': 'file/FileSystem.type.html#symlink', 'doc': '<p>Create a symbolic link on the file system from <code>link</code> to <code>existing</code>, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.link', 'type': 'function', 'url': 'file/FileSystem.type.html#link', 'doc': '<p>Create a hard link on the file system from <code>link</code> to <code>existing</code>, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.chown', 'type': 'function', 'url': 'file/FileSystem.type.html#chown', 'doc': '<p>Change the ownership on the file represented by <code>path</code> to <code>user</code> and {code group}, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.readSymlink', 'type': 'function', 'url': 'file/FileSystem.type.html#readSymlink', 'doc': '<p>Returns the path representing the file that the symbolic link specified by <code>link</code> points to, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.writeFile', 'type': 'function', 'url': 'file/FileSystem.type.html#writeFile', 'doc': '<p>Creates the file, and writes the specified <code>Buffer data</code> to the file represented by the path <code>path</code>,\nasynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.unlink', 'type': 'function', 'url': 'file/FileSystem.type.html#unlink', 'doc': '<p>Unlinks the link on the file system represented by the path <code>link</code>, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.lprops', 'type': 'function', 'url': 'file/FileSystem.type.html#lprops', 'doc': '<p>Obtain properties for the link represented by <code>path</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.moveBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#moveBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#move">move</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.truncateBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#truncateBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#truncate">truncate</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.readDir', 'type': 'function', 'url': 'file/FileSystem.type.html#readDir', 'doc': '<p>Read the contents of the directory specified by <code>path</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.readDir', 'type': 'function', 'url': 'file/FileSystem.type.html#readDir', 'doc': '<p>Read the contents of the directory specified by <code>path</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.readDir', 'type': 'function', 'url': 'file/FileSystem.type.html#readDir', 'doc': '<p>Read the contents of the directory specified by <code>path</code>, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.copyRecursiveBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#copyRecursiveBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#copyRecursive">copyRecursive</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.fsProps', 'type': 'function', 'url': 'file/FileSystem.type.html#fsProps', 'doc': '<p>Returns properties of the file-system being used by the specified <code>path</code>, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.openBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#openBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#open">open</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.copyRecursive', 'type': 'function', 'url': 'file/FileSystem.type.html#copyRecursive', 'doc': '<p>Copy a file from the path <code>from</code> to path <code>to</code>, asynchronously.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.copyBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#copyBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#copy">copy</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.chmodBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#chmodBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html">#chmod(String, String, Handler)</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.chmodRecursive', 'type': 'function', 'url': 'file/FileSystem.type.html#chmodRecursive', 'doc': '<p>Change the permissions on the file represented by <code>path</code> to <code>perms</code>, asynchronously.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.chmodRecursiveBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#chmodRecursiveBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#chmodRecursive">chmodRecursive</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.chownBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#chownBlocking', 'doc': '<p>Blocking version of</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.propsBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#propsBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#props">props</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.lpropsBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#lpropsBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#lprops">lprops</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.linkBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#linkBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#link">link</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.symlinkBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#symlinkBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#link">link</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.unlinkBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#unlinkBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#unlink">unlink</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.readSymlinkBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#readSymlinkBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#readSymlink">readSymlink</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.deleteBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#deleteBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#delete">delete</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.deleteRecursive', 'type': 'function', 'url': 'file/FileSystem.type.html#deleteRecursive', 'doc': '<p>Deletes the file represented by the specified <code>path</code>, asynchronously.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.deleteRecursiveBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#deleteRecursiveBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#deleteRecursive">deleteRecursive</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdirBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdirBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#mkdir">mkdir</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdirBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdirBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#mkdir">mkdir</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdirBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdirBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#mkdir">mkdir</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdirsBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdirsBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#mkdirs">mkdirs</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdirsBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdirsBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#mkdirs">mkdirs</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.mkdirsBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#mkdirsBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#mkdirs">mkdirs</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.readDirBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#readDirBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#readDir">readDir</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.readDirBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#readDirBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#readDir">readDir</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.readDirBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#readDirBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#readDir">readDir</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.readFileBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#readFileBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#readFile">readFile</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.writeFileBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#writeFileBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#writeFile">writeFile</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.createFileBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#createFileBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#createFile">createFile</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.createFileBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#createFileBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#createFile">createFile</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.createFileBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#createFileBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#createFile">createFile</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.existsBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#existsBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#exists">exists</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem.fsPropsBlocking', 'type': 'function', 'url': 'file/FileSystem.type.html#fsPropsBlocking', 'doc': '<p>Blocking version of <a href="../file/FileSystem.type.html#fsProps">fsProps</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystem', 'type': 'class', 'url': 'file/FileSystem.type.html', 'doc': '<p>Contains a broad set of operations for manipulating files on the file system.\n<p>\nA', 'tags': [],'icons': ['icon-class']},
{'name': 'AsyncFile.write', 'type': 'function', 'url': 'file/AsyncFile.type.html#write', 'doc': '<p>Write a <a href="../buffer/Buffer.type.html">Buffer</a> to the file at position <code>position</code> in the file, asynchronously.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.write', 'type': 'function', 'url': 'file/AsyncFile.type.html#write', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'AsyncFile.write', 'type': 'function', 'url': 'file/AsyncFile.type.html#write', 'doc': '<p>Write a <a href="../buffer/Buffer.type.html">Buffer</a> to the file at position <code>position</code> in the file, asynchronously.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.read', 'type': 'function', 'url': 'file/AsyncFile.type.html#read', 'doc': '<p>Reads <code>length</code> bytes of data from the file at position <code>position</code> in the file, asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.resume', 'type': 'function', 'url': 'file/AsyncFile.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.flush', 'type': 'function', 'url': 'file/AsyncFile.type.html#flush', 'doc': '<p>Flush any writes made to this file to underlying persistent storage.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.flush', 'type': 'function', 'url': 'file/AsyncFile.type.html#flush', 'doc': '<p>Same as <a href="../file/AsyncFile.type.html#flush">flush</a> but the handler will be called when the flush is complete or if an error occurs</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.flush', 'type': 'function', 'url': 'file/AsyncFile.type.html#flush', 'doc': '<p>Flush any writes made to this file to underlying persistent storage.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.close', 'type': 'function', 'url': 'file/AsyncFile.type.html#close', 'doc': '<p>Close the file.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.close', 'type': 'function', 'url': 'file/AsyncFile.type.html#close', 'doc': '<p>Close the file.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.close', 'type': 'function', 'url': 'file/AsyncFile.type.html#close', 'doc': '<p>Close the file.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.handler', 'type': 'function', 'url': 'file/AsyncFile.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.end', 'type': 'function', 'url': 'file/AsyncFile.type.html#end', 'doc': '<p>Close the file, see <a href="../file/AsyncFile.type.html#close">close</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.end', 'type': 'function', 'url': 'file/AsyncFile.type.html#end', 'doc': '<p>Same as <a href="../file/AsyncFile.type.html#end">end</a> but writes some data to the stream before ending.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'AsyncFile.end', 'type': 'function', 'url': 'file/AsyncFile.type.html#end', 'doc': '<p>Close the file, see <a href="../file/AsyncFile.type.html#close">close</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.exceptionHandler', 'type': 'function', 'url': 'file/AsyncFile.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.setReadPos', 'type': 'function', 'url': 'file/AsyncFile.type.html#setReadPos', 'doc': '<p>Sets the position from which data will be read from when using the file as a <a href="../streams/ReadStream.type.html">ReadStream</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.setWritePos', 'type': 'function', 'url': 'file/AsyncFile.type.html#setWritePos', 'doc': '<p>Sets the position from which data will be written when using the file as a <a href="../streams/WriteStream.type.html">WriteStream</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.setReadBufferSize', 'type': 'function', 'url': 'file/AsyncFile.type.html#setReadBufferSize', 'doc': '<p>Sets the buffer size that will be used to read the data from the file.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.setWriteQueueMaxSize', 'type': 'function', 'url': 'file/AsyncFile.type.html#setWriteQueueMaxSize', 'doc': '<p>Set the maximum size of the write queue to <code>maxSize</code>. Y</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.drainHandler', 'type': 'function', 'url': 'file/AsyncFile.type.html#drainHandler', 'doc': '<p>Set a drain handler on the stream. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.writeQueueFull', 'type': 'function', 'url': 'file/AsyncFile.type.html#writeQueueFull', 'doc': '<p>This will return <code>true</code> if there are more bytes in the write queue than the value set using <a href="../file/AsyncFile.type.html#setWriteQueueMaxSize">setWriteQueueMaxSize</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.pause', 'type': 'function', 'url': 'file/AsyncFile.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile.endHandler', 'type': 'function', 'url': 'file/AsyncFile.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncFile', 'type': 'class', 'url': 'file/AsyncFile.type.html', 'doc': '<p>Represents a file on the file-system which can be read from, or written to asynchronously.\n<p>\nT', 'tags': [],'icons': ['icon-class']},
{'name': 'FileProps.size', 'type': 'function', 'url': 'file/FileProps.type.html#size', 'doc': '<p>The size of the file, in bytes</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileProps.isSymbolicLink', 'type': 'function', 'url': 'file/FileProps.type.html#isSymbolicLink', 'doc': '<p>Is the file a symbolic link?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileProps.isDirectory', 'type': 'function', 'url': 'file/FileProps.type.html#isDirectory', 'doc': '<p>Is the file a directory?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileProps.isRegularFile', 'type': 'function', 'url': 'file/FileProps.type.html#isRegularFile', 'doc': '<p>Is the file a regular file?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileProps.isOther', 'type': 'function', 'url': 'file/FileProps.type.html#isOther', 'doc': '<p>Is the file some other type?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileProps.lastModifiedTime', 'type': 'function', 'url': 'file/FileProps.type.html#lastModifiedTime', 'doc': '<p>The date the file was last modified</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileProps.lastAccessTime', 'type': 'function', 'url': 'file/FileProps.type.html#lastAccessTime', 'doc': '<p>The date the file was last accessed</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileProps.creationTime', 'type': 'function', 'url': 'file/FileProps.type.html#creationTime', 'doc': '<p>The date the file was created</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileProps', 'type': 'class', 'url': 'file/FileProps.type.html', 'doc': '<p>Represents properties of a file on the file system.\n<p><', 'tags': [],'icons': ['icon-class']},
{'name': 'FileSystemProps.unallocatedSpace', 'type': 'function', 'url': 'file/FileSystemProps.type.html#unallocatedSpace', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystemProps.usableSpace', 'type': 'function', 'url': 'file/FileSystemProps.type.html#usableSpace', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystemProps.totalSpace', 'type': 'function', 'url': 'file/FileSystemProps.type.html#totalSpace', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileSystemProps', 'type': 'class', 'url': 'file/FileSystemProps.type.html', 'doc': '<p>Represents properties of the file system.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'io.vertx.ceylon.core.http', 'type': 'package', 'url': 'http/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'WebsocketVersion', 'type': 'class', 'url': 'http/WebsocketVersion.type.html', 'doc': '<p>Represents the WebSocket version</p>', 'tags': [],'icons': ['icon-class', 'icon-decoration-abstract', 'icon-decoration-enumerated']},
{'name': 'v00', 'type': 'object', 'url': 'http/v00.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'v00', 'type': 'value', 'url': 'http/index.html#v00', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'v07', 'type': 'object', 'url': 'http/v07.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'v07', 'type': 'value', 'url': 'http/index.html#v07', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'v08', 'type': 'object', 'url': 'http/v08.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'v08', 'type': 'value', 'url': 'http/index.html#v08', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'v13', 'type': 'object', 'url': 'http/v13.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'v13', 'type': 'value', 'url': 'http/index.html#v13', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'websocketVersion.toString', 'type': 'function', 'url': 'http/websocketVersion.object.html#toString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'websocketVersion.fromString', 'type': 'function', 'url': 'http/websocketVersion.object.html#fromString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'http/websocketVersion.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'http/websocketVersion.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'websocketVersion.toJava', 'type': 'value', 'url': 'http/websocketVersion.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'http/websocketVersion.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'http/websocketVersion.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'websocketVersion.toCeylon', 'type': 'value', 'url': 'http/websocketVersion.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'websocketVersion', 'type': 'object', 'url': 'http/websocketVersion.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'websocketVersion', 'type': 'value', 'url': 'http/index.html#websocketVersion', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ClientAuth', 'type': 'class', 'url': 'http/ClientAuth.type.html', 'doc': '<p>Configures the engine to require/request client authentication.\n<p />\nC', 'tags': [],'icons': ['icon-class', 'icon-decoration-abstract', 'icon-decoration-enumerated']},
{'name': 'none', 'type': 'object', 'url': 'http/none.object.html', 'doc': '<p>No client authentication is requested or required.</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'none', 'type': 'value', 'url': 'http/index.html#none', 'doc': '<p>No client authentication is requested or required.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'request', 'type': 'object', 'url': 'http/request.object.html', 'doc': '<p>Accept authentication if presented by client.</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'request', 'type': 'value', 'url': 'http/index.html#request', 'doc': '<p>Accept authentication if presented by client.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'required', 'type': 'object', 'url': 'http/required.object.html', 'doc': '<p>Require client to present authentication, if not presented then negotiations will be declined.</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'required', 'type': 'value', 'url': 'http/index.html#required', 'doc': '<p>Require client to present authentication, if not presented then negotiations will be declined.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'clientAuth.toString', 'type': 'function', 'url': 'http/clientAuth.object.html#toString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'clientAuth.fromString', 'type': 'function', 'url': 'http/clientAuth.object.html#fromString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'http/clientAuth.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'http/clientAuth.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'clientAuth.toJava', 'type': 'value', 'url': 'http/clientAuth.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'http/clientAuth.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'http/clientAuth.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'clientAuth.toCeylon', 'type': 'value', 'url': 'http/clientAuth.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'clientAuth', 'type': 'object', 'url': 'http/clientAuth.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'clientAuth', 'type': 'value', 'url': 'http/index.html#clientAuth', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Http2Settings.toJson', 'type': 'function', 'url': 'http/Http2Settings.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'Http2Settings', 'type': 'class', 'url': 'http/Http2Settings.type.html', 'doc': '<p>HTTP2 settings, the settings is initialized with the default HTTP/2 values.<p><', 'tags': [],'icons': ['icon-class']},
{'name': 'http2Settings.fromJson', 'type': 'function', 'url': 'http/http2Settings.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'http/http2Settings.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'http/http2Settings.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'http2Settings.toCeylon', 'type': 'value', 'url': 'http/http2Settings.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'http/http2Settings.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'http/http2Settings.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'http2Settings.toJava', 'type': 'value', 'url': 'http/http2Settings.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'http2Settings.toJson', 'type': 'function', 'url': 'http/http2Settings.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'http2Settings', 'type': 'object', 'url': 'http/http2Settings.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'http2Settings', 'type': 'value', 'url': 'http/index.html#http2Settings', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'GoAway.toJson', 'type': 'function', 'url': 'http/GoAway.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'GoAway', 'type': 'class', 'url': 'http/GoAway.type.html', 'doc': '<p>A  frame.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'goAway.fromJson', 'type': 'function', 'url': 'http/goAway.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'http/goAway.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'http/goAway.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'goAway.toCeylon', 'type': 'value', 'url': 'http/goAway.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'http/goAway.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'http/goAway.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'goAway.toJava', 'type': 'value', 'url': 'http/goAway.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'goAway.toJson', 'type': 'function', 'url': 'http/goAway.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'goAway', 'type': 'object', 'url': 'http/goAway.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'goAway', 'type': 'value', 'url': 'http/index.html#goAway', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientOptions.toJson', 'type': 'function', 'url': 'http/HttpClientOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'HttpClientOptions', 'type': 'class', 'url': 'http/HttpClientOptions.type.html', 'doc': '<p>Options describing how an <a href="../http/HttpClient.type.html">HttpClient</a> will make connections.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'httpClientOptions.fromJson', 'type': 'function', 'url': 'http/httpClientOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'http/httpClientOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'http/httpClientOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpClientOptions.toCeylon', 'type': 'value', 'url': 'http/httpClientOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'http/httpClientOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'http/httpClientOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpClientOptions.toJava', 'type': 'value', 'url': 'http/httpClientOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'httpClientOptions.toJson', 'type': 'function', 'url': 'http/httpClientOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'httpClientOptions', 'type': 'object', 'url': 'http/httpClientOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpClientOptions', 'type': 'value', 'url': 'http/index.html#httpClientOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RequestOptions.toJson', 'type': 'function', 'url': 'http/RequestOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'RequestOptions', 'type': 'class', 'url': 'http/RequestOptions.type.html', 'doc': '<p>Options describing how an <a href="../http/HttpClient.type.html">HttpClient</a> will make connect to make a request.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'requestOptions.fromJson', 'type': 'function', 'url': 'http/requestOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'http/requestOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'http/requestOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'requestOptions.toJava', 'type': 'value', 'url': 'http/requestOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'requestOptions.toJson', 'type': 'function', 'url': 'http/requestOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'requestOptions', 'type': 'object', 'url': 'http/requestOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'requestOptions', 'type': 'value', 'url': 'http/index.html#requestOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpVersion', 'type': 'class', 'url': 'http/HttpVersion.type.html', 'doc': '<p>Represents the version of the HTTP protocol.</p>', 'tags': [],'icons': ['icon-class', 'icon-decoration-abstract', 'icon-decoration-enumerated']},
{'name': 'http_1_0', 'type': 'object', 'url': 'http/http_1_0.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'http_1_0', 'type': 'value', 'url': 'http/index.html#http_1_0', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'http_1_1', 'type': 'object', 'url': 'http/http_1_1.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'http_1_1', 'type': 'value', 'url': 'http/index.html#http_1_1', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'http_2', 'type': 'object', 'url': 'http/http_2.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'http_2', 'type': 'value', 'url': 'http/index.html#http_2', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'httpVersion.toString', 'type': 'function', 'url': 'http/httpVersion.object.html#toString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'httpVersion.fromString', 'type': 'function', 'url': 'http/httpVersion.object.html#fromString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'http/httpVersion.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'http/httpVersion.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpVersion.toJava', 'type': 'value', 'url': 'http/httpVersion.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'http/httpVersion.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'http/httpVersion.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpVersion.toCeylon', 'type': 'value', 'url': 'http/httpVersion.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'httpVersion', 'type': 'object', 'url': 'http/httpVersion.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpVersion', 'type': 'value', 'url': 'http/index.html#httpVersion', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpMethod', 'type': 'class', 'url': 'http/HttpMethod.type.html', 'doc': '<p>Represents an HTTP method</p>', 'tags': [],'icons': ['icon-class', 'icon-decoration-abstract', 'icon-decoration-enumerated']},
{'name': 'options', 'type': 'object', 'url': 'http/options.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'options', 'type': 'value', 'url': 'http/index.html#options', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'get', 'type': 'object', 'url': 'http/get.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'get', 'type': 'value', 'url': 'http/index.html#get', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'head', 'type': 'object', 'url': 'http/head.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'head', 'type': 'value', 'url': 'http/index.html#head', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'post', 'type': 'object', 'url': 'http/post.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'post', 'type': 'value', 'url': 'http/index.html#post', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'put', 'type': 'object', 'url': 'http/put.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'put', 'type': 'value', 'url': 'http/index.html#put', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'delete', 'type': 'object', 'url': 'http/delete.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'delete', 'type': 'value', 'url': 'http/index.html#delete', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'trace', 'type': 'object', 'url': 'http/trace.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'trace', 'type': 'value', 'url': 'http/index.html#trace', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'connect', 'type': 'object', 'url': 'http/connect.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'connect', 'type': 'value', 'url': 'http/index.html#connect', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'patch', 'type': 'object', 'url': 'http/patch.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'patch', 'type': 'value', 'url': 'http/index.html#patch', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'other', 'type': 'object', 'url': 'http/other.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'other', 'type': 'value', 'url': 'http/index.html#other', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'httpMethod.toString', 'type': 'function', 'url': 'http/httpMethod.object.html#toString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'httpMethod.fromString', 'type': 'function', 'url': 'http/httpMethod.object.html#fromString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'http/httpMethod.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'http/httpMethod.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpMethod.toJava', 'type': 'value', 'url': 'http/httpMethod.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'http/httpMethod.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'http/httpMethod.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpMethod.toCeylon', 'type': 'value', 'url': 'http/httpMethod.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'httpMethod', 'type': 'object', 'url': 'http/httpMethod.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpMethod', 'type': 'value', 'url': 'http/index.html#httpMethod', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerOptions.toJson', 'type': 'function', 'url': 'http/HttpServerOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'HttpServerOptions', 'type': 'class', 'url': 'http/HttpServerOptions.type.html', 'doc': '<p>Represents options used by an <a href="../http/HttpServer.type.html">HttpServer</a> instance</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'httpServerOptions.fromJson', 'type': 'function', 'url': 'http/httpServerOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'http/httpServerOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'http/httpServerOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpServerOptions.toCeylon', 'type': 'value', 'url': 'http/httpServerOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'http/httpServerOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'http/httpServerOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpServerOptions.toJava', 'type': 'value', 'url': 'http/httpServerOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'httpServerOptions.toJson', 'type': 'function', 'url': 'http/httpServerOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'httpServerOptions', 'type': 'object', 'url': 'http/httpServerOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'httpServerOptions', 'type': 'value', 'url': 'http/index.html#httpServerOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.get', 'type': 'function', 'url': 'http/HttpClient.type.html#get', 'doc': '<p>Create an HTTP GET request to send to the server at the specified host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.get', 'type': 'function', 'url': 'http/HttpClient.type.html#get', 'doc': '<p>Create an HTTP GET request to send to the server at the specified host and default port, specifying a response handler…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.get', 'type': 'function', 'url': 'http/HttpClient.type.html#get', 'doc': '<p>Create an HTTP GET request to send to the server at the default host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.get', 'type': 'function', 'url': 'http/HttpClient.type.html#get', 'doc': '<p>Create an HTTP GET request to send to the server at the specified host and default port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.get', 'type': 'function', 'url': 'http/HttpClient.type.html#get', 'doc': '<p>Create an HTTP GET request to send to the server with the specified options, specifying a response handler to receive…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.get', 'type': 'function', 'url': 'http/HttpClient.type.html#get', 'doc': '<p>Create an HTTP GET request to send to the server with the specified options.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.get', 'type': 'function', 'url': 'http/HttpClient.type.html#get', 'doc': '<p>Create an HTTP GET request to send to the server at the specified host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.get', 'type': 'function', 'url': 'http/HttpClient.type.html#get', 'doc': '<p>Create an HTTP GET request to send to the server at the default host and port, specifying a response handler to receive…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.get', 'type': 'function', 'url': 'http/HttpClient.type.html#get', 'doc': '<p>Create an HTTP GET request to send to the server at the specified host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.put', 'type': 'function', 'url': 'http/HttpClient.type.html#put', 'doc': '<p>Create an HTTP PUT request to send to the server at the specified host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.put', 'type': 'function', 'url': 'http/HttpClient.type.html#put', 'doc': '<p>Create an HTTP PUT request to send to the server at the default host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.put', 'type': 'function', 'url': 'http/HttpClient.type.html#put', 'doc': '<p>Create an HTTP PUT request to send to the server at the default host and port, specifying a response handler to receive…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.put', 'type': 'function', 'url': 'http/HttpClient.type.html#put', 'doc': '<p>Create an HTTP PUT request to send to the server with the specified options.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.put', 'type': 'function', 'url': 'http/HttpClient.type.html#put', 'doc': '<p>Create an HTTP PUT request to send to the server at the specified host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.put', 'type': 'function', 'url': 'http/HttpClient.type.html#put', 'doc': '<p>Create an HTTP PUT request to send to the server at the specified host and default port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.put', 'type': 'function', 'url': 'http/HttpClient.type.html#put', 'doc': '<p>Create an HTTP PUT request to send to the server with the specified options, specifying a response handler to receive…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.put', 'type': 'function', 'url': 'http/HttpClient.type.html#put', 'doc': '<p>Create an HTTP PUT request to send to the server at the specified host and default port, specifying a response handler…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.put', 'type': 'function', 'url': 'http/HttpClient.type.html#put', 'doc': '<p>Create an HTTP PUT request to send to the server at the specified host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.delete', 'type': 'function', 'url': 'http/HttpClient.type.html#delete', 'doc': '<p>Create an HTTP DELETE request to send to the server at the specified host and default port, specifying a response…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.delete', 'type': 'function', 'url': 'http/HttpClient.type.html#delete', 'doc': '<p>Create an HTTP DELETE request to send to the server at the specified host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.delete', 'type': 'function', 'url': 'http/HttpClient.type.html#delete', 'doc': '<p>Create an HTTP DELETE request to send to the server at the default host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.delete', 'type': 'function', 'url': 'http/HttpClient.type.html#delete', 'doc': '<p>Create an HTTP DELETE request to send to the server with the specified options, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.delete', 'type': 'function', 'url': 'http/HttpClient.type.html#delete', 'doc': '<p>Create an HTTP DELETE request to send to the server at the specified host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.delete', 'type': 'function', 'url': 'http/HttpClient.type.html#delete', 'doc': '<p>Create an HTTP DELETE request to send to the server at the specified host and default port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.delete', 'type': 'function', 'url': 'http/HttpClient.type.html#delete', 'doc': '<p>Create an HTTP DELETE request to send to the server with the specified options.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.delete', 'type': 'function', 'url': 'http/HttpClient.type.html#delete', 'doc': '<p>Create an HTTP DELETE request to send to the server at the default host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.delete', 'type': 'function', 'url': 'http/HttpClient.type.html#delete', 'doc': '<p>Create an HTTP DELETE request to send to the server at the specified host and default port, specifying a response…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.close', 'type': 'function', 'url': 'http/HttpClient.type.html#close', 'doc': '<p>Close the client.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.head', 'type': 'function', 'url': 'http/HttpClient.type.html#head', 'doc': '<p>Create an HTTP HEAD request to send to the server at the specified host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.head', 'type': 'function', 'url': 'http/HttpClient.type.html#head', 'doc': '<p>Create an HTTP HEAD request to send to the server at the specified host and default port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.head', 'type': 'function', 'url': 'http/HttpClient.type.html#head', 'doc': '<p>Create an HTTP HEAD request to send to the server with the specified options.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.head', 'type': 'function', 'url': 'http/HttpClient.type.html#head', 'doc': '<p>Create an HTTP HEAD request to send to the server at the specified host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.head', 'type': 'function', 'url': 'http/HttpClient.type.html#head', 'doc': '<p>Create an HTTP HEAD request to send to the server at the default host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.head', 'type': 'function', 'url': 'http/HttpClient.type.html#head', 'doc': '<p>Create an HTTP HEAD request to send to the server at the default host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.head', 'type': 'function', 'url': 'http/HttpClient.type.html#head', 'doc': '<p>Create an HTTP HEAD request to send to the server at the specified host and default port, specifying a response handler…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.head', 'type': 'function', 'url': 'http/HttpClient.type.html#head', 'doc': '<p>Create an HTTP HEAD request to send to the server with the specified options, specifying a response handler to receive…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.head', 'type': 'function', 'url': 'http/HttpClient.type.html#head', 'doc': '<p>Create an HTTP HEAD request to send to the server at the specified host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.isMetricsEnabled', 'type': 'function', 'url': 'http/HttpClient.type.html#isMetricsEnabled', 'doc': '<p>Whether the metrics are enabled for this measured object</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.request', 'type': 'function', 'url': 'http/HttpClient.type.html#request', 'doc': '<p>Create an HTTP request to send to the server at the specified host and default port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.request', 'type': 'function', 'url': 'http/HttpClient.type.html#request', 'doc': '<p>Create an HTTP request to send to the server at the default host and port, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.request', 'type': 'function', 'url': 'http/HttpClient.type.html#request', 'doc': '<p>Create an HTTP request to send to the server at the default host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.request', 'type': 'function', 'url': 'http/HttpClient.type.html#request', 'doc': '<p>Create an HTTP request to send to the server with the specified options, specifying a response handler to receive</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.request', 'type': 'function', 'url': 'http/HttpClient.type.html#request', 'doc': '<p>Create an HTTP request to send to the server at the specified host and default port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.request', 'type': 'function', 'url': 'http/HttpClient.type.html#request', 'doc': '<p>Create an HTTP request to send to the server at the specified host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.request', 'type': 'function', 'url': 'http/HttpClient.type.html#request', 'doc': '<p>Create an HTTP request to send to the server at the specified host and port, specifying a response handler to receive…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.request', 'type': 'function', 'url': 'http/HttpClient.type.html#request', 'doc': '<p>Create an HTTP request to send to the server with the specified options.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.request', 'type': 'function', 'url': 'http/HttpClient.type.html#request', 'doc': '<p>Create an HTTP request to send to the server at the specified host and default port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.post', 'type': 'function', 'url': 'http/HttpClient.type.html#post', 'doc': '<p>Create an HTTP POST request to send to the server at the specified host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.post', 'type': 'function', 'url': 'http/HttpClient.type.html#post', 'doc': '<p>Create an HTTP POST request to send to the server at the specified host and default port, specifying a response handler…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.post', 'type': 'function', 'url': 'http/HttpClient.type.html#post', 'doc': '<p>Create an HTTP POST request to send to the server at the default host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.post', 'type': 'function', 'url': 'http/HttpClient.type.html#post', 'doc': '<p>Create an HTTP POST request to send to the server at the default host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.post', 'type': 'function', 'url': 'http/HttpClient.type.html#post', 'doc': '<p>Create an HTTP POST request to send to the server with the specified options.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.post', 'type': 'function', 'url': 'http/HttpClient.type.html#post', 'doc': '<p>Create an HTTP POST request to send to the server at the specified host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.post', 'type': 'function', 'url': 'http/HttpClient.type.html#post', 'doc': '<p>Create an HTTP POST request to send to the server at the specified host and default port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.post', 'type': 'function', 'url': 'http/HttpClient.type.html#post', 'doc': '<p>Create an HTTP POST request to send to the server with the specified options, specifying a response handler to receive…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.post', 'type': 'function', 'url': 'http/HttpClient.type.html#post', 'doc': '<p>Create an HTTP POST request to send to the server at the specified host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.options', 'type': 'function', 'url': 'http/HttpClient.type.html#options', 'doc': '<p>Create an HTTP OPTIONS request to send to the server at the default host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.options', 'type': 'function', 'url': 'http/HttpClient.type.html#options', 'doc': '<p>Create an HTTP OPTIONS request to send to the server at the specified host and default port, specifying a response…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.options', 'type': 'function', 'url': 'http/HttpClient.type.html#options', 'doc': '<p>Create an HTTP OPTIONS request to send to the server at the default host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.options', 'type': 'function', 'url': 'http/HttpClient.type.html#options', 'doc': '<p>Create an HTTP OPTIONS request to send to the server with the specified options.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.options', 'type': 'function', 'url': 'http/HttpClient.type.html#options', 'doc': '<p>Create an HTTP OPTIONS request to send to the server at the specified host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.options', 'type': 'function', 'url': 'http/HttpClient.type.html#options', 'doc': '<p>Create an HTTP OPTIONS request to send to the server at the specified host and default port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.options', 'type': 'function', 'url': 'http/HttpClient.type.html#options', 'doc': '<p>Create an HTTP OPTIONS request to send to the server with the specified options, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.options', 'type': 'function', 'url': 'http/HttpClient.type.html#options', 'doc': '<p>Create an HTTP OPTIONS request to send to the server at the specified host and port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.options', 'type': 'function', 'url': 'http/HttpClient.type.html#options', 'doc': '<p>Create an HTTP OPTIONS request to send to the server at the default host and port.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.requestAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#requestAbs', 'doc': '<p>Create an HTTP request to send to the server using an absolute URI, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.requestAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#requestAbs', 'doc': '<p>Create an HTTP request to send to the server using an absolute URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.requestAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#requestAbs', 'doc': '<p>Create an HTTP request to send to the server using an absolute URI, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.headAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#headAbs', 'doc': '<p>Create an HTTP HEAD request to send to the server using an absolute URI, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.headAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#headAbs', 'doc': '<p>Create an HTTP HEAD request to send to the server using an absolute URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.headAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#headAbs', 'doc': '<p>Create an HTTP HEAD request to send to the server using an absolute URI, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.optionsAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#optionsAbs', 'doc': '<p>Create an HTTP OPTIONS request to send to the server using an absolute URI, specifying a response handler to receive…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.optionsAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#optionsAbs', 'doc': '<p>Create an HTTP OPTIONS request to send to the server using an absolute URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.optionsAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#optionsAbs', 'doc': '<p>Create an HTTP OPTIONS request to send to the server using an absolute URI, specifying a response handler to receive…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.putAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#putAbs', 'doc': '<p>Create an HTTP PUT request to send to the server using an absolute URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.putAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#putAbs', 'doc': '<p>Create an HTTP PUT request to send to the server using an absolute URI, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.putAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#putAbs', 'doc': '<p>Create an HTTP PUT request to send to the server using an absolute URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.postAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#postAbs', 'doc': '<p>Create an HTTP POST request to send to the server using an absolute URI, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.postAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#postAbs', 'doc': '<p>Create an HTTP POST request to send to the server using an absolute URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.postAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#postAbs', 'doc': '<p>Create an HTTP POST request to send to the server using an absolute URI, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.getAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#getAbs', 'doc': '<p>Create an HTTP GET request to send to the server using an absolute URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.getAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#getAbs', 'doc': '<p>Create an HTTP GET request to send to the server using an absolute URI, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.getAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#getAbs', 'doc': '<p>Create an HTTP GET request to send to the server using an absolute URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.getNow', 'type': 'function', 'url': 'http/HttpClient.type.html#getNow', 'doc': '<p>Sends an HTTP GET request to the server at the specified host and default port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.getNow', 'type': 'function', 'url': 'http/HttpClient.type.html#getNow', 'doc': '<p>Sends an HTTP GET request to the server at the specified host and port, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.getNow', 'type': 'function', 'url': 'http/HttpClient.type.html#getNow', 'doc': '<p>Sends an HTTP GET request to the server with the specified options, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.getNow', 'type': 'function', 'url': 'http/HttpClient.type.html#getNow', 'doc': '<p>Sends an HTTP GET request  to the server at the default host and port, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.getNow', 'type': 'function', 'url': 'http/HttpClient.type.html#getNow', 'doc': '<p>Sends an HTTP GET request to the server at the specified host and default port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.headNow', 'type': 'function', 'url': 'http/HttpClient.type.html#headNow', 'doc': '<p>Sends an HTTP HEAD request to the server at the specified host and port, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.headNow', 'type': 'function', 'url': 'http/HttpClient.type.html#headNow', 'doc': '<p>Sends an HTTP HEAD request to the server at the specified host and default port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.headNow', 'type': 'function', 'url': 'http/HttpClient.type.html#headNow', 'doc': '<p>Sends an HTTP HEAD request to the server with the specified options, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.headNow', 'type': 'function', 'url': 'http/HttpClient.type.html#headNow', 'doc': '<p>Sends an HTTP HEAD request  to the server at the default host and port, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.headNow', 'type': 'function', 'url': 'http/HttpClient.type.html#headNow', 'doc': '<p>Sends an HTTP HEAD request to the server at the specified host and port, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.optionsNow', 'type': 'function', 'url': 'http/HttpClient.type.html#optionsNow', 'doc': '<p>Sends an HTTP OPTIONS request to the server at the specified host and port, specifying a response handler to receive…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.optionsNow', 'type': 'function', 'url': 'http/HttpClient.type.html#optionsNow', 'doc': '<p>Sends an HTTP OPTIONS request to the server with the specified options, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.optionsNow', 'type': 'function', 'url': 'http/HttpClient.type.html#optionsNow', 'doc': '<p>Sends an HTTP OPTIONS request  to the server at the default host and port, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.optionsNow', 'type': 'function', 'url': 'http/HttpClient.type.html#optionsNow', 'doc': '<p>Sends an HTTP OPTIONS request to the server at the specified host and default port, specifying a response handler to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.optionsNow', 'type': 'function', 'url': 'http/HttpClient.type.html#optionsNow', 'doc': '<p>Sends an HTTP OPTIONS request to the server at the specified host and port, specifying a response handler to receive…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket with the specified options, with the specified headers, using\nthe specified version of WebSockets,…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified port, host and relative request URI, with the specified headers, using\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified host, relative request URI and default port, with the specified headers, using\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified host, relative request URI and default port, with the specified headers, using\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified host, relative request URI and default port with the specified headers and using…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified host, relative request URI and default port with the specified headers and using…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket with the specified options, with the specified headers, using\nthe specified version of WebSockets,…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified port, host and relative request URI, with the specified headers, using\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket at the relative request URI using the default host and port, the specified headers and the…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket at the relative request URI using the default host and port, the specified headers and the…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket at the relative request URI using the default host and port, the specified headers, the\nspecified…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket at the relative request URI using the default host and port, the specified headers, the\nspecified…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket at the relative request URI using the default host and port</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified port, host and relative request URI, with the specified headers and using\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket at the relative request URI using the default host and port and the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket at the relative request URI using the default host and port and the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the host and relative request URI and default port</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the host and relative request URI and default port</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket with the specified options, and with the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified port, host and relative request URI, and with the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket with the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified port, host and relative request URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket with the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified port, host and relative request URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket at the relative request URI using the default host and port</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket with the specified optionsI, with the specified headers and using\nthe specified version of…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified port, host and relative request URI, with the specified headers and using\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket with the specified options, with the specified headers and using\nthe specified version of WebSockets</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket with the specified options, and with the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified port, host and relative request URI, and with the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified host,relative request UR, and default port and with the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket to the specified host,relative request UR, and default port and with the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocket', 'type': 'function', 'url': 'http/HttpClient.type.html#websocket', 'doc': '<p>Connect a WebSocket with the specified options, with the specified headers, using\nthe specified version of WebSockets,…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream to the specified port, host and relative request URI, with the specified headers, using\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream to the specified host, relative request URI and default port, with the specified headers,…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream to the specified port, host and relative request URI, with the specified headers, using\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream with the specified options and with the specified headers and using\nthe specified version of…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream at the relative request URI using the default host and port, the specified headers, the…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream at the relative request URI using the default host and port, the specified headers and the…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream at the relative request URI using the default host and port and the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream at the relative request URI using the default host and port and the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream to the specified port, host and relative request URI, and with the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream with the specified options, and with the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream to the specified host, relative request URI and default port</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream to the specified port, host and relative request URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream with the specified options</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream to the specified port, host and relative request URI, with the specified headers and using…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream with the specified options, with the specified headers and using\nthe specified version of…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream to the specified host, relative request URI and default port and with the specified headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStream', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStream', 'doc': '<p>Create a WebSocket stream to the specified port, host and relative request URI, with the specified headers, using\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.deleteAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#deleteAbs', 'doc': '<p>Create an HTTP DELETE request to send to the server using an absolute URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.deleteAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#deleteAbs', 'doc': '<p>Create an HTTP DELETE request to send to the server using an absolute URI, specifying a response handler to receive\nthe…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.deleteAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#deleteAbs', 'doc': '<p>Create an HTTP DELETE request to send to the server using an absolute URI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketAbs', 'doc': '<p>Connect a WebSocket with the specified absolute url, with the specified headers, using\nthe specified version of…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.websocketStreamAbs', 'type': 'function', 'url': 'http/HttpClient.type.html#websocketStreamAbs', 'doc': '<p>Create a WebSocket stream with the specified absolute url, the specified headers, using the specified version of…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient.redirectHandler', 'type': 'function', 'url': 'http/HttpClient.type.html#redirectHandler', 'doc': '<p>Set a redirect handler for the http client.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClient', 'type': 'class', 'url': 'http/HttpClient.type.html', 'doc': '<p>An asynchronous HTTP client.\n<p>\nI', 'tags': [],'icons': ['icon-class']},
{'name': 'HttpServer.listen', 'type': 'function', 'url': 'http/HttpServer.type.html#listen', 'doc': '<p>Like <a href="../http/HttpServer.type.html#listen">listen</a> but the server will listen on host &ldquo;0.0.0.0&rdquo; and port specified here ignoring\nany value in the <a href="../http/HttpServerOptions.type.html">…</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.listen', 'type': 'function', 'url': 'http/HttpServer.type.html#listen', 'doc': '<p>Like <a href="../http/HttpServer.type.html#listen">listen</a> but supplying a handler that will be called when the server is actually\nlistening (or has failed).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.listen', 'type': 'function', 'url': 'http/HttpServer.type.html#listen', 'doc': '<p>Tell the server to start listening. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.listen', 'type': 'function', 'url': 'http/HttpServer.type.html#listen', 'doc': '<p>Like <a href="../http/HttpServer.type.html#listen">listen</a> but supplying a handler that will be called when the server is actually listening (or has failed).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.listen', 'type': 'function', 'url': 'http/HttpServer.type.html#listen', 'doc': '<p>Like <a href="../http/HttpServer.type.html#listen">listen</a> but supplying a handler that will be called when the server is actually listening (or has failed).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.listen', 'type': 'function', 'url': 'http/HttpServer.type.html#listen', 'doc': '<p>Tell the server to start listening. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.listen', 'type': 'function', 'url': 'http/HttpServer.type.html#listen', 'doc': '<p>Like <a href="../http/HttpServer.type.html#listen">listen</a> but the server will listen on host &ldquo;0.0.0.0&rdquo; and port specified here ignoring\nany value in the <a href="../http/HttpServerOptions.type.html">…</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.close', 'type': 'function', 'url': 'http/HttpServer.type.html#close', 'doc': '<p>Like <a href="../http/HttpServer.type.html#close">close</a> but supplying a handler that will be called when the server is actually closed (or has failed).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.close', 'type': 'function', 'url': 'http/HttpServer.type.html#close', 'doc': '<p>Close the server.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.close', 'type': 'function', 'url': 'http/HttpServer.type.html#close', 'doc': '<p>Like <a href="../http/HttpServer.type.html#close">close</a> but supplying a handler that will be called when the server is actually closed (or has failed).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.isMetricsEnabled', 'type': 'function', 'url': 'http/HttpServer.type.html#isMetricsEnabled', 'doc': '<p>Whether the metrics are enabled for this measured object</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.exceptionHandler', 'type': 'function', 'url': 'http/HttpServer.type.html#exceptionHandler', 'doc': '<p>Set an exception handler called for socket errors happening before the HTTP connection\nis established, e.g during the…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.websocketStream', 'type': 'function', 'url': 'http/HttpServer.type.html#websocketStream', 'doc': '<p>Return the websocket stream for the server. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.actualPort', 'type': 'function', 'url': 'http/HttpServer.type.html#actualPort', 'doc': '<p>The actual port the server is listening on.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.requestHandler', 'type': 'function', 'url': 'http/HttpServer.type.html#requestHandler', 'doc': '<p>Set the request handler for the server to <code>requestHandler</code>. A</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.requestStream', 'type': 'function', 'url': 'http/HttpServer.type.html#requestStream', 'doc': '<p>Return the request stream for the server. A</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.websocketHandler', 'type': 'function', 'url': 'http/HttpServer.type.html#websocketHandler', 'doc': '<p>Set the websocket handler for the server to <code>wsHandler</code>. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer.connectionHandler', 'type': 'function', 'url': 'http/HttpServer.type.html#connectionHandler', 'doc': '<p>Set a connection handler for the server.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServer', 'type': 'class', 'url': 'http/HttpServer.type.html', 'doc': '<p>An HTTP and WebSockets server.\n<p>\nY', 'tags': [],'icons': ['icon-class']},
{'name': 'WebSocketFrame.textData', 'type': 'function', 'url': 'http/WebSocketFrame.type.html#textData', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketFrame.isClose', 'type': 'function', 'url': 'http/WebSocketFrame.type.html#isClose', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketFrame.isText', 'type': 'function', 'url': 'http/WebSocketFrame.type.html#isText', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketFrame.isBinary', 'type': 'function', 'url': 'http/WebSocketFrame.type.html#isBinary', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketFrame.isContinuation', 'type': 'function', 'url': 'http/WebSocketFrame.type.html#isContinuation', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketFrame.closeStatusCode', 'type': 'function', 'url': 'http/WebSocketFrame.type.html#closeStatusCode', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketFrame.closeReason', 'type': 'function', 'url': 'http/WebSocketFrame.type.html#closeReason', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketFrame.binaryData', 'type': 'function', 'url': 'http/WebSocketFrame.type.html#binaryData', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketFrame.isFinal', 'type': 'function', 'url': 'http/WebSocketFrame.type.html#isFinal', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketFrame', 'type': 'class', 'url': 'http/WebSocketFrame.type.html', 'doc': '<p>A WebSocket frame that represents either text or binary data.\n<p>\nA', 'tags': [],'icons': ['icon-class']},
{'name': 'HttpServerRequest.resume', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.path', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#path', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.host', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#host', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.query', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#query', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.handler', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.version', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#version', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.isSSL', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#isSSL', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.isExpectMultipart', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#isExpectMultipart', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.isEnded', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#isEnded', 'doc': '<p>Has the request ended?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.uri', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#uri', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.connection', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#connection', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.response', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#response', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.upgrade', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#upgrade', 'doc': '<p>Upgrade the connection to a WebSocket connection.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.localAddress', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#localAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.headers', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#headers', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.params', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#params', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.getHeader', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#getHeader', 'doc': '<p>Return the first header value with the specified name</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.getParam', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#getParam', 'doc': '<p>Return the first param value with the specified name</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.remoteAddress', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#remoteAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.method', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#method', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.scheme', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#scheme', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.exceptionHandler', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.pause', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.endHandler', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.absoluteURI', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#absoluteURI', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.bodyHandler', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#bodyHandler', 'doc': '<p>Convenience method for receiving the entire request body in one piece.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.customFrameHandler', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#customFrameHandler', 'doc': '<p>Set a custom frame handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.netSocket', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#netSocket', 'doc': '<p>Get a net socket for the underlying connection of this request.\n<p>\nU', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.setExpectMultipart', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#setExpectMultipart', 'doc': '<p>Call this with true if you are expecting a multi-part body to be submitted in the request.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.rawMethod', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#rawMethod', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.uploadHandler', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#uploadHandler', 'doc': '<p>Set an upload handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.formAttributes', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#formAttributes', 'doc': '<p>Returns a map of all form attributes in the request.\n<p>\nB', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest.getFormAttribute', 'type': 'function', 'url': 'http/HttpServerRequest.type.html#getFormAttribute', 'doc': '<p>Return the first form attribute value with the specified name</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerRequest', 'type': 'class', 'url': 'http/HttpServerRequest.type.html', 'doc': '<p>Represents a server-side HTTP request.\n<p>\nI', 'tags': [],'icons': ['icon-class']},
{'name': 'webSocketFrame.binaryFrame', 'type': 'function', 'url': 'http/webSocketFrame.object.html#binaryFrame', 'doc': '<p>Create a binary WebSocket frame.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'webSocketFrame.textFrame', 'type': 'function', 'url': 'http/webSocketFrame.object.html#textFrame', 'doc': '<p>Create a text WebSocket frame.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'webSocketFrame.pingFrame', 'type': 'function', 'url': 'http/webSocketFrame.object.html#pingFrame', 'doc': '<p>Create a ping WebSocket frame.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'webSocketFrame.pongFrame', 'type': 'function', 'url': 'http/webSocketFrame.object.html#pongFrame', 'doc': '<p>Create a pong WebSocket frame.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'webSocketFrame.continuationFrame', 'type': 'function', 'url': 'http/webSocketFrame.object.html#continuationFrame', 'doc': '<p>Create a continuation frame</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'webSocketFrame', 'type': 'object', 'url': 'http/webSocketFrame.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'webSocketFrame', 'type': 'value', 'url': 'http/index.html#webSocketFrame', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.push', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#push', 'doc': '<p>Like <a href="../http/HttpServerResponse.type.html#push">push</a> with the host copied from the current request.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.push', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#push', 'doc': '<p>Like <a href="../http/HttpServerResponse.type.html#push">push</a> with the host copied from the current request.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.push', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#push', 'doc': '<p>Push a response to the client.<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.push', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#push', 'doc': '<p>Like <a href="../http/HttpServerResponse.type.html#push">push</a> with no headers.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.push', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#push', 'doc': '<p>Like <a href="../http/HttpServerResponse.type.html#push">push</a> with the host copied from the current request.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.write', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#write', 'doc': '<p>Write a <code>String</code> to the response body, encoded in UTF-8.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.write', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#write', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'HttpServerResponse.write', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#write', 'doc': '<p>Write a <code>String</code> to the response body, encoded using the encoding <code>enc</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.write', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#write', 'doc': '<p>Write a <code>String</code> to the response body, encoded in UTF-8.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.close', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#close', 'doc': '<p>Close the underlying TCP connection corresponding to the request.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.reset', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#reset', 'doc': '<p>Reset this HTTP/2 stream with the error <code>code</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.reset', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#reset', 'doc': '<p>Reset this HTTP/2 stream with the error code <code>0</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.reset', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#reset', 'doc': '<p>Reset this HTTP/2 stream with the error <code>code</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.closed', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#closed', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.isChunked', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#isChunked', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.getStatusCode', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#getStatusCode', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.getStatusMessage', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#getStatusMessage', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.setStatusCode', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#setStatusCode', 'doc': '<p>Set the status code.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.headers', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#headers', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.setChunked', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#setChunked', 'doc': '<p>If <code>chunked</code> is <code>true</code>, this response will use HTTP chunked encoding, and each call to write to the body\nwill correspond to…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.bytesWritten', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#bytesWritten', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.ended', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#ended', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.end', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#end', 'doc': '<p>Same as <a href="../http/HttpServerResponse.type.html#end">end</a> but writes a String with the specified encoding before ending the response.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.end', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#end', 'doc': '<p>Ends the response.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.end', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#end', 'doc': '<p>Same as <a href="../http/HttpServerResponse.type.html#end">end</a> but writes a String in UTF-8 encoding before ending the response.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.end', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#end', 'doc': '<p>Same as <a href="../http/HttpServerResponse.type.html#end">end</a> but writes some data to the response body before ending.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'HttpServerResponse.end', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#end', 'doc': '<p>Same as <a href="../http/HttpServerResponse.type.html#end">end</a> but writes a String with the specified encoding before ending the response.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.streamId', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#streamId', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.trailers', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#trailers', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.exceptionHandler', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.setWriteQueueMaxSize', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#setWriteQueueMaxSize', 'doc': '<p>Set the maximum size of the write queue to <code>maxSize</code>. Y</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.drainHandler', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#drainHandler', 'doc': '<p>Set a drain handler on the stream. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.writeQueueFull', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#writeQueueFull', 'doc': '<p>This will return <code>true</code> if there are more bytes in the write queue than the value set using <a href="../http/HttpServerResponse.type.html#setWriteQueueMaxSize">setWriteQueueMaxSize</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.endHandler', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#endHandler', 'doc': '<p>Set an end handler for the response.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.putHeader', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#putHeader', 'doc': '<p>Put an HTTP header</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.writeCustomFrame', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#writeCustomFrame', 'doc': '<p>Like <a href="../http/HttpServerResponse.type.html#writeCustomFrame">writeCustomFrame</a> but with an <a href="../http/HttpFrame.type.html">HttpFrame</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.writeCustomFrame', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#writeCustomFrame', 'doc': '<p>Write an HTTP/2 frame to the response, allowing to extend the HTTP/2 protocol.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.writeCustomFrame', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#writeCustomFrame', 'doc': '<p>Like <a href="../http/HttpServerResponse.type.html#writeCustomFrame">writeCustomFrame</a> but with an <a href="../http/HttpFrame.type.html">HttpFrame</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.closeHandler', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#closeHandler', 'doc': '<p>Set a close handler for the response, this is called when the underlying connection is closed and the response\nwas…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.writeContinue', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#writeContinue', 'doc': '<p>Used to write an interim 100 Continue response to signify that the client should send the rest of the request.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.sendFile', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#sendFile', 'doc': '<p>Same as <a href="../http/HttpServerResponse.type.html#sendFile">sendFile</a> using length @code{Long.MAX_VALUE} which means until the end of the\nfile.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.sendFile', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#sendFile', 'doc': '<p>Like <a href="../http/HttpServerResponse.type.html#sendFile">sendFile</a> but providing a handler which will be notified once the file has been completely\nwritten to the wire.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.sendFile', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#sendFile', 'doc': '<p>Like <a href="../http/HttpServerResponse.type.html#sendFile">sendFile</a> but providing a handler which will be notified once the file has been\ncompletely written to the wire.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.sendFile', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#sendFile', 'doc': '<p>Ask the OS to stream a file as specified by <code>filename</code> directly\nfrom disk to the outgoing connection, bypassing userspace…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.sendFile', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#sendFile', 'doc': '<p>Same as <a href="../http/HttpServerResponse.type.html#sendFile">sendFile</a> using offset @code{0} which means starting from the beginning of the file.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.sendFile', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#sendFile', 'doc': '<p>Like <a href="../http/HttpServerResponse.type.html#sendFile">sendFile</a> but providing a handler which will be notified once the file has been completely\nwritten to the wire.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.sendFile', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#sendFile', 'doc': '<p>Same as <a href="../http/HttpServerResponse.type.html#sendFile">sendFile</a> using length @code{Long.MAX_VALUE} which means until the end of the\nfile.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.setStatusMessage', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#setStatusMessage', 'doc': '<p>Set the status message</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.putTrailer', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#putTrailer', 'doc': '<p>Put an HTTP trailer</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.headWritten', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#headWritten', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.headersEndHandler', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#headersEndHandler', 'doc': '<p>Provide a handler that will be called just before the headers are written to the wire.<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse.bodyEndHandler', 'type': 'function', 'url': 'http/HttpServerResponse.type.html#bodyEndHandler', 'doc': '<p>Provides a handler that will be called after the last part of the body is written to the wire.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerResponse', 'type': 'class', 'url': 'http/HttpServerResponse.type.html', 'doc': '<p>Represents a server-side HTTP response.\n<p>\nA', 'tags': [],'icons': ['icon-class']},
{'name': 'ServerWebSocket.write', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#write', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.accept', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#accept', 'doc': '<p>Accept the WebSocket and terminate the WebSocket handshake.\n<p />\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.resume', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.close', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#close', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.close', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#close', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.close', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#close', 'doc': '<p>Close the WebSocket.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.close', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#close', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.path', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#path', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.query', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#query', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.handler', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.isSsl', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#isSsl', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.uri', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#uri', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.writeFrame', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#writeFrame', 'doc': '<p>Write a WebSocket frame to the connection</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.localAddress', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#localAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.headers', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#headers', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.reject', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#reject', 'doc': '<p>Reject the WebSocket.\n<p>\nC', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.reject', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#reject', 'doc': '<p>Like <a href="../http/ServerWebSocket.type.html#reject">reject</a> but with a <code>status</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.reject', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#reject', 'doc': '<p>Reject the WebSocket.\n<p>\nC', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.remoteAddress', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#remoteAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.end', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#end', 'doc': '<p>Calls <a href="../http/WebSocketBase.type.html#close">close</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.end', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#end', 'doc': '<p>Same as <a href="../http/WebSocketBase.type.html#end">end</a> but writes some data to the stream before ending.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.end', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#end', 'doc': '<p>Calls <a href="../http/WebSocketBase.type.html#close">close</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.exceptionHandler', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.setWriteQueueMaxSize', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#setWriteQueueMaxSize', 'doc': '<p>Set the maximum size of the write queue to <code>maxSize</code>. Y</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.drainHandler', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#drainHandler', 'doc': '<p>Set a drain handler on the stream. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.writeQueueFull', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#writeQueueFull', 'doc': '<p>This will return <code>true</code> if there are more bytes in the write queue than the value set using <a href="../http/ServerWebSocket.type.html#setWriteQueueMaxSize">setWriteQueueMaxSize</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.pause', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.endHandler', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.textHandlerID', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#textHandlerID', 'doc': '<p>When a <code>Websocket</code> is created it automatically registers an event handler with the eventbus, the ID of that\nhandler is g…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.writeFinalTextFrame', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#writeFinalTextFrame', 'doc': '<p>Write a final WebSocket text frame to the connection</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.writeFinalBinaryFrame', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#writeFinalBinaryFrame', 'doc': '<p>Write a final WebSocket binary frame to the connection</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.writeBinaryMessage', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#writeBinaryMessage', 'doc': '<p>Writes a (potentially large) piece of binary data to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.writeTextMessage', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#writeTextMessage', 'doc': '<p>Writes a (potentially large) piece of text data to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.closeHandler', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#closeHandler', 'doc': '<p>Set a close handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.frameHandler', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#frameHandler', 'doc': '<p>Set a frame handler on the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.binaryHandlerID', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#binaryHandlerID', 'doc': '<p>When a <code>Websocket</code> is created it automatically registers an event handler with the event bus - the ID of that\nhandler is…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.subProtocol', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#subProtocol', 'doc': '<p>Returns the websocket sub protocol selected by the websocket handshake.\n<p />\nO', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.writePing', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#writePing', 'doc': '<p>Writes a ping to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.writePong', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#writePong', 'doc': '<p>Writes a pong to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.textMessageHandler', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#textMessageHandler', 'doc': '<p>Set a text message handler on the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.binaryMessageHandler', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#binaryMessageHandler', 'doc': '<p>Set a binary message handler on the connection. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket.pongHandler', 'type': 'function', 'url': 'http/ServerWebSocket.type.html#pongHandler', 'doc': '<p>Set a pong message handler on the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ServerWebSocket', 'type': 'class', 'url': 'http/ServerWebSocket.type.html', 'doc': '<p>Represents a server side WebSocket.\n<p>\nI', 'tags': [],'icons': ['icon-class']},
{'name': 'HttpClientResponse.resume', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.handler', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.version', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#version', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.request', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#request', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.statusCode', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#statusCode', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.headers', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#headers', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.getHeader', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#getHeader', 'doc': '<p>Return the first header value with the specified name</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.cookies', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#cookies', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.trailers', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#trailers', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.exceptionHandler', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.pause', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.endHandler', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.statusMessage', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#statusMessage', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.getTrailer', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#getTrailer', 'doc': '<p>Return the first trailer value with the specified name</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.bodyHandler', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#bodyHandler', 'doc': '<p>Convenience method for receiving the entire request body in one piece.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.customFrameHandler', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#customFrameHandler', 'doc': '<p>Set an custom frame handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse.netSocket', 'type': 'function', 'url': 'http/HttpClientResponse.type.html#netSocket', 'doc': '<p>Get a net socket for the underlying connection of this request.\n<p>\nU', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientResponse', 'type': 'class', 'url': 'http/HttpClientResponse.type.html', 'doc': '<p>Represents a client-side HTTP response.\n<p>\nV', 'tags': [],'icons': ['icon-class']},
{'name': 'WebSocket.write', 'type': 'function', 'url': 'http/WebSocket.type.html#write', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.resume', 'type': 'function', 'url': 'http/WebSocket.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.close', 'type': 'function', 'url': 'http/WebSocket.type.html#close', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.close', 'type': 'function', 'url': 'http/WebSocket.type.html#close', 'doc': '<p>Close the WebSocket.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.close', 'type': 'function', 'url': 'http/WebSocket.type.html#close', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.close', 'type': 'function', 'url': 'http/WebSocket.type.html#close', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.handler', 'type': 'function', 'url': 'http/WebSocket.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.isSsl', 'type': 'function', 'url': 'http/WebSocket.type.html#isSsl', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.writeFrame', 'type': 'function', 'url': 'http/WebSocket.type.html#writeFrame', 'doc': '<p>Write a WebSocket frame to the connection</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.localAddress', 'type': 'function', 'url': 'http/WebSocket.type.html#localAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.remoteAddress', 'type': 'function', 'url': 'http/WebSocket.type.html#remoteAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.end', 'type': 'function', 'url': 'http/WebSocket.type.html#end', 'doc': '<p>Same as <a href="../http/WebSocketBase.type.html#end">end</a> but writes some data to the stream before ending.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.end', 'type': 'function', 'url': 'http/WebSocket.type.html#end', 'doc': '<p>Calls <a href="../http/WebSocketBase.type.html#close">close</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.end', 'type': 'function', 'url': 'http/WebSocket.type.html#end', 'doc': '<p>Same as <a href="../http/WebSocketBase.type.html#end">end</a> but writes some data to the stream before ending.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.exceptionHandler', 'type': 'function', 'url': 'http/WebSocket.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.setWriteQueueMaxSize', 'type': 'function', 'url': 'http/WebSocket.type.html#setWriteQueueMaxSize', 'doc': '<p>Set the maximum size of the write queue to <code>maxSize</code>. Y</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.drainHandler', 'type': 'function', 'url': 'http/WebSocket.type.html#drainHandler', 'doc': '<p>Set a drain handler on the stream. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.writeQueueFull', 'type': 'function', 'url': 'http/WebSocket.type.html#writeQueueFull', 'doc': '<p>This will return <code>true</code> if there are more bytes in the write queue than the value set using <a href="../http/WebSocket.type.html#setWriteQueueMaxSize">setWriteQueueMaxSize</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.pause', 'type': 'function', 'url': 'http/WebSocket.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.endHandler', 'type': 'function', 'url': 'http/WebSocket.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.textHandlerID', 'type': 'function', 'url': 'http/WebSocket.type.html#textHandlerID', 'doc': '<p>When a <code>Websocket</code> is created it automatically registers an event handler with the eventbus, the ID of that\nhandler is g…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.writeFinalTextFrame', 'type': 'function', 'url': 'http/WebSocket.type.html#writeFinalTextFrame', 'doc': '<p>Write a final WebSocket text frame to the connection</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.writeFinalBinaryFrame', 'type': 'function', 'url': 'http/WebSocket.type.html#writeFinalBinaryFrame', 'doc': '<p>Write a final WebSocket binary frame to the connection</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.writeBinaryMessage', 'type': 'function', 'url': 'http/WebSocket.type.html#writeBinaryMessage', 'doc': '<p>Writes a (potentially large) piece of binary data to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.writeTextMessage', 'type': 'function', 'url': 'http/WebSocket.type.html#writeTextMessage', 'doc': '<p>Writes a (potentially large) piece of text data to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.closeHandler', 'type': 'function', 'url': 'http/WebSocket.type.html#closeHandler', 'doc': '<p>Set a close handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.frameHandler', 'type': 'function', 'url': 'http/WebSocket.type.html#frameHandler', 'doc': '<p>Set a frame handler on the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.binaryHandlerID', 'type': 'function', 'url': 'http/WebSocket.type.html#binaryHandlerID', 'doc': '<p>When a <code>Websocket</code> is created it automatically registers an event handler with the event bus - the ID of that\nhandler is…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.subProtocol', 'type': 'function', 'url': 'http/WebSocket.type.html#subProtocol', 'doc': '<p>Returns the websocket sub protocol selected by the websocket handshake.\n<p />\nO', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.writePing', 'type': 'function', 'url': 'http/WebSocket.type.html#writePing', 'doc': '<p>Writes a ping to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.writePong', 'type': 'function', 'url': 'http/WebSocket.type.html#writePong', 'doc': '<p>Writes a pong to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.textMessageHandler', 'type': 'function', 'url': 'http/WebSocket.type.html#textMessageHandler', 'doc': '<p>Set a text message handler on the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.binaryMessageHandler', 'type': 'function', 'url': 'http/WebSocket.type.html#binaryMessageHandler', 'doc': '<p>Set a binary message handler on the connection. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket.pongHandler', 'type': 'function', 'url': 'http/WebSocket.type.html#pongHandler', 'doc': '<p>Set a pong message handler on the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocket', 'type': 'class', 'url': 'http/WebSocket.type.html', 'doc': '<p>Represents a client-side WebSocket.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'HttpClientRequest.write', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#write', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'HttpClientRequest.write', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#write', 'doc': '<p>Write a <code>String</code> to the request body, encoded as UTF-8.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.write', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#write', 'doc': '<p>Write a <code>String</code> to the request body, encoded using the encoding <code>enc</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.write', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#write', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.resume', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.reset', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#reset', 'doc': '<p>Reset this request:\n<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.reset', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#reset', 'doc': '<p>Reset this stream with the error code <code>0</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.reset', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#reset', 'doc': '<p>Reset this request:\n<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.path', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#path', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.query', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#query', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.handler', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.getRawMethod', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#getRawMethod', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.isChunked', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#isChunked', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.getHost', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#getHost', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.uri', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#uri', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.setHost', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#setHost', 'doc': '<p>Set the request host.<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.connection', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#connection', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.headers', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#headers', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.setFollowRedirects', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#setFollowRedirects', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.setTimeout', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#setTimeout', 'doc': '<p>Set\'s the amount of time after which if the request does not return any data within the timeout period an\n<code>…</code></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.setChunked', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#setChunked', 'doc': '<p>If chunked is true then the request will be set into HTTP chunked mode</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.method', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#method', 'doc': '<p>The HTTP method for the request.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.end', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#end', 'doc': '<p>Same as <a href="../http/HttpClientRequest.type.html#end">end</a> but writes some data to the request body before ending. I</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'HttpClientRequest.end', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#end', 'doc': '<p>Same as <a href="../http/HttpClientRequest.type.html#end">end</a> but writes a String in UTF-8 encoding</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.end', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#end', 'doc': '<p>Same as <a href="../http/HttpClientRequest.type.html#end">end</a> but writes a String with the specified encoding</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.end', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#end', 'doc': '<p>Ends the request. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.end', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#end', 'doc': '<p>Same as <a href="../http/HttpClientRequest.type.html#end">end</a> but writes some data to the request body before ending. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.sendHead', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#sendHead', 'doc': '<p>Like <a href="../http/HttpClientRequest.type.html#sendHead">sendHead</a> but with an handler after headers have been sent. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.sendHead', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#sendHead', 'doc': '<p>Forces the head of the request to be written before <a href="../http/HttpClientRequest.type.html#end">end</a> is called on the request or any data is\nwritten to it.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.sendHead', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#sendHead', 'doc': '<p>Like <a href="../http/HttpClientRequest.type.html#sendHead">sendHead</a> but with an handler after headers have been sent. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.streamId', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#streamId', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.exceptionHandler', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.setWriteQueueMaxSize', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#setWriteQueueMaxSize', 'doc': '<p>Set the maximum size of the write queue to <code>maxSize</code>. Y</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.drainHandler', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#drainHandler', 'doc': '<p>Set a drain handler on the stream. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.writeQueueFull', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#writeQueueFull', 'doc': '<p>This will return <code>true</code> if there are more bytes in the write queue than the value set using <a href="../http/HttpClientRequest.type.html#setWriteQueueMaxSize">setWriteQueueMaxSize</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.pause', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.endHandler', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.setRawMethod', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#setRawMethod', 'doc': '<p>Set the value the method to send when the method  is used.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.absoluteURI', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#absoluteURI', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.putHeader', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#putHeader', 'doc': '<p>Put an HTTP header</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.continueHandler', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#continueHandler', 'doc': '<p>If you send an HTTP request with the header <code>Expect</code> set to the value <code>100-continue</code>\nand the server responds with an i…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.pushHandler', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#pushHandler', 'doc': '<p>Set a push handler for this request.<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.connectionHandler', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#connectionHandler', 'doc': '<p>Set a connection handler called when an HTTP connection has been established.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.writeCustomFrame', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#writeCustomFrame', 'doc': '<p>Like <a href="../http/HttpClientRequest.type.html#writeCustomFrame">writeCustomFrame</a> but with an <a href="../http/HttpFrame.type.html">HttpFrame</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.writeCustomFrame', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#writeCustomFrame', 'doc': '<p>Write an HTTP/2 frame to the request, allowing to extend the HTTP/2 protocol.<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest.writeCustomFrame', 'type': 'function', 'url': 'http/HttpClientRequest.type.html#writeCustomFrame', 'doc': '<p>Like <a href="../http/HttpClientRequest.type.html#writeCustomFrame">writeCustomFrame</a> but with an <a href="../http/HttpFrame.type.html">HttpFrame</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpClientRequest', 'type': 'class', 'url': 'http/HttpClientRequest.type.html', 'doc': '<p>Represents a client-side HTTP request.\n<p>\nI', 'tags': [],'icons': ['icon-class']},
{'name': 'HttpFrame.type', 'type': 'function', 'url': 'http/HttpFrame.type.html#type', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpFrame.flags', 'type': 'function', 'url': 'http/HttpFrame.type.html#flags', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpFrame.payload', 'type': 'function', 'url': 'http/HttpFrame.type.html#payload', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpFrame', 'type': 'class', 'url': 'http/HttpFrame.type.html', 'doc': '<p>An HTTP/2 frame.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'WebSocketBase.write', 'type': 'function', 'url': 'http/WebSocketBase.type.html#write', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.resume', 'type': 'function', 'url': 'http/WebSocketBase.type.html#resume', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.close', 'type': 'function', 'url': 'http/WebSocketBase.type.html#close', 'doc': '<p>Close the WebSocket.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.close', 'type': 'function', 'url': 'http/WebSocketBase.type.html#close', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.close', 'type': 'function', 'url': 'http/WebSocketBase.type.html#close', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.close', 'type': 'function', 'url': 'http/WebSocketBase.type.html#close', 'doc': '<p>Close the WebSocket.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.handler', 'type': 'function', 'url': 'http/WebSocketBase.type.html#handler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.isSsl', 'type': 'function', 'url': 'http/WebSocketBase.type.html#isSsl', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.writeFrame', 'type': 'function', 'url': 'http/WebSocketBase.type.html#writeFrame', 'doc': '<p>Write a WebSocket frame to the connection</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.localAddress', 'type': 'function', 'url': 'http/WebSocketBase.type.html#localAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.remoteAddress', 'type': 'function', 'url': 'http/WebSocketBase.type.html#remoteAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.end', 'type': 'function', 'url': 'http/WebSocketBase.type.html#end', 'doc': '<p>Calls <a href="../http/WebSocketBase.type.html#close">close</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.end', 'type': 'function', 'url': 'http/WebSocketBase.type.html#end', 'doc': '<p>Same as <a href="../http/WebSocketBase.type.html#end">end</a> but writes some data to the stream before ending.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.end', 'type': 'function', 'url': 'http/WebSocketBase.type.html#end', 'doc': '<p>Calls <a href="../http/WebSocketBase.type.html#close">close</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.exceptionHandler', 'type': 'function', 'url': 'http/WebSocketBase.type.html#exceptionHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.setWriteQueueMaxSize', 'type': 'function', 'url': 'http/WebSocketBase.type.html#setWriteQueueMaxSize', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.drainHandler', 'type': 'function', 'url': 'http/WebSocketBase.type.html#drainHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.writeQueueFull', 'type': 'function', 'url': 'http/WebSocketBase.type.html#writeQueueFull', 'doc': '<p>This will return <code>true</code> if there are more bytes in the write queue than the value set using <a href="../http/WebSocketBase.type.html#setWriteQueueMaxSize">setWriteQueueMaxSize</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.pause', 'type': 'function', 'url': 'http/WebSocketBase.type.html#pause', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.endHandler', 'type': 'function', 'url': 'http/WebSocketBase.type.html#endHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.textHandlerID', 'type': 'function', 'url': 'http/WebSocketBase.type.html#textHandlerID', 'doc': '<p>When a <code>Websocket</code> is created it automatically registers an event handler with the eventbus, the ID of that\nhandler is g…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.writeFinalTextFrame', 'type': 'function', 'url': 'http/WebSocketBase.type.html#writeFinalTextFrame', 'doc': '<p>Write a final WebSocket text frame to the connection</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.writeFinalBinaryFrame', 'type': 'function', 'url': 'http/WebSocketBase.type.html#writeFinalBinaryFrame', 'doc': '<p>Write a final WebSocket binary frame to the connection</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.writeBinaryMessage', 'type': 'function', 'url': 'http/WebSocketBase.type.html#writeBinaryMessage', 'doc': '<p>Writes a (potentially large) piece of binary data to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.writeTextMessage', 'type': 'function', 'url': 'http/WebSocketBase.type.html#writeTextMessage', 'doc': '<p>Writes a (potentially large) piece of text data to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.closeHandler', 'type': 'function', 'url': 'http/WebSocketBase.type.html#closeHandler', 'doc': '<p>Set a close handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.frameHandler', 'type': 'function', 'url': 'http/WebSocketBase.type.html#frameHandler', 'doc': '<p>Set a frame handler on the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.binaryHandlerID', 'type': 'function', 'url': 'http/WebSocketBase.type.html#binaryHandlerID', 'doc': '<p>When a <code>Websocket</code> is created it automatically registers an event handler with the event bus - the ID of that\nhandler is…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.subProtocol', 'type': 'function', 'url': 'http/WebSocketBase.type.html#subProtocol', 'doc': '<p>Returns the websocket sub protocol selected by the websocket handshake.\n<p />\nO', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.writePing', 'type': 'function', 'url': 'http/WebSocketBase.type.html#writePing', 'doc': '<p>Writes a ping to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.writePong', 'type': 'function', 'url': 'http/WebSocketBase.type.html#writePong', 'doc': '<p>Writes a pong to the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.textMessageHandler', 'type': 'function', 'url': 'http/WebSocketBase.type.html#textMessageHandler', 'doc': '<p>Set a text message handler on the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.binaryMessageHandler', 'type': 'function', 'url': 'http/WebSocketBase.type.html#binaryMessageHandler', 'doc': '<p>Set a binary message handler on the connection. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase.pongHandler', 'type': 'function', 'url': 'http/WebSocketBase.type.html#pongHandler', 'doc': '<p>Set a pong message handler on the connection.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WebSocketBase', 'type': 'interface', 'url': 'http/WebSocketBase.type.html', 'doc': '<p>Base WebSocket implementation.\n<p>\nI', 'tags': [],'icons': ['icon-interface']},
{'name': 'HttpConnection.shutdown', 'type': 'function', 'url': 'http/HttpConnection.type.html#shutdown', 'doc': '<p>Initiate a connection shutdown, a go away frame is sent and the connection is closed when all current streams\nwill be c…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.shutdown', 'type': 'function', 'url': 'http/HttpConnection.type.html#shutdown', 'doc': '<p>Initiate a connection shutdown, a go away frame is sent and the connection is closed when all current active streams…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.shutdown', 'type': 'function', 'url': 'http/HttpConnection.type.html#shutdown', 'doc': '<p>Initiate a connection shutdown, a go away frame is sent and the connection is closed when all current streams\nwill be c…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.close', 'type': 'function', 'url': 'http/HttpConnection.type.html#close', 'doc': '<p>Close the connection and all the currently active streams.\n<p />\nA', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.isSsl', 'type': 'function', 'url': 'http/HttpConnection.type.html#isSsl', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.getWindowSize', 'type': 'function', 'url': 'http/HttpConnection.type.html#getWindowSize', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.settings', 'type': 'function', 'url': 'http/HttpConnection.type.html#settings', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.localAddress', 'type': 'function', 'url': 'http/HttpConnection.type.html#localAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.ping', 'type': 'function', 'url': 'http/HttpConnection.type.html#ping', 'doc': '<p>Send a  frame to the remote endpoint.\n<p />\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.remoteAddress', 'type': 'function', 'url': 'http/HttpConnection.type.html#remoteAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.exceptionHandler', 'type': 'function', 'url': 'http/HttpConnection.type.html#exceptionHandler', 'doc': '<p>Set an handler called when a connection error happens</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.updateSettings', 'type': 'function', 'url': 'http/HttpConnection.type.html#updateSettings', 'doc': '<p>Send to the remote endpoint an update of this endpoint settings\n<p />\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.updateSettings', 'type': 'function', 'url': 'http/HttpConnection.type.html#updateSettings', 'doc': '<p>Send to the remote endpoint an update of the server settings.\n<p />\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.updateSettings', 'type': 'function', 'url': 'http/HttpConnection.type.html#updateSettings', 'doc': '<p>Send to the remote endpoint an update of this endpoint settings\n<p />\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.goAwayHandler', 'type': 'function', 'url': 'http/HttpConnection.type.html#goAwayHandler', 'doc': '<p>Set an handler called when a  frame is received.\n<p />\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.remoteSettings', 'type': 'function', 'url': 'http/HttpConnection.type.html#remoteSettings', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.remoteSettingsHandler', 'type': 'function', 'url': 'http/HttpConnection.type.html#remoteSettingsHandler', 'doc': '<p>Set an handler that is called when remote endpoint <a href="../http/Http2Settings.type.html">Http2Settings</a> are updated.\n<p />\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.setWindowSize', 'type': 'function', 'url': 'http/HttpConnection.type.html#setWindowSize', 'doc': '<p>Update the current connection wide window size to a new size.\n<p />\nI', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.goAway', 'type': 'function', 'url': 'http/HttpConnection.type.html#goAway', 'doc': '<p>Like <a href="../http/HttpConnection.type.html#goAway">goAway</a> with a last stream id <code>-1</code> which means to disallow any new stream creation.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.goAway', 'type': 'function', 'url': 'http/HttpConnection.type.html#goAway', 'doc': '<p>Like <a href="../http/HttpConnection.type.html#goAway">goAway</a> with no buffer.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.goAway', 'type': 'function', 'url': 'http/HttpConnection.type.html#goAway', 'doc': '<p>Send a go away frame to the remote endpoint of the connection.\n<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.goAway', 'type': 'function', 'url': 'http/HttpConnection.type.html#goAway', 'doc': '<p>Like <a href="../http/HttpConnection.type.html#goAway">goAway</a> with a last stream id <code>-1</code> which means to disallow any new stream creation.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.shutdownHandler', 'type': 'function', 'url': 'http/HttpConnection.type.html#shutdownHandler', 'doc': '<p>Set an handler called when a  frame has been sent or received and all connections are closed.\n<p />\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.pingHandler', 'type': 'function', 'url': 'http/HttpConnection.type.html#pingHandler', 'doc': '<p>Set an handler notified when a  frame is received from the remote endpoint.\n<p />\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.indicatedServerName', 'type': 'function', 'url': 'http/HttpConnection.type.html#indicatedServerName', 'doc': '<p>Returns the SNI server name presented during the SSL handshake by the client.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection.closeHandler', 'type': 'function', 'url': 'http/HttpConnection.type.html#closeHandler', 'doc': '<p>Set a close handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpConnection', 'type': 'class', 'url': 'http/HttpConnection.type.html', 'doc': '<p>Represents an HTTP connection.\n<p />\nH', 'tags': [],'icons': ['icon-class']},
{'name': 'HttpServerFileUpload.name', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#name', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.charset', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#charset', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.size', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#size', 'doc': '<p>The size of the upload may not be available until it is all read.\nC</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.resume', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.handler', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.streamToFileSystem', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#streamToFileSystem', 'doc': '<p>Stream the content of this upload to the given file on storage.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.contentTransferEncoding', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#contentTransferEncoding', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.isSizeAvailable', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#isSizeAvailable', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.contentType', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#contentType', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.filename', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#filename', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.exceptionHandler', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.pause', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload.endHandler', 'type': 'function', 'url': 'http/HttpServerFileUpload.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HttpServerFileUpload', 'type': 'class', 'url': 'http/HttpServerFileUpload.type.html', 'doc': '<p>Represents an file upload from an HTML FORM.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'io.vertx.ceylon.core.impl', 'type': 'package', 'url': 'impl/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'resolveVerticles', 'type': 'function', 'url': 'impl/index.html#resolveVerticles', 'doc': '<p>Find the verticles for the specified module and return a list of verticle factories.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'io.vertx.ceylon.core.metrics', 'type': 'package', 'url': 'metrics/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'MetricsOptions.toJson', 'type': 'function', 'url': 'metrics/MetricsOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'MetricsOptions', 'type': 'class', 'url': 'metrics/MetricsOptions.type.html', 'doc': '<p>Vert.x metrics base configuration, this class can be extended by provider implementations to configure\nthose specific…</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'metricsOptions.fromJson', 'type': 'function', 'url': 'metrics/metricsOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'metrics/metricsOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'metrics/metricsOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'metricsOptions.toCeylon', 'type': 'value', 'url': 'metrics/metricsOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'metrics/metricsOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'metrics/metricsOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'metricsOptions.toJava', 'type': 'value', 'url': 'metrics/metricsOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'metricsOptions.toJson', 'type': 'function', 'url': 'metrics/metricsOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'metricsOptions', 'type': 'object', 'url': 'metrics/metricsOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'metricsOptions', 'type': 'value', 'url': 'metrics/index.html#metricsOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Measured.isMetricsEnabled', 'type': 'function', 'url': 'metrics/Measured.type.html#isMetricsEnabled', 'doc': '<p>Whether the metrics are enabled for this measured object</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Measured', 'type': 'interface', 'url': 'metrics/Measured.type.html', 'doc': '', 'tags': [],'icons': ['icon-interface']},
{'name': 'io.vertx.ceylon.core.net', 'type': 'package', 'url': 'net/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'NetClientOptions.toJson', 'type': 'function', 'url': 'net/NetClientOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'NetClientOptions', 'type': 'class', 'url': 'net/NetClientOptions.type.html', 'doc': '<p>Options for configuring a <a href="../net/NetClient.type.html">NetClient</a>.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'netClientOptions.fromJson', 'type': 'function', 'url': 'net/netClientOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/netClientOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/netClientOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'netClientOptions.toCeylon', 'type': 'value', 'url': 'net/netClientOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'net/netClientOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'net/netClientOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'netClientOptions.toJava', 'type': 'value', 'url': 'net/netClientOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'netClientOptions.toJson', 'type': 'function', 'url': 'net/netClientOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'netClientOptions', 'type': 'object', 'url': 'net/netClientOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'netClientOptions', 'type': 'value', 'url': 'net/index.html#netClientOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'PemKeyCertOptions.toJson', 'type': 'function', 'url': 'net/PemKeyCertOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'PemKeyCertOptions', 'type': 'class', 'url': 'net/PemKeyCertOptions.type.html', 'doc': '<p>Key store options configuring a list of private key and its certificate based on\n<i>Privacy-enhanced Electronic Email</i> (PEM)…</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'pemKeyCertOptions.fromJson', 'type': 'function', 'url': 'net/pemKeyCertOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/pemKeyCertOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/pemKeyCertOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'pemKeyCertOptions.toCeylon', 'type': 'value', 'url': 'net/pemKeyCertOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'net/pemKeyCertOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'net/pemKeyCertOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'pemKeyCertOptions.toJava', 'type': 'value', 'url': 'net/pemKeyCertOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'pemKeyCertOptions.toJson', 'type': 'function', 'url': 'net/pemKeyCertOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'pemKeyCertOptions', 'type': 'object', 'url': 'net/pemKeyCertOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'pemKeyCertOptions', 'type': 'value', 'url': 'net/index.html#pemKeyCertOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'PemTrustOptions.toJson', 'type': 'function', 'url': 'net/PemTrustOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'PemTrustOptions', 'type': 'class', 'url': 'net/PemTrustOptions.type.html', 'doc': '<p>Certificate Authority options configuring certificates based on\n<i>Privacy-enhanced Electronic Email</i> (PEM) files.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'pemTrustOptions.fromJson', 'type': 'function', 'url': 'net/pemTrustOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/pemTrustOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/pemTrustOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'pemTrustOptions.toCeylon', 'type': 'value', 'url': 'net/pemTrustOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'net/pemTrustOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'net/pemTrustOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'pemTrustOptions.toJava', 'type': 'value', 'url': 'net/pemTrustOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'pemTrustOptions.toJson', 'type': 'function', 'url': 'net/pemTrustOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'pemTrustOptions', 'type': 'object', 'url': 'net/pemTrustOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'pemTrustOptions', 'type': 'value', 'url': 'net/index.html#pemTrustOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ProxyType', 'type': 'class', 'url': 'net/ProxyType.type.html', 'doc': '<p>The type of a TCP proxy server.</p>', 'tags': [],'icons': ['icon-class', 'icon-decoration-abstract', 'icon-decoration-enumerated']},
{'name': 'http', 'type': 'object', 'url': 'net/http.object.html', 'doc': '<p>HTTP CONNECT ssl proxy</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'http', 'type': 'value', 'url': 'net/index.html#http', 'doc': '<p>HTTP CONNECT ssl proxy</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'socks4', 'type': 'object', 'url': 'net/socks4.object.html', 'doc': '<p>SOCKS4/4a tcp proxy</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'socks4', 'type': 'value', 'url': 'net/index.html#socks4', 'doc': '<p>SOCKS4/4a tcp proxy</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'socks5', 'type': 'object', 'url': 'net/socks5.object.html', 'doc': '<p>SOCSK5 tcp proxy</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'socks5', 'type': 'value', 'url': 'net/index.html#socks5', 'doc': '<p>SOCSK5 tcp proxy</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'proxyType.toString', 'type': 'function', 'url': 'net/proxyType.object.html#toString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'proxyType.fromString', 'type': 'function', 'url': 'net/proxyType.object.html#fromString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'net/proxyType.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'net/proxyType.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'proxyType.toJava', 'type': 'value', 'url': 'net/proxyType.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/proxyType.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/proxyType.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'proxyType.toCeylon', 'type': 'value', 'url': 'net/proxyType.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'proxyType', 'type': 'object', 'url': 'net/proxyType.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'proxyType', 'type': 'value', 'url': 'net/index.html#proxyType', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetworkOptions.toJson', 'type': 'function', 'url': 'net/NetworkOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'NetworkOptions', 'type': 'class', 'url': 'net/NetworkOptions.type.html', 'doc': '', 'tags': [],'icons': ['icon-class']},
{'name': 'networkOptions.fromJson', 'type': 'function', 'url': 'net/networkOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/networkOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/networkOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'networkOptions.toCeylon', 'type': 'value', 'url': 'net/networkOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'networkOptions', 'type': 'object', 'url': 'net/networkOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'networkOptions', 'type': 'value', 'url': 'net/index.html#networkOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JksOptions.toJson', 'type': 'function', 'url': 'net/JksOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'JksOptions', 'type': 'class', 'url': 'net/JksOptions.type.html', 'doc': '<p>Key or trust store options configuring private key and/or certificates based on Java Keystore files.\n<p>\nW', 'tags': [],'icons': ['icon-class']},
{'name': 'jksOptions.fromJson', 'type': 'function', 'url': 'net/jksOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/jksOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/jksOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'jksOptions.toCeylon', 'type': 'value', 'url': 'net/jksOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'net/jksOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'net/jksOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'jksOptions.toJava', 'type': 'value', 'url': 'net/jksOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jksOptions.toJson', 'type': 'function', 'url': 'net/jksOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jksOptions', 'type': 'object', 'url': 'net/jksOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'jksOptions', 'type': 'value', 'url': 'net/index.html#jksOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JdkSSLEngineOptions.toJson', 'type': 'function', 'url': 'net/JdkSSLEngineOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'JdkSSLEngineOptions', 'type': 'class', 'url': 'net/JdkSSLEngineOptions.type.html', 'doc': '<p>Configures a <a href="../net/TCPSSLOptions.type.html">TCPSSLOptions</a> to use the JDK ssl engine implementation.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'jdkSSLEngineOptions.fromJson', 'type': 'function', 'url': 'net/jdkSSLEngineOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/jdkSSLEngineOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/jdkSSLEngineOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'jdkSSLEngineOptions.toCeylon', 'type': 'value', 'url': 'net/jdkSSLEngineOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'net/jdkSSLEngineOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'net/jdkSSLEngineOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'jdkSSLEngineOptions.toJava', 'type': 'value', 'url': 'net/jdkSSLEngineOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jdkSSLEngineOptions.toJson', 'type': 'function', 'url': 'net/jdkSSLEngineOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jdkSSLEngineOptions', 'type': 'object', 'url': 'net/jdkSSLEngineOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'jdkSSLEngineOptions', 'type': 'value', 'url': 'net/index.html#jdkSSLEngineOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ProxyOptions.toJson', 'type': 'function', 'url': 'net/ProxyOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'ProxyOptions', 'type': 'class', 'url': 'net/ProxyOptions.type.html', 'doc': '<p>Proxy options for a net client or a net client.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'proxyOptions.fromJson', 'type': 'function', 'url': 'net/proxyOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/proxyOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/proxyOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'proxyOptions.toCeylon', 'type': 'value', 'url': 'net/proxyOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'net/proxyOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'net/proxyOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'proxyOptions.toJava', 'type': 'value', 'url': 'net/proxyOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'proxyOptions.toJson', 'type': 'function', 'url': 'net/proxyOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'proxyOptions', 'type': 'object', 'url': 'net/proxyOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'proxyOptions', 'type': 'value', 'url': 'net/index.html#proxyOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TCPSSLOptions.toJson', 'type': 'function', 'url': 'net/TCPSSLOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'TCPSSLOptions', 'type': 'class', 'url': 'net/TCPSSLOptions.type.html', 'doc': '<p>Base class.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'tcpsslOptions.fromJson', 'type': 'function', 'url': 'net/tcpsslOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/tcpsslOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/tcpsslOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'tcpsslOptions.toCeylon', 'type': 'value', 'url': 'net/tcpsslOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'tcpsslOptions', 'type': 'object', 'url': 'net/tcpsslOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'tcpsslOptions', 'type': 'value', 'url': 'net/index.html#tcpsslOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServerOptions.toJson', 'type': 'function', 'url': 'net/NetServerOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'NetServerOptions', 'type': 'class', 'url': 'net/NetServerOptions.type.html', 'doc': '<p>Options for configuring a <a href="../net/NetServer.type.html">NetServer</a>.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'netServerOptions.fromJson', 'type': 'function', 'url': 'net/netServerOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/netServerOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/netServerOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'netServerOptions.toCeylon', 'type': 'value', 'url': 'net/netServerOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'net/netServerOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'net/netServerOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'netServerOptions.toJava', 'type': 'value', 'url': 'net/netServerOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'netServerOptions.toJson', 'type': 'function', 'url': 'net/netServerOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'netServerOptions', 'type': 'object', 'url': 'net/netServerOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'netServerOptions', 'type': 'value', 'url': 'net/index.html#netServerOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'OpenSSLEngineOptions.toJson', 'type': 'function', 'url': 'net/OpenSSLEngineOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'OpenSSLEngineOptions', 'type': 'class', 'url': 'net/OpenSSLEngineOptions.type.html', 'doc': '<p>Configures a <a href="../net/TCPSSLOptions.type.html">TCPSSLOptions</a> to use OpenSsl.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'openSSLEngineOptions.fromJson', 'type': 'function', 'url': 'net/openSSLEngineOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/openSSLEngineOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/openSSLEngineOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'openSSLEngineOptions.toCeylon', 'type': 'value', 'url': 'net/openSSLEngineOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'net/openSSLEngineOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'net/openSSLEngineOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'openSSLEngineOptions.toJava', 'type': 'value', 'url': 'net/openSSLEngineOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'openSSLEngineOptions.toJson', 'type': 'function', 'url': 'net/openSSLEngineOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'openSSLEngineOptions', 'type': 'object', 'url': 'net/openSSLEngineOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'openSSLEngineOptions', 'type': 'value', 'url': 'net/index.html#openSSLEngineOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'PfxOptions.toJson', 'type': 'function', 'url': 'net/PfxOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'PfxOptions', 'type': 'class', 'url': 'net/PfxOptions.type.html', 'doc': '<p>Key or trust store options configuring private key and/or certificates based on PKCS#12 files.\n<p>\nW', 'tags': [],'icons': ['icon-class']},
{'name': 'pfxOptions.fromJson', 'type': 'function', 'url': 'net/pfxOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/pfxOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/pfxOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'pfxOptions.toCeylon', 'type': 'value', 'url': 'net/pfxOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'net/pfxOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'net/pfxOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'pfxOptions.toJava', 'type': 'value', 'url': 'net/pfxOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'pfxOptions.toJson', 'type': 'function', 'url': 'net/pfxOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'pfxOptions', 'type': 'object', 'url': 'net/pfxOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'pfxOptions', 'type': 'value', 'url': 'net/index.html#pfxOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ClientOptionsBase.toJson', 'type': 'function', 'url': 'net/ClientOptionsBase.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'ClientOptionsBase', 'type': 'class', 'url': 'net/ClientOptionsBase.type.html', 'doc': '<p>Base class for Client options</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'clientOptionsBase.fromJson', 'type': 'function', 'url': 'net/clientOptionsBase.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'net/clientOptionsBase.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'net/clientOptionsBase.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'clientOptionsBase.toCeylon', 'type': 'value', 'url': 'net/clientOptionsBase.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'clientOptionsBase', 'type': 'object', 'url': 'net/clientOptionsBase.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'clientOptionsBase', 'type': 'value', 'url': 'net/index.html#clientOptionsBase', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.listen', 'type': 'function', 'url': 'net/NetServer.type.html#listen', 'doc': '<p>Start listening on the specified port and host &ldquo;0.0.0.0&rdquo;, ignoring port and host configured in the\n<a href="../net/NetServerOptions.type.html">NetServerOptions</a>…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.listen', 'type': 'function', 'url': 'net/NetServer.type.html#listen', 'doc': '<p>Like <a href="../net/NetServer.type.html#listen">listen</a> but providing a handler that will be notified when the server is listening, or fails.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.listen', 'type': 'function', 'url': 'net/NetServer.type.html#listen', 'doc': '<p>Start listening on the specified port and host, ignoring port and host configured in the <a href="../net/NetServerOptions.type.html">NetServerOptions</a> used when…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.listen', 'type': 'function', 'url': 'net/NetServer.type.html#listen', 'doc': '<p>Start listening on the specified local address, ignoring port and host configured in the <a href="../net/NetServerOptions.type.html">NetServerOptions</a> used when…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.listen', 'type': 'function', 'url': 'net/NetServer.type.html#listen', 'doc': '<p>Like <a href="../net/NetServer.type.html#listen">listen</a> but providing a handler that will be notified when the server is listening, or fails.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.listen', 'type': 'function', 'url': 'net/NetServer.type.html#listen', 'doc': '<p>Like <a href="../net/NetServer.type.html#listen">listen</a> but providing a handler that will be notified when the server is listening, or fails.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.listen', 'type': 'function', 'url': 'net/NetServer.type.html#listen', 'doc': '<p>Start listening on the port and host as configured in the <a href="../net/NetServerOptions.type.html">NetServerOptions</a> used when\ncreating the server.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.listen', 'type': 'function', 'url': 'net/NetServer.type.html#listen', 'doc': '<p>Like <a href="../net/NetServer.type.html#listen">listen</a> but providing a handler that will be notified when the server is listening, or fails.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.listen', 'type': 'function', 'url': 'net/NetServer.type.html#listen', 'doc': '<p>Start listening on the specified port and host &ldquo;0.0.0.0&rdquo;, ignoring port and host configured in the\n<a href="../net/NetServerOptions.type.html">NetServerOptions</a>…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.close', 'type': 'function', 'url': 'net/NetServer.type.html#close', 'doc': '<p>Close the server.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.close', 'type': 'function', 'url': 'net/NetServer.type.html#close', 'doc': '<p>Like <a href="../net/NetServer.type.html#close">close</a> but supplying a handler that will be notified when close is complete.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.close', 'type': 'function', 'url': 'net/NetServer.type.html#close', 'doc': '<p>Close the server.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.isMetricsEnabled', 'type': 'function', 'url': 'net/NetServer.type.html#isMetricsEnabled', 'doc': '<p>Whether the metrics are enabled for this measured object</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.exceptionHandler', 'type': 'function', 'url': 'net/NetServer.type.html#exceptionHandler', 'doc': '<p>Set an exception handler called for socket errors happening before the connection\nis passed to the <a href="../net/NetServer.type.html#connectHandler">connectHandler</a>, e.g…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.connectHandler', 'type': 'function', 'url': 'net/NetServer.type.html#connectHandler', 'doc': '<p>Supply a connect handler for this server. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.connectStream', 'type': 'function', 'url': 'net/NetServer.type.html#connectStream', 'doc': '<p>Return the connect stream for this server. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer.actualPort', 'type': 'function', 'url': 'net/NetServer.type.html#actualPort', 'doc': '<p>The actual port the server is listening on.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetServer', 'type': 'class', 'url': 'net/NetServer.type.html', 'doc': '<p>Represents a TCP server</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'NetClient.connect', 'type': 'function', 'url': 'net/NetClient.type.html#connect', 'doc': '<p>Open a connection to a server at the specific <code>remoteAddress</code>.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetClient.connect', 'type': 'function', 'url': 'net/NetClient.type.html#connect', 'doc': '<p>Open a connection to a server at the specific <code>port</code> and <code>host</code>.\n<p>\n<', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetClient.connect', 'type': 'function', 'url': 'net/NetClient.type.html#connect', 'doc': '<p>Open a connection to a server at the specific <code>remoteAddress</code>.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetClient.connect', 'type': 'function', 'url': 'net/NetClient.type.html#connect', 'doc': '<p>Open a connection to a server at the specific <code>port</code> and <code>host</code>.\n<p>\n<', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetClient.connect', 'type': 'function', 'url': 'net/NetClient.type.html#connect', 'doc': '<p>Open a connection to a server at the specific <code>remoteAddress</code>.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetClient.close', 'type': 'function', 'url': 'net/NetClient.type.html#close', 'doc': '<p>Close the client.\n<p>\nA', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetClient.isMetricsEnabled', 'type': 'function', 'url': 'net/NetClient.type.html#isMetricsEnabled', 'doc': '<p>Whether the metrics are enabled for this measured object</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetClient', 'type': 'class', 'url': 'net/NetClient.type.html', 'doc': '<p>A TCP client.\n<p>\nM', 'tags': [],'icons': ['icon-class']},
{'name': 'selfSignedCertificate.create', 'type': 'function', 'url': 'net/selfSignedCertificate.object.html#create', 'doc': '<p>Create a new <code>SelfSignedCertificate</code> instance.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'selfSignedCertificate.create', 'type': 'function', 'url': 'net/selfSignedCertificate.object.html#create', 'doc': '<p>Create a new <code>SelfSignedCertificate</code> instance with a fully-qualified domain name,</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'selfSignedCertificate.create', 'type': 'function', 'url': 'net/selfSignedCertificate.object.html#create', 'doc': '<p>Create a new <code>SelfSignedCertificate</code> instance.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'selfSignedCertificate', 'type': 'object', 'url': 'net/selfSignedCertificate.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'selfSignedCertificate', 'type': 'value', 'url': 'net/index.html#selfSignedCertificate', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'socketAddress.inetSocketAddress', 'type': 'function', 'url': 'net/socketAddress.object.html#inetSocketAddress', 'doc': '<p>Create a inet socket address, <code>host</code> must be non <code>null</code> and <code>port</code> must be between <code>0</code>\nand <code>65536</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'socketAddress.domainSocketAddress', 'type': 'function', 'url': 'net/socketAddress.object.html#domainSocketAddress', 'doc': '<p>Create a domain socket address.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'socketAddress', 'type': 'object', 'url': 'net/socketAddress.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'socketAddress', 'type': 'value', 'url': 'net/index.html#socketAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.write', 'type': 'function', 'url': 'net/NetSocket.type.html#write', 'doc': '<p>Write a <code>String</code> to the connection, encoded using the encoding <code>enc</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.write', 'type': 'function', 'url': 'net/NetSocket.type.html#write', 'doc': '<p>Write a <code>String</code> to the connection, encoded in UTF-8.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.write', 'type': 'function', 'url': 'net/NetSocket.type.html#write', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'NetSocket.write', 'type': 'function', 'url': 'net/NetSocket.type.html#write', 'doc': '<p>Write a <code>String</code> to the connection, encoded using the encoding <code>enc</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.resume', 'type': 'function', 'url': 'net/NetSocket.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.close', 'type': 'function', 'url': 'net/NetSocket.type.html#close', 'doc': '<p>Close the NetSocket</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.handler', 'type': 'function', 'url': 'net/NetSocket.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.isSsl', 'type': 'function', 'url': 'net/NetSocket.type.html#isSsl', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.upgradeToSsl', 'type': 'function', 'url': 'net/NetSocket.type.html#upgradeToSsl', 'doc': '<p>Upgrade channel to use SSL/TLS.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.upgradeToSsl', 'type': 'function', 'url': 'net/NetSocket.type.html#upgradeToSsl', 'doc': '<p>Upgrade channel to use SSL/TLS.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.upgradeToSsl', 'type': 'function', 'url': 'net/NetSocket.type.html#upgradeToSsl', 'doc': '<p>Upgrade channel to use SSL/TLS.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.localAddress', 'type': 'function', 'url': 'net/NetSocket.type.html#localAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.remoteAddress', 'type': 'function', 'url': 'net/NetSocket.type.html#remoteAddress', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.end', 'type': 'function', 'url': 'net/NetSocket.type.html#end', 'doc': '<p>Calls <a href="../net/NetSocket.type.html#close">close</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.end', 'type': 'function', 'url': 'net/NetSocket.type.html#end', 'doc': '<p>Same as <a href="../net/NetSocket.type.html#end">end</a> but writes some data to the stream before ending.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'NetSocket.end', 'type': 'function', 'url': 'net/NetSocket.type.html#end', 'doc': '<p>Calls <a href="../net/NetSocket.type.html#close">close</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.exceptionHandler', 'type': 'function', 'url': 'net/NetSocket.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.setWriteQueueMaxSize', 'type': 'function', 'url': 'net/NetSocket.type.html#setWriteQueueMaxSize', 'doc': '<p>Set the maximum size of the write queue to <code>maxSize</code>. Y</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.drainHandler', 'type': 'function', 'url': 'net/NetSocket.type.html#drainHandler', 'doc': '<p>Set a drain handler on the stream. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.writeQueueFull', 'type': 'function', 'url': 'net/NetSocket.type.html#writeQueueFull', 'doc': '<p>This will return <code>true</code> if there are more bytes in the write queue than the value set using <a href="../net/NetSocket.type.html#setWriteQueueMaxSize">setWriteQueueMaxSize</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.pause', 'type': 'function', 'url': 'net/NetSocket.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.endHandler', 'type': 'function', 'url': 'net/NetSocket.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.indicatedServerName', 'type': 'function', 'url': 'net/NetSocket.type.html#indicatedServerName', 'doc': '<p>Returns the SNI server name presented during the SSL handshake by the client.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.closeHandler', 'type': 'function', 'url': 'net/NetSocket.type.html#closeHandler', 'doc': '<p>Set a handler that will be called when the NetSocket is closed</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.sendFile', 'type': 'function', 'url': 'net/NetSocket.type.html#sendFile', 'doc': '<p>Same as <a href="../net/NetSocket.type.html#sendFile">sendFile</a> but also takes a handler that will be called when the send has completed or\na failure has occurred</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.sendFile', 'type': 'function', 'url': 'net/NetSocket.type.html#sendFile', 'doc': '<p>Same as <a href="../net/NetSocket.type.html#sendFile">sendFile</a> but also takes a handler that will be called when the send has completed or\na failure has occurred</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.sendFile', 'type': 'function', 'url': 'net/NetSocket.type.html#sendFile', 'doc': '<p>Same as <a href="../net/NetSocket.type.html#sendFile">sendFile</a> but also takes a handler that will be called when the send has completed or\na failure has occurred</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.sendFile', 'type': 'function', 'url': 'net/NetSocket.type.html#sendFile', 'doc': '<p>Tell the operating system to stream a file as specified by <code>filename</code> directly from disk to the outgoing connection,…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.sendFile', 'type': 'function', 'url': 'net/NetSocket.type.html#sendFile', 'doc': '<p>Tell the operating system to stream a file as specified by <code>filename</code> directly from disk to the outgoing connection,…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.sendFile', 'type': 'function', 'url': 'net/NetSocket.type.html#sendFile', 'doc': '<p>Tell the operating system to stream a file as specified by <code>filename</code> directly from disk to the outgoing connection,…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.sendFile', 'type': 'function', 'url': 'net/NetSocket.type.html#sendFile', 'doc': '<p>Same as <a href="../net/NetSocket.type.html#sendFile">sendFile</a> but also takes a handler that will be called when the send has completed or\na failure has occurred</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket.writeHandlerID', 'type': 'function', 'url': 'net/NetSocket.type.html#writeHandlerID', 'doc': '<p>When a <code>NetSocket</code> is created it automatically registers an event handler with the event bus, the ID of that\nhandler is g…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'NetSocket', 'type': 'class', 'url': 'net/NetSocket.type.html', 'doc': '<p>Represents a socket-like interface to a TCP connection on either the\nclient or the server side.\n<p>\nI', 'tags': [],'icons': ['icon-class']},
{'name': 'SocketAddress.path', 'type': 'function', 'url': 'net/SocketAddress.type.html#path', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SocketAddress.host', 'type': 'function', 'url': 'net/SocketAddress.type.html#host', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SocketAddress.port', 'type': 'function', 'url': 'net/SocketAddress.type.html#port', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SocketAddress', 'type': 'class', 'url': 'net/SocketAddress.type.html', 'doc': '<p>The address of a socket, an inet socket address or a domain socket address.\n<p />\nU', 'tags': [],'icons': ['icon-class']},
{'name': 'SelfSignedCertificate.delete', 'type': 'function', 'url': 'net/SelfSignedCertificate.type.html#delete', 'doc': '<p>Delete the private key and certificate files.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SelfSignedCertificate.keyCertOptions', 'type': 'function', 'url': 'net/SelfSignedCertificate.type.html#keyCertOptions', 'doc': '<p>Provides the <code>io.vertx.core.net.KeyCertOptions</code> RSA private key file in PEM format corresponding to the <a href="../net/SelfSignedCertificate.type.html#privateKeyPath">privateKeyPath</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SelfSignedCertificate.trustOptions', 'type': 'function', 'url': 'net/SelfSignedCertificate.type.html#trustOptions', 'doc': '<p>Provides the <code>io.vertx.core.net.TrustOptions</code> X.509 certificate file in PEM format corresponding to the <a href="../net/SelfSignedCertificate.type.html#certificatePath">certificatePath</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SelfSignedCertificate.privateKeyPath', 'type': 'function', 'url': 'net/SelfSignedCertificate.type.html#privateKeyPath', 'doc': '<p>Filesystem path to the RSA private key file in PEM format</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SelfSignedCertificate.certificatePath', 'type': 'function', 'url': 'net/SelfSignedCertificate.type.html#certificatePath', 'doc': '<p>Filesystem path to the X.509 certificate file in PEM format .</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SelfSignedCertificate', 'type': 'class', 'url': 'net/SelfSignedCertificate.type.html', 'doc': '<p>A self-signed certificate helper for testing and development purposes.\n<p>\nW', 'tags': [],'icons': ['icon-class']},
{'name': 'io.vertx.ceylon.core.parsetools', 'type': 'package', 'url': 'parsetools/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'JsonParser.write', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#write', 'doc': '<p>Handle a <code>Buffer</code>, pretty much like calling <em>handler</em>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser.resume', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser.handler', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser.handle', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#handle', 'doc': '<p>Something has happened, so handle it.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser.objectEventMode', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#objectEventMode', 'doc': '<p>Flip the parser to emit a stream of events for each new json object.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser.objectValueMode', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#objectValueMode', 'doc': '<p>Flip the parser to emit a single value event for each new json object.\n</p>\nJson object currently streamed won\'t be affected.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser.arrayEventMode', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#arrayEventMode', 'doc': '<p>Flip the parser to emit a stream of events for each new json array.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser.arrayValueMode', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#arrayValueMode', 'doc': '<p>Flip the parser to emit a single value event for each new json array.\n</p>\nJson array currently streamed won\'t be affected.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser.end', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#end', 'doc': '<p>End the stream, this must be called after all the json stream has been processed.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser.exceptionHandler', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser.pause', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser.endHandler', 'type': 'function', 'url': 'parsetools/JsonParser.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonParser', 'type': 'class', 'url': 'parsetools/JsonParser.type.html', 'doc': '<p>A parser class which allows to incrementally parse json elements and emit json parse events instead of parsing a json…</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'recordParser.newFixed', 'type': 'function', 'url': 'parsetools/recordParser.object.html#newFixed', 'doc': '<p>Like <a href="../parsetools/recordParser.type.html#newFixed">newFixed</a> but wraps the <code>stream</code>. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recordParser.newFixed', 'type': 'function', 'url': 'parsetools/recordParser.object.html#newFixed', 'doc': '<p>Create a new <code>RecordParser</code> instance, initially in fixed size mode, and where the record size is specified\nby the <code>size</code>…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recordParser.newFixed', 'type': 'function', 'url': 'parsetools/recordParser.object.html#newFixed', 'doc': '<p>Like <a href="../parsetools/recordParser.type.html#newFixed">newFixed</a> but set the <code>output</code> that will receive whole records\nwhich have been parsed.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recordParser.newFixed', 'type': 'function', 'url': 'parsetools/recordParser.object.html#newFixed', 'doc': '<p>Like <a href="../parsetools/recordParser.type.html#newFixed">newFixed</a> but wraps the <code>stream</code>. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recordParser.newDelimited', 'type': 'function', 'url': 'parsetools/recordParser.object.html#newDelimited', 'doc': '<p>Create a new <code>RecordParser</code> instance, initially in delimited mode, and where the delimiter can be represented\nby the <code>…</code></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recordParser.newDelimited', 'type': 'function', 'url': 'parsetools/recordParser.object.html#newDelimited', 'doc': '<p>Like <a href="../parsetools/recordParser.type.html#newDelimited">newDelimited</a> but wraps the <code>stream</code>. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recordParser.newDelimited', 'type': 'function', 'url': 'parsetools/recordParser.object.html#newDelimited', 'doc': '<p>Like <a href="../parsetools/recordParser.type.html#newDelimited">newDelimited</a> but set the <code>output</code> that will receive whole records\nwhich have been parsed.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recordParser.newDelimited', 'type': 'function', 'url': 'parsetools/recordParser.object.html#newDelimited', 'doc': '<p>Like <a href="../parsetools/recordParser.type.html#newDelimited">newDelimited</a> but set the <code>output</code> that will receive whole records\nwhich have been parsed.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recordParser.newDelimited', 'type': 'function', 'url': 'parsetools/recordParser.object.html#newDelimited', 'doc': '<p>Like <a href="../parsetools/recordParser.type.html#newDelimited">newDelimited</a> but wraps the <code>stream</code>. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recordParser.newDelimited', 'type': 'function', 'url': 'parsetools/recordParser.object.html#newDelimited', 'doc': '<p>Create a new <code>RecordParser</code> instance, initially in delimited mode, and where the delimiter can be represented\nby the S…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recordParser.newDelimited', 'type': 'function', 'url': 'parsetools/recordParser.object.html#newDelimited', 'doc': '<p>Create a new <code>RecordParser</code> instance, initially in delimited mode, and where the delimiter can be represented\nby the <code>…</code></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'recordParser', 'type': 'object', 'url': 'parsetools/recordParser.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'recordParser', 'type': 'value', 'url': 'parsetools/index.html#recordParser', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser.resume', 'type': 'function', 'url': 'parsetools/RecordParser.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser.handler', 'type': 'function', 'url': 'parsetools/RecordParser.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser.handle', 'type': 'function', 'url': 'parsetools/RecordParser.type.html#handle', 'doc': '<p>This method is called to provide the parser with data.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser.setOutput', 'type': 'function', 'url': 'parsetools/RecordParser.type.html#setOutput', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser.delimitedMode', 'type': 'function', 'url': 'parsetools/RecordParser.type.html#delimitedMode', 'doc': '<p>Flip the parser into delimited mode, and where the delimiter can be represented\nby the delimiter <code>delim</code>.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser.delimitedMode', 'type': 'function', 'url': 'parsetools/RecordParser.type.html#delimitedMode', 'doc': '<p>Flip the parser into delimited mode, and where the delimiter can be represented\nby the String <code>delim</code> encoded in latin-1…</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser.delimitedMode', 'type': 'function', 'url': 'parsetools/RecordParser.type.html#delimitedMode', 'doc': '<p>Flip the parser into delimited mode, and where the delimiter can be represented\nby the delimiter <code>delim</code>.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser.fixedSizeMode', 'type': 'function', 'url': 'parsetools/RecordParser.type.html#fixedSizeMode', 'doc': '<p>Flip the parser into fixed size mode, where the record size is specified by <code>size</code> in bytes.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser.exceptionHandler', 'type': 'function', 'url': 'parsetools/RecordParser.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser.pause', 'type': 'function', 'url': 'parsetools/RecordParser.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser.endHandler', 'type': 'function', 'url': 'parsetools/RecordParser.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RecordParser', 'type': 'class', 'url': 'parsetools/RecordParser.type.html', 'doc': '<p>A helper class which allows you to easily parse protocols which are delimited by a sequence of bytes, or fixed\nsize…</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'JsonEvent.type', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#type', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.value', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#value', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.booleanValue', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#booleanValue', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.longValue', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#longValue', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.floatValue', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#floatValue', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.doubleValue', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#doubleValue', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.isArray', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#isArray', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.isNumber', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#isNumber', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.isNull', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#isNull', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.isBoolean', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#isBoolean', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.isString', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#isString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.isObject', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#isObject', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.stringValue', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#stringValue', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.fieldName', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#fieldName', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.binaryValue', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#binaryValue', 'doc': '<p>Return the binary value.\n<p>\nJ', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.mapTo', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#mapTo', 'doc': '<p>Decodes and returns the current value as the specified <code>type</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.integerValue', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#integerValue', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.arrayValue', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#arrayValue', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent.objectValue', 'type': 'function', 'url': 'parsetools/JsonEvent.type.html#objectValue', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JsonEvent', 'type': 'class', 'url': 'parsetools/JsonEvent.type.html', 'doc': '<p>A JSON event emited by the <a href="../parsetools/JsonParser.type.html">JsonParser</a>.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'jsonParser.newParser', 'type': 'function', 'url': 'parsetools/jsonParser.object.html#newParser', 'doc': '<p>Create a new <code>JsonParser</code> instance.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jsonParser.newParser', 'type': 'function', 'url': 'parsetools/jsonParser.object.html#newParser', 'doc': '<p>Create a new <code>JsonParser</code> instance.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jsonParser.newParser', 'type': 'function', 'url': 'parsetools/jsonParser.object.html#newParser', 'doc': '<p>Create a new <code>JsonParser</code> instance.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jsonParser', 'type': 'object', 'url': 'parsetools/jsonParser.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'jsonParser', 'type': 'value', 'url': 'parsetools/index.html#jsonParser', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'io.vertx.ceylon.core.shareddata', 'type': 'package', 'url': 'shareddata/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'SharedData.getLock', 'type': 'function', 'url': 'shareddata/SharedData.type.html#getLock', 'doc': '<p>Get an asynchronous lock with the specified name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SharedData.getCounter', 'type': 'function', 'url': 'shareddata/SharedData.type.html#getCounter', 'doc': '<p>Get an asynchronous counter.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SharedData.getClusterWideMap', 'type': 'function', 'url': 'shareddata/SharedData.type.html#getClusterWideMap', 'doc': '<p>Get the cluster wide map with the specified name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SharedData.getAsyncMap', 'type': 'function', 'url': 'shareddata/SharedData.type.html#getAsyncMap', 'doc': '<p>Get the <a href="../shareddata/AsyncMap.type.html">AsyncMap</a> with the specified name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SharedData.getLockWithTimeout', 'type': 'function', 'url': 'shareddata/SharedData.type.html#getLockWithTimeout', 'doc': '<p>Like <a href="../shareddata/SharedData.type.html#getLock">getLock</a> but specifying a timeout.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SharedData.getLocalMap', 'type': 'function', 'url': 'shareddata/SharedData.type.html#getLocalMap', 'doc': '<p>Return a <code>LocalMap</code> with the specific <code>name</code>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SharedData', 'type': 'class', 'url': 'shareddata/SharedData.type.html', 'doc': '<p>Shared data allows you to share data safely between different parts of your application in a safe way.\n<p>\nS', 'tags': [],'icons': ['icon-class']},
{'name': 'Counter.get', 'type': 'function', 'url': 'shareddata/Counter.type.html#get', 'doc': '<p>Get the current value of the counter</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Counter.getAndAdd', 'type': 'function', 'url': 'shareddata/Counter.type.html#getAndAdd', 'doc': '<p>Add the value to the counter atomically and return the value before the add</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Counter.compareAndSet', 'type': 'function', 'url': 'shareddata/Counter.type.html#compareAndSet', 'doc': '<p>Set the counter to the specified value only if the current value is the expectec value.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Counter.getAndIncrement', 'type': 'function', 'url': 'shareddata/Counter.type.html#getAndIncrement', 'doc': '<p>Increment the counter atomically and return the value before the increment.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Counter.incrementAndGet', 'type': 'function', 'url': 'shareddata/Counter.type.html#incrementAndGet', 'doc': '<p>Increment the counter atomically and return the new count</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Counter.decrementAndGet', 'type': 'function', 'url': 'shareddata/Counter.type.html#decrementAndGet', 'doc': '<p>Decrement the counter atomically and return the new count</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Counter.addAndGet', 'type': 'function', 'url': 'shareddata/Counter.type.html#addAndGet', 'doc': '<p>Add the value to the counter atomically and return the new count</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Counter', 'type': 'class', 'url': 'shareddata/Counter.type.html', 'doc': '<p>An asynchronous counter that can be used to across the cluster to maintain a consistent count.\n<p><', 'tags': [],'icons': ['icon-class']},
{'name': 'LocalMap.remove', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#remove', 'doc': '<p>Remove an entry from the map</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.get', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#get', 'doc': '<p>Get a value from the map</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.put', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#put', 'doc': '<p>Put an entry in the map</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.clear', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#clear', 'doc': '<p>Clear all entries in the map</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.replace', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#replace', 'doc': '<p>Replace the entry only if there is an existing entry with the key</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.size', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#size', 'doc': '<p>Get the size of the map</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.putIfAbsent', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#putIfAbsent', 'doc': '<p>Put the entry only if there is no existing entry for that key</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.close', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#close', 'doc': '<p>Close and release the map</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.containsValue', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#containsValue', 'doc': '<p>Returns @{code true} if this map maps one or more keys to the\nspecified value.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.containsKey', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#containsKey', 'doc': '<p>Returns <code>true</code> if this map contains a mapping for the specified\nkey.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.getOrDefault', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#getOrDefault', 'doc': '<p>Returns the value to which the specified key is mapped, or\n<code>defaultValue</code> if this map contains no mapping for the key.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.isEmpty', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#isEmpty', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.removeIfPresent', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#removeIfPresent', 'doc': '<p>Remove the entry only if there is an entry with the specified key and value.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap.replaceIfPresent', 'type': 'function', 'url': 'shareddata/LocalMap.type.html#replaceIfPresent', 'doc': '<p>Replace the entry only if there is an existing entry with the specified key and value.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalMap', 'type': 'class', 'url': 'shareddata/LocalMap.type.html', 'doc': '<p>Local maps can be used to share data safely in a single Vert.x instance.\n<p>\nT', 'tags': [],'icons': ['icon-class']},
{'name': 'AsyncMap.remove', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#remove', 'doc': '<p>Remove a value from the map, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.get', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#get', 'doc': '<p>Get a value from the map, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.put', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#put', 'doc': '<p>Like <a href="../shareddata/AsyncMap.type.html#put">put</a> but specifying a time to live for the entry.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.put', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#put', 'doc': '<p>Put a value in the map, asynchronously.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.put', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#put', 'doc': '<p>Like <a href="../shareddata/AsyncMap.type.html#put">put</a> but specifying a time to live for the entry.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.clear', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#clear', 'doc': '<p>Clear all entries in the map</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.replace', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#replace', 'doc': '<p>Replace the entry only if it is currently mapped to some value</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.size', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#size', 'doc': '<p>Provide the number of entries in the map</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.putIfAbsent', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#putIfAbsent', 'doc': '<p>Link <a href="../shareddata/AsyncMap.type.html#putIfAbsent">putIfAbsent</a> but specifying a time to live for the entry.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.putIfAbsent', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#putIfAbsent', 'doc': '<p>Put the entry only if there is no entry with the key already present.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.putIfAbsent', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#putIfAbsent', 'doc': '<p>Link <a href="../shareddata/AsyncMap.type.html#putIfAbsent">putIfAbsent</a> but specifying a time to live for the entry.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.removeIfPresent', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#removeIfPresent', 'doc': '<p>Remove a value from the map, only if entry already exists with same value.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap.replaceIfPresent', 'type': 'function', 'url': 'shareddata/AsyncMap.type.html#replaceIfPresent', 'doc': '<p>Replace the entry only if it is currently mapped to a specific value</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AsyncMap', 'type': 'class', 'url': 'shareddata/AsyncMap.type.html', 'doc': '<p>An asynchronous map.\n<p><', 'tags': [],'icons': ['icon-class']},
{'name': 'Lock.release', 'type': 'function', 'url': 'shareddata/Lock.type.html#release', 'doc': '<p>Release the lock.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Lock', 'type': 'class', 'url': 'shareddata/Lock.type.html', 'doc': '<p>An asynchronous exclusive lock which can be obtained from any node in the cluster.\n<p>\nW', 'tags': [],'icons': ['icon-class']},
{'name': 'io.vertx.ceylon.core.streams', 'type': 'package', 'url': 'streams/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'ReadStream.resume', 'type': 'function', 'url': 'streams/ReadStream.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ReadStream.handler', 'type': 'function', 'url': 'streams/ReadStream.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ReadStream.exceptionHandler', 'type': 'function', 'url': 'streams/ReadStream.type.html#exceptionHandler', 'doc': '<p>Set an exception handler on the read stream.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ReadStream.pause', 'type': 'function', 'url': 'streams/ReadStream.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ReadStream.endHandler', 'type': 'function', 'url': 'streams/ReadStream.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ReadStream', 'type': 'interface', 'url': 'streams/ReadStream.type.html', 'doc': '<p>Represents a stream of items that can be read from.\n<p>\nA', 'tags': [],'icons': ['icon-interface']},
{'name': 'pump.pump', 'type': 'function', 'url': 'streams/pump.object.html#pump', 'doc': '<p>Create a new <code>Pump</code> with the given <code>ReadStream</code> and <code>WriteStream</code></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'pump.pump', 'type': 'function', 'url': 'streams/pump.object.html#pump', 'doc': '<p>Create a new <code>Pump</code> with the given <code>ReadStream</code> and <code>WriteStream</code> and\n<code>writeQueueMaxSize</code></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'pump.pump', 'type': 'function', 'url': 'streams/pump.object.html#pump', 'doc': '<p>Create a new <code>Pump</code> with the given <code>ReadStream</code> and <code>WriteStream</code></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'pump', 'type': 'object', 'url': 'streams/pump.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'pump', 'type': 'value', 'url': 'streams/index.html#pump', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Pump.start', 'type': 'function', 'url': 'streams/Pump.type.html#start', 'doc': '<p>Start the Pump.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Pump.stop', 'type': 'function', 'url': 'streams/Pump.type.html#stop', 'doc': '<p>Stop the Pump.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Pump.setWriteQueueMaxSize', 'type': 'function', 'url': 'streams/Pump.type.html#setWriteQueueMaxSize', 'doc': '<p>Set the write queue max size to <code>maxSize</code></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Pump.numberPumped', 'type': 'function', 'url': 'streams/Pump.type.html#numberPumped', 'doc': '<p>Return the total number of items pumped by this pump.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Pump', 'type': 'class', 'url': 'streams/Pump.type.html', 'doc': '<p>Pumps data from a <a href="../streams/ReadStream.type.html">ReadStream</a> to a <a href="../streams/WriteStream.type.html">WriteStream</a> and performs flow control where necessary to\nprevent the write stream…</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'StreamBase.exceptionHandler', 'type': 'function', 'url': 'streams/StreamBase.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StreamBase', 'type': 'interface', 'url': 'streams/StreamBase.type.html', 'doc': '<p>Base interface for a stream.</p>', 'tags': [],'icons': ['icon-interface']},
{'name': 'WriteStream.write', 'type': 'function', 'url': 'streams/WriteStream.type.html#write', 'doc': '<p>Write some data to the stream. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WriteStream.end', 'type': 'function', 'url': 'streams/WriteStream.type.html#end', 'doc': '<p>Ends the stream.\n<p>\nO', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WriteStream.end', 'type': 'function', 'url': 'streams/WriteStream.type.html#end', 'doc': '<p>Same as <a href="../streams/WriteStream.type.html#end">end</a> but writes some data to the stream before ending.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WriteStream.end', 'type': 'function', 'url': 'streams/WriteStream.type.html#end', 'doc': '<p>Ends the stream.\n<p>\nO', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WriteStream.exceptionHandler', 'type': 'function', 'url': 'streams/WriteStream.type.html#exceptionHandler', 'doc': '<p>Set an exception handler on the write stream.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WriteStream.setWriteQueueMaxSize', 'type': 'function', 'url': 'streams/WriteStream.type.html#setWriteQueueMaxSize', 'doc': '<p>Set the maximum size of the write queue to <code>maxSize</code>. Y</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WriteStream.drainHandler', 'type': 'function', 'url': 'streams/WriteStream.type.html#drainHandler', 'doc': '<p>Set a drain handler on the stream. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WriteStream.writeQueueFull', 'type': 'function', 'url': 'streams/WriteStream.type.html#writeQueueFull', 'doc': '<p>This will return <code>true</code> if there are more bytes in the write queue than the value set using <a href="../streams/WriteStream.type.html#setWriteQueueMaxSize">setWriteQueueMaxSize</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'WriteStream', 'type': 'interface', 'url': 'streams/WriteStream.type.html', 'doc': '<p>Represents a stream of data that can be written to.\n<p>\nA', 'tags': [],'icons': ['icon-interface']},
{'name': 'io.vertx.ceylon.core', 'type': 'module', 'url': 'index.html', 'doc': '', 'tags': [],'icons': ['icon-module']}];
var tagIndex = [
];
