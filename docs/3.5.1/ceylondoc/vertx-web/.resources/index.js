var index = [
{'name': 'io.vertx.ceylon.web', 'type': 'package', 'url': 'index.html#section-package', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'Http2PushMapping.toJson', 'type': 'function', 'url': 'Http2PushMapping.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'Http2PushMapping', 'type': 'class', 'url': 'Http2PushMapping.type.html', 'doc': '', 'tags': [],'icons': ['icon-class']},
{'name': 'http2PushMapping.fromJson', 'type': 'function', 'url': 'http2PushMapping.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'http2PushMapping.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'http2PushMapping.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'http2PushMapping.toJava', 'type': 'value', 'url': 'http2PushMapping.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'http2PushMapping.toJson', 'type': 'function', 'url': 'http2PushMapping.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'http2PushMapping', 'type': 'object', 'url': 'http2PushMapping.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'http2PushMapping', 'type': 'value', 'url': 'index.html#http2PushMapping', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MIMEHeader.value', 'type': 'function', 'url': 'MIMEHeader.type.html#value', 'doc': '<p>Holds the unparsed value of the header.<br>\nFor the most part, this is the content before the semi-colon (&ldquo;;&ldquo;)</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MIMEHeader.parameters', 'type': 'function', 'url': 'MIMEHeader.type.html#parameters', 'doc': '<p>The parameters specified in this header value.\n<b></b></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MIMEHeader.parameter', 'type': 'function', 'url': 'MIMEHeader.type.html#parameter', 'doc': '<p>The value of the parameter specified by this key.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MIMEHeader.isPermitted', 'type': 'function', 'url': 'MIMEHeader.type.html#isPermitted', 'doc': '<p>Is this an allowed operation as specified by the corresponding header?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MIMEHeader.subComponent', 'type': 'function', 'url': 'MIMEHeader.type.html#subComponent', 'doc': '<p>Gets the parsed subcomponent part of the MIME. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MIMEHeader.component', 'type': 'function', 'url': 'MIMEHeader.type.html#component', 'doc': '<p>Gets the parsed component part of the MIME. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MIMEHeader.weight', 'type': 'function', 'url': 'MIMEHeader.type.html#weight', 'doc': '<p>Holds the weight specified in the &ldquo;q&rdquo; parameter of the header.<br>\nIf the parameter is not specified, 1.0 is assumedâ€¦</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MIMEHeader.rawValue', 'type': 'function', 'url': 'MIMEHeader.type.html#rawValue', 'doc': '<p>Contains the raw value that was received from the user agent</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MIMEHeader.isMatchedBy', 'type': 'function', 'url': 'MIMEHeader.type.html#isMatchedBy', 'doc': '<p>Test if this header is matched by matchTry header</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MIMEHeader.weightedOrder', 'type': 'function', 'url': 'MIMEHeader.type.html#weightedOrder', 'doc': '<p>An integer that represents the absolute order position of this header</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MIMEHeader', 'type': 'class', 'url': 'MIMEHeader.type.html', 'doc': '', 'tags': [],'icons': ['icon-class']},
{'name': 'Router.get', 'type': 'function', 'url': 'Router.type.html#get', 'doc': '<p>Add a route that matches any HTTP GET request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.get', 'type': 'function', 'url': 'Router.type.html#get', 'doc': '<p>Add a route that matches a HTTP GET request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.get', 'type': 'function', 'url': 'Router.type.html#get', 'doc': '<p>Add a route that matches any HTTP GET request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.put', 'type': 'function', 'url': 'Router.type.html#put', 'doc': '<p>Add a route that matches any HTTP PUT request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.put', 'type': 'function', 'url': 'Router.type.html#put', 'doc': '<p>Add a route that matches a HTTP PUT request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.put', 'type': 'function', 'url': 'Router.type.html#put', 'doc': '<p>Add a route that matches any HTTP PUT request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.clear', 'type': 'function', 'url': 'Router.type.html#clear', 'doc': '<p>Remove all the routes from this router</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.delete', 'type': 'function', 'url': 'Router.type.html#delete', 'doc': '<p>Add a route that matches any HTTP DELETE request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.delete', 'type': 'function', 'url': 'Router.type.html#delete', 'doc': '<p>Add a route that matches a HTTP DELETE request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.delete', 'type': 'function', 'url': 'Router.type.html#delete', 'doc': '<p>Add a route that matches any HTTP DELETE request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.connect', 'type': 'function', 'url': 'Router.type.html#connect', 'doc': '<p>Add a route that matches a HTTP CONNECT request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.connect', 'type': 'function', 'url': 'Router.type.html#connect', 'doc': '<p>Add a route that matches any HTTP CONNECT request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.connect', 'type': 'function', 'url': 'Router.type.html#connect', 'doc': '<p>Add a route that matches a HTTP CONNECT request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.accept', 'type': 'function', 'url': 'Router.type.html#accept', 'doc': '<p>This method is used to provide a request to the router. U</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.head', 'type': 'function', 'url': 'Router.type.html#head', 'doc': '<p>Add a route that matches a HTTP HEAD request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.head', 'type': 'function', 'url': 'Router.type.html#head', 'doc': '<p>Add a route that matches any HTTP HEAD request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.head', 'type': 'function', 'url': 'Router.type.html#head', 'doc': '<p>Add a route that matches a HTTP HEAD request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.getRoutes', 'type': 'function', 'url': 'Router.type.html#getRoutes', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.post', 'type': 'function', 'url': 'Router.type.html#post', 'doc': '<p>Add a route that matches a HTTP POST request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.post', 'type': 'function', 'url': 'Router.type.html#post', 'doc': '<p>Add a route that matches any HTTP POST request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.post', 'type': 'function', 'url': 'Router.type.html#post', 'doc': '<p>Add a route that matches a HTTP POST request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.route', 'type': 'function', 'url': 'Router.type.html#route', 'doc': '<p>Add a route that matches the specified HTTP method and path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.route', 'type': 'function', 'url': 'Router.type.html#route', 'doc': '<p>Add a route with no matching criteria, i.e. it matches all requests or failures.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.route', 'type': 'function', 'url': 'Router.type.html#route', 'doc': '<p>Add a route that matches the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.route', 'type': 'function', 'url': 'Router.type.html#route', 'doc': '<p>Add a route that matches the specified HTTP method and path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.options', 'type': 'function', 'url': 'Router.type.html#options', 'doc': '<p>Add a route that matches any HTTP OPTIONS request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.options', 'type': 'function', 'url': 'Router.type.html#options', 'doc': '<p>Add a route that matches a HTTP OPTIONS request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.options', 'type': 'function', 'url': 'Router.type.html#options', 'doc': '<p>Add a route that matches any HTTP OPTIONS request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.trace', 'type': 'function', 'url': 'Router.type.html#trace', 'doc': '<p>Add a route that matches any HTTP TRACE request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.trace', 'type': 'function', 'url': 'Router.type.html#trace', 'doc': '<p>Add a route that matches a HTTP TRACE request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.trace', 'type': 'function', 'url': 'Router.type.html#trace', 'doc': '<p>Add a route that matches any HTTP TRACE request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.patch', 'type': 'function', 'url': 'Router.type.html#patch', 'doc': '<p>Add a route that matches a HTTP PATCH request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.patch', 'type': 'function', 'url': 'Router.type.html#patch', 'doc': '<p>Add a route that matches any HTTP PATCH request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.patch', 'type': 'function', 'url': 'Router.type.html#patch', 'doc': '<p>Add a route that matches a HTTP PATCH request and the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.exceptionHandler', 'type': 'function', 'url': 'Router.type.html#exceptionHandler', 'doc': '<p>Specify a handler for any unhandled exceptions on this router.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.routeWithRegex', 'type': 'function', 'url': 'Router.type.html#routeWithRegex', 'doc': '<p>Add a route that matches the specified HTTP method and path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.routeWithRegex', 'type': 'function', 'url': 'Router.type.html#routeWithRegex', 'doc': '<p>Add a route that matches the specified path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.routeWithRegex', 'type': 'function', 'url': 'Router.type.html#routeWithRegex', 'doc': '<p>Add a route that matches the specified HTTP method and path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.getWithRegex', 'type': 'function', 'url': 'Router.type.html#getWithRegex', 'doc': '<p>Add a route that matches a HTTP GET request and the specified path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.headWithRegex', 'type': 'function', 'url': 'Router.type.html#headWithRegex', 'doc': '<p>Add a route that matches a HTTP HEAD request and the specified path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.optionsWithRegex', 'type': 'function', 'url': 'Router.type.html#optionsWithRegex', 'doc': '<p>Add a route that matches a HTTP OPTIONS request and the specified path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.putWithRegex', 'type': 'function', 'url': 'Router.type.html#putWithRegex', 'doc': '<p>Add a route that matches a HTTP PUT request and the specified path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.postWithRegex', 'type': 'function', 'url': 'Router.type.html#postWithRegex', 'doc': '<p>Add a route that matches a HTTP POST request and the specified path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.deleteWithRegex', 'type': 'function', 'url': 'Router.type.html#deleteWithRegex', 'doc': '<p>Add a route that matches a HTTP DELETE request and the specified path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.traceWithRegex', 'type': 'function', 'url': 'Router.type.html#traceWithRegex', 'doc': '<p>Add a route that matches a HTTP TRACE request and the specified path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.connectWithRegex', 'type': 'function', 'url': 'Router.type.html#connectWithRegex', 'doc': '<p>Add a route that matches a HTTP CONNECT request and the specified path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.patchWithRegex', 'type': 'function', 'url': 'Router.type.html#patchWithRegex', 'doc': '<p>Add a route that matches a HTTP PATCH request and the specified path regex</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.mountSubRouter', 'type': 'function', 'url': 'Router.type.html#mountSubRouter', 'doc': '<p>Mount a sub router on this router</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.handleContext', 'type': 'function', 'url': 'Router.type.html#handleContext', 'doc': '<p>Used to route a context to the router.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router.handleFailure', 'type': 'function', 'url': 'Router.type.html#handleFailure', 'doc': '<p>Used to route a failure to the router.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Router', 'type': 'class', 'url': 'Router.type.html', 'doc': '<p>A router receives request from an <code>io.vertx.core.http.HttpServer</code> and routes it to the first matching\n<a href="Route.type.html">Route</a> that itâ€¦</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'Cookie.encode', 'type': 'function', 'url': 'Cookie.type.html#encode', 'doc': '<p>Encode the cookie to a string.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.setValue', 'type': 'function', 'url': 'Cookie.type.html#setValue', 'doc': '<p>Sets the value of this cookie</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.getPath', 'type': 'function', 'url': 'Cookie.type.html#getPath', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.getValue', 'type': 'function', 'url': 'Cookie.type.html#getValue', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.getDomain', 'type': 'function', 'url': 'Cookie.type.html#getDomain', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.isChanged', 'type': 'function', 'url': 'Cookie.type.html#isChanged', 'doc': '<p>Has the cookie been changed?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.setChanged', 'type': 'function', 'url': 'Cookie.type.html#setChanged', 'doc': '<p>Set the cookie as being changed.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.isFromUserAgent', 'type': 'function', 'url': 'Cookie.type.html#isFromUserAgent', 'doc': '<p>Has this Cookie been sent from the User Agent (the browser)?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.setPath', 'type': 'function', 'url': 'Cookie.type.html#setPath', 'doc': '<p>Sets the path of this cookie.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.setDomain', 'type': 'function', 'url': 'Cookie.type.html#setDomain', 'doc': '<p>Sets the domain of this cookie</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.setSecure', 'type': 'function', 'url': 'Cookie.type.html#setSecure', 'doc': '<p>Sets the security getStatus of this cookie</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.getName', 'type': 'function', 'url': 'Cookie.type.html#getName', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.setMaxAge', 'type': 'function', 'url': 'Cookie.type.html#setMaxAge', 'doc': '<p>Sets the maximum age of this cookie in seconds.\nI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie.setHttpOnly', 'type': 'function', 'url': 'Cookie.type.html#setHttpOnly', 'doc': '<p>Determines if this cookie is HTTP only.\nI</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Cookie', 'type': 'class', 'url': 'Cookie.type.html', 'doc': '<p>Represents an HTTP Cookie.\n<p>\nA', 'tags': [],'icons': ['icon-class']},
{'name': 'cookie.cookie', 'type': 'function', 'url': 'cookie.object.html#cookie', 'doc': '<p>Create a new cookie</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'cookie', 'type': 'object', 'url': 'cookie.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'cookie', 'type': 'value', 'url': 'index.html#cookie', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'router.router', 'type': 'function', 'url': 'router.object.html#router', 'doc': '<p>Create a router</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'router', 'type': 'object', 'url': 'router.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'router', 'type': 'value', 'url': 'index.html#router', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Locale.language', 'type': 'function', 'url': 'Locale.type.html#language', 'doc': '<p>Returns the language as reported by the HTTP client.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Locale.country', 'type': 'function', 'url': 'Locale.type.html#country', 'doc': '<p>Returns the country as reported by the HTTP client.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Locale.variant', 'type': 'function', 'url': 'Locale.type.html#variant', 'doc': '<p>Returns the variant as reported by the HTTP client.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Locale', 'type': 'class', 'url': 'Locale.type.html', 'doc': '', 'tags': [],'icons': ['icon-class']},
{'name': 'LanguageHeader.value', 'type': 'function', 'url': 'LanguageHeader.type.html#value', 'doc': '<p>Holds the unparsed value of the header.<br>\nFor the most part, this is the content before the semi-colon (&ldquo;;&ldquo;)</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.parameters', 'type': 'function', 'url': 'LanguageHeader.type.html#parameters', 'doc': '<p>The parameters specified in this header value.\n<b></b></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.parameter', 'type': 'function', 'url': 'LanguageHeader.type.html#parameter', 'doc': '<p>The value of the parameter specified by this key.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.isPermitted', 'type': 'function', 'url': 'LanguageHeader.type.html#isPermitted', 'doc': '<p>Is this an allowed operation as specified by the corresponding header?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.weight', 'type': 'function', 'url': 'LanguageHeader.type.html#weight', 'doc': '<p>Holds the weight specified in the &ldquo;q&rdquo; parameter of the header.<br>\nIf the parameter is not specified, 1.0 is assumedâ€¦</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.tag', 'type': 'function', 'url': 'LanguageHeader.type.html#tag', 'doc': '<p>The tag of the language as specified by\n<a href="https://tools.ietf.org/html/rfc7231#section-3.1.3.1">rfc7231#section-3.1.3.1</a>.<br>\nEquivalent to</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.rawValue', 'type': 'function', 'url': 'LanguageHeader.type.html#rawValue', 'doc': '<p>Contains the raw value that was received from the user agent</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.subtagCount', 'type': 'function', 'url': 'LanguageHeader.type.html#subtagCount', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.subtag', 'type': 'function', 'url': 'LanguageHeader.type.html#subtag', 'doc': '<p>A subtag of this language header.<br></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.subtag', 'type': 'function', 'url': 'LanguageHeader.type.html#subtag', 'doc': '<p>The subtag of the language as specified by\n<a href="https://tools.ietf.org/html/rfc7231#section-3.1.3.1">rfc7231#section-3.1.3.1</a>.<br>\nEquivalent to</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.subtag', 'type': 'function', 'url': 'LanguageHeader.type.html#subtag', 'doc': '<p>A subtag of this language header.<br></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.isMatchedBy', 'type': 'function', 'url': 'LanguageHeader.type.html#isMatchedBy', 'doc': '<p>Test if this header is matched by matchTry header</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader.weightedOrder', 'type': 'function', 'url': 'LanguageHeader.type.html#weightedOrder', 'doc': '<p>An integer that represents the absolute order position of this header</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LanguageHeader', 'type': 'class', 'url': 'LanguageHeader.type.html', 'doc': '<p>A parsed language header.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'RoutingContext.remove', 'type': 'function', 'url': 'RoutingContext.type.html#remove', 'doc': '<p>Remove some data from the context.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.get', 'type': 'function', 'url': 'RoutingContext.type.html#get', 'doc': '<p>Get some data from the context.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.put', 'type': 'function', 'url': 'RoutingContext.type.html#put', 'doc': '<p>Put some arbitrary data in the context.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.next', 'type': 'function', 'url': 'RoutingContext.type.html#next', 'doc': '<p>Tell the router to route this context to the next matching route (if any).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.failure', 'type': 'function', 'url': 'RoutingContext.type.html#failure', 'doc': '<p>If the context is being routed to failure handlers after a failure has been triggered by calling\n<a href="RoutingContext.type.html#fail">fail</a> then this willâ€¦</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.setUser', 'type': 'function', 'url': 'RoutingContext.type.html#setUser', 'doc': '<p>Set the user.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.setBody', 'type': 'function', 'url': 'RoutingContext.type.html#setBody', 'doc': '<p>Set the body. U</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.getBody', 'type': 'function', 'url': 'RoutingContext.type.html#getBody', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.getBodyAsString', 'type': 'function', 'url': 'RoutingContext.type.html#getBodyAsString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.getBodyAsJson', 'type': 'function', 'url': 'RoutingContext.type.html#getBodyAsJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.getBodyAsJsonArray', 'type': 'function', 'url': 'RoutingContext.type.html#getBodyAsJsonArray', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.getAcceptableContentType', 'type': 'function', 'url': 'RoutingContext.type.html#getAcceptableContentType', 'doc': '<p>If the route specifies produces matches, e.g. produces <code>text/html</code> and <code>text/plain</code>, and the <code>accept</code> header\nmatches one orâ€¦</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.setSession', 'type': 'function', 'url': 'RoutingContext.type.html#setSession', 'doc': '<p>Set the session. U</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.setAcceptableContentType', 'type': 'function', 'url': 'RoutingContext.type.html#setAcceptableContentType', 'doc': '<p>Set the acceptable content type.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.session', 'type': 'function', 'url': 'RoutingContext.type.html#session', 'doc': '<p>Get the session. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.request', 'type': 'function', 'url': 'RoutingContext.type.html#request', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.statusCode', 'type': 'function', 'url': 'RoutingContext.type.html#statusCode', 'doc': '<p>If the context is being routed to failure handlers after a failure has been triggered by calling\n<a href="RoutingContext.type.html#fail">fail</a>  then this willâ€¦</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.response', 'type': 'function', 'url': 'RoutingContext.type.html#response', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.user', 'type': 'function', 'url': 'RoutingContext.type.html#user', 'doc': '<p>Get the authenticated user (if any).</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.failed', 'type': 'function', 'url': 'RoutingContext.type.html#failed', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.addCookie', 'type': 'function', 'url': 'RoutingContext.type.html#addCookie', 'doc': '<p>Add a cookie. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.currentRoute', 'type': 'function', 'url': 'RoutingContext.type.html#currentRoute', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.cookies', 'type': 'function', 'url': 'RoutingContext.type.html#cookies', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.queryParams', 'type': 'function', 'url': 'RoutingContext.type.html#queryParams', 'doc': '<p>Returns a map of all query parameters inside the <a href="https://en.wikipedia.org/wiki/Query_string">query string</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.vertx', 'type': 'function', 'url': 'RoutingContext.type.html#vertx', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.fail', 'type': 'function', 'url': 'RoutingContext.type.html#fail', 'doc': '<p>Fail the context with the specified throwable.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.fail', 'type': 'function', 'url': 'RoutingContext.type.html#fail', 'doc': '<p>Fail the context with the specified status code.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.fail', 'type': 'function', 'url': 'RoutingContext.type.html#fail', 'doc': '<p>Fail the context with the specified throwable.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.reroute', 'type': 'function', 'url': 'RoutingContext.type.html#reroute', 'doc': '<p>Restarts the current router with a new method and path.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.reroute', 'type': 'function', 'url': 'RoutingContext.type.html#reroute', 'doc': '<p>Restarts the current router with a new path and reusing the original method.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.reroute', 'type': 'function', 'url': 'RoutingContext.type.html#reroute', 'doc': '<p>Restarts the current router with a new method and path.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.normalisedPath', 'type': 'function', 'url': 'RoutingContext.type.html#normalisedPath', 'doc': '<p>Return the normalised path for the request.\n<p>\nT', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.mountPoint', 'type': 'function', 'url': 'RoutingContext.type.html#mountPoint', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.getCookie', 'type': 'function', 'url': 'RoutingContext.type.html#getCookie', 'doc': '<p>Get the cookie with the specified name. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.removeCookie', 'type': 'function', 'url': 'RoutingContext.type.html#removeCookie', 'doc': '<p>Expire a cookie, notifying a User Agent to remove it from its cookie jar. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.cookieCount', 'type': 'function', 'url': 'RoutingContext.type.html#cookieCount', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.getBodyAsString', 'type': 'function', 'url': 'RoutingContext.type.html#getBodyAsString', 'doc': '<p>Get the entire HTTP request body as a string, assuming the specified encoding. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.fileUploads', 'type': 'function', 'url': 'RoutingContext.type.html#fileUploads', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.parsedHeaders', 'type': 'function', 'url': 'RoutingContext.type.html#parsedHeaders', 'doc': '<p>The headers:</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.addHeadersEndHandler', 'type': 'function', 'url': 'RoutingContext.type.html#addHeadersEndHandler', 'doc': '<p>Add a handler that will be called just before headers are written to the response.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.removeHeadersEndHandler', 'type': 'function', 'url': 'RoutingContext.type.html#removeHeadersEndHandler', 'doc': '<p>Remove a headers end handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.addBodyEndHandler', 'type': 'function', 'url': 'RoutingContext.type.html#addBodyEndHandler', 'doc': '<p>Provides a handler that will be called after the last part of the body is written to the wire.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.removeBodyEndHandler', 'type': 'function', 'url': 'RoutingContext.type.html#removeBodyEndHandler', 'doc': '<p>Remove a body end handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.clearUser', 'type': 'function', 'url': 'RoutingContext.type.html#clearUser', 'doc': '<p>Clear the current user object in the context.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.acceptableLocales', 'type': 'function', 'url': 'RoutingContext.type.html#acceptableLocales', 'doc': '<p>Returns the locales for the current request. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.acceptableLanguages', 'type': 'function', 'url': 'RoutingContext.type.html#acceptableLanguages', 'doc': '<p>Returns the languages for the current request. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.preferredLocale', 'type': 'function', 'url': 'RoutingContext.type.html#preferredLocale', 'doc': '<p>Helper to return the user preferred locale.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.preferredLanguage', 'type': 'function', 'url': 'RoutingContext.type.html#preferredLanguage', 'doc': '<p>Helper to return the user preferred language.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.pathParams', 'type': 'function', 'url': 'RoutingContext.type.html#pathParams', 'doc': '<p>Returns a map of named parameters as defined in path declaration with their actual values</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.pathParam', 'type': 'function', 'url': 'RoutingContext.type.html#pathParam', 'doc': '<p>Gets the value of a single path parameter</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext.queryParam', 'type': 'function', 'url': 'RoutingContext.type.html#queryParam', 'doc': '<p>Gets the value of a single query parameter</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RoutingContext', 'type': 'class', 'url': 'RoutingContext.type.html', 'doc': '<p>Represents the context for the handling of a request in Vert.x-Web.\n<p>\nA', 'tags': [],'icons': ['icon-class']},
{'name': 'ParsedHeaderValue.value', 'type': 'function', 'url': 'ParsedHeaderValue.type.html#value', 'doc': '<p>Holds the unparsed value of the header.<br>\nFor the most part, this is the content before the semi-colon (&ldquo;;&ldquo;)</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValue.parameters', 'type': 'function', 'url': 'ParsedHeaderValue.type.html#parameters', 'doc': '<p>The parameters specified in this header value.\n<b></b></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValue.parameter', 'type': 'function', 'url': 'ParsedHeaderValue.type.html#parameter', 'doc': '<p>The value of the parameter specified by this key.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValue.isPermitted', 'type': 'function', 'url': 'ParsedHeaderValue.type.html#isPermitted', 'doc': '<p>Is this an allowed operation as specified by the corresponding header?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValue.weight', 'type': 'function', 'url': 'ParsedHeaderValue.type.html#weight', 'doc': '<p>Holds the weight specified in the &ldquo;q&rdquo; parameter of the header.<br>\nIf the parameter is not specified, 1.0 is assumedâ€¦</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValue.rawValue', 'type': 'function', 'url': 'ParsedHeaderValue.type.html#rawValue', 'doc': '<p>Contains the raw value that was received from the user agent</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValue.isMatchedBy', 'type': 'function', 'url': 'ParsedHeaderValue.type.html#isMatchedBy', 'doc': '<p>Test if this header is matched by matchTry header</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValue.weightedOrder', 'type': 'function', 'url': 'ParsedHeaderValue.type.html#weightedOrder', 'doc': '<p>An integer that represents the absolute order position of this header</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValue', 'type': 'interface', 'url': 'ParsedHeaderValue.type.html', 'doc': '', 'tags': [],'icons': ['icon-interface']},
{'name': 'Session.remove', 'type': 'function', 'url': 'Session.type.html#remove', 'doc': '<p>Remove some data from the session</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session.get', 'type': 'function', 'url': 'Session.type.html#get', 'doc': '<p>Get some data from the session</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session.put', 'type': 'function', 'url': 'Session.type.html#put', 'doc': '<p>Put some data in a session</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session.destroy', 'type': 'function', 'url': 'Session.type.html#destroy', 'doc': '<p>Destroy the session</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session.id', 'type': 'function', 'url': 'Session.type.html#id', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session.timeout', 'type': 'function', 'url': 'Session.type.html#timeout', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session.oldId', 'type': 'function', 'url': 'Session.type.html#oldId', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session.isDestroyed', 'type': 'function', 'url': 'Session.type.html#isDestroyed', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session.isRegenerated', 'type': 'function', 'url': 'Session.type.html#isRegenerated', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session.lastAccessed', 'type': 'function', 'url': 'Session.type.html#lastAccessed', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session.regenerateId', 'type': 'function', 'url': 'Session.type.html#regenerateId', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session.setAccessed', 'type': 'function', 'url': 'Session.type.html#setAccessed', 'doc': '<p>Mark the session as being accessed.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Session', 'type': 'class', 'url': 'Session.type.html', 'doc': '<p>Represents a browser session.\n<p>\nS', 'tags': [],'icons': ['icon-class']},
{'name': 'Route.remove', 'type': 'function', 'url': 'Route.type.html#remove', 'doc': '<p>Remove this route from the router</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.path', 'type': 'function', 'url': 'Route.type.html#path', 'doc': '<p>Set the path prefix for this route.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.handler', 'type': 'function', 'url': 'Route.type.html#handler', 'doc': '<p>Specify a request handler for the route.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.order', 'type': 'function', 'url': 'Route.type.html#order', 'doc': '<p>Specify the order for this route.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.enable', 'type': 'function', 'url': 'Route.type.html#enable', 'doc': '<p>Enable this route.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.disable', 'type': 'function', 'url': 'Route.type.html#disable', 'doc': '<p>Disable this route.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.getPath', 'type': 'function', 'url': 'Route.type.html#getPath', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.last', 'type': 'function', 'url': 'Route.type.html#last', 'doc': '<p>Specify this is the last route for the router.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.method', 'type': 'function', 'url': 'Route.type.html#method', 'doc': '<p>Add an HTTP method for this route.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.failureHandler', 'type': 'function', 'url': 'Route.type.html#failureHandler', 'doc': '<p>Specify a failure handler for the route.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.produces', 'type': 'function', 'url': 'Route.type.html#produces', 'doc': '<p>Add a content type produced by this route.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.consumes', 'type': 'function', 'url': 'Route.type.html#consumes', 'doc': '<p>Add a content type consumed by this route.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.blockingHandler', 'type': 'function', 'url': 'Route.type.html#blockingHandler', 'doc': '<p>Like <a href="Route.type.html#blockingHandler">blockingHandler</a> called with ordered = true</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.blockingHandler', 'type': 'function', 'url': 'Route.type.html#blockingHandler', 'doc': '<p>Specify a blocking request handler for the route.\nT</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.blockingHandler', 'type': 'function', 'url': 'Route.type.html#blockingHandler', 'doc': '<p>Like <a href="Route.type.html#blockingHandler">blockingHandler</a> called with ordered = true</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.pathRegex', 'type': 'function', 'url': 'Route.type.html#pathRegex', 'doc': '<p>Set the path prefix as a regular expression.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.useNormalisedPath', 'type': 'function', 'url': 'Route.type.html#useNormalisedPath', 'doc': '<p>If true then the normalised request path will be used when routing (e.g. removing duplicate /)\nDefault is true</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route.setRegexGroupsNames', 'type': 'function', 'url': 'Route.type.html#setRegexGroupsNames', 'doc': '<p>When you add a new route with a regular expression, you can add named capture groups for parameters. <br />\nHowever, if youâ€¦</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Route', 'type': 'class', 'url': 'Route.type.html', 'doc': '<p>A route is a holder for a set of criteria which determine whether an HTTP request or failure should be routed\nto aâ€¦</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'ParsedHeaderValues.accept', 'type': 'function', 'url': 'ParsedHeaderValues.type.html#accept', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValues.contentType', 'type': 'function', 'url': 'ParsedHeaderValues.type.html#contentType', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValues.acceptEncoding', 'type': 'function', 'url': 'ParsedHeaderValues.type.html#acceptEncoding', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValues.acceptLanguage', 'type': 'function', 'url': 'ParsedHeaderValues.type.html#acceptLanguage', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValues.acceptCharset', 'type': 'function', 'url': 'ParsedHeaderValues.type.html#acceptCharset', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ParsedHeaderValues', 'type': 'class', 'url': 'ParsedHeaderValues.type.html', 'doc': '<p>A container with the request\'s headers that are meaningful enough to be parsed\nContains:</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'FileUpload.name', 'type': 'function', 'url': 'FileUpload.type.html#name', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileUpload.size', 'type': 'function', 'url': 'FileUpload.type.html#size', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileUpload.fileName', 'type': 'function', 'url': 'FileUpload.type.html#fileName', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileUpload.contentTransferEncoding', 'type': 'function', 'url': 'FileUpload.type.html#contentTransferEncoding', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileUpload.uploadedFileName', 'type': 'function', 'url': 'FileUpload.type.html#uploadedFileName', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileUpload.charSet', 'type': 'function', 'url': 'FileUpload.type.html#charSet', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileUpload.contentType', 'type': 'function', 'url': 'FileUpload.type.html#contentType', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FileUpload', 'type': 'class', 'url': 'FileUpload.type.html', 'doc': '<p>Represents a file-upload from an HTTP multipart form submission.\n<p><', 'tags': [],'icons': ['icon-class']},
{'name': 'locale.create', 'type': 'function', 'url': 'locale.object.html#create', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'locale.create', 'type': 'function', 'url': 'locale.object.html#create', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'locale.create', 'type': 'function', 'url': 'locale.object.html#create', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'locale.create', 'type': 'function', 'url': 'locale.object.html#create', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'locale.create', 'type': 'function', 'url': 'locale.object.html#create', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'locale', 'type': 'object', 'url': 'locale.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'locale', 'type': 'value', 'url': 'index.html#locale', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'io.vertx.ceylon.web.handler', 'type': 'package', 'url': 'handler/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'LoggerFormat', 'type': 'class', 'url': 'handler/LoggerFormat.type.html', 'doc': '<p>The possible out of the box formats.</p>', 'tags': [],'icons': ['icon-class', 'icon-decoration-abstract', 'icon-decoration-enumerated']},
{'name': 'default', 'type': 'object', 'url': 'handler/default.object.html', 'doc': '<p><i>remote-client</i> - - [<i>timestamp</i>] &ldquo;<i>method</i> <i>uri</i> <i>version</i>&rdquo; <i>status</i> <i>content-length</i> &ldquo;<i>referrer</i>&rdquo; &ldquo;<i>user-agent</i>&rdquo;</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'default', 'type': 'value', 'url': 'handler/index.html#default', 'doc': '<p><i>remote-client</i> - - [<i>timestamp</i>] &ldquo;<i>method</i> <i>uri</i> <i>version</i>&rdquo; <i>status</i> <i>content-length</i> &ldquo;<i>referrer</i>&rdquo; &ldquo;<i>user-agent</i>&rdquo;</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'short', 'type': 'object', 'url': 'handler/short.object.html', 'doc': '<p><i>remote-client</i> - <i>method</i> <i>uri</i> <i>version</i> <i>status</i> <i>content-length</i> <i>duration</i> ms</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'short', 'type': 'value', 'url': 'handler/index.html#short', 'doc': '<p><i>remote-client</i> - <i>method</i> <i>uri</i> <i>version</i> <i>status</i> <i>content-length</i> <i>duration</i> ms</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'tiny', 'type': 'object', 'url': 'handler/tiny.object.html', 'doc': '<p><i>method</i> <i>uri</i> <i>status</i> - <i>content-length</i> <i>duration</i></p>', 'tags': [],'icons': ['icon-object']},
{'name': 'tiny', 'type': 'value', 'url': 'handler/index.html#tiny', 'doc': '<p><i>method</i> <i>uri</i> <i>status</i> - <i>content-length</i> <i>duration</i></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'loggerFormat.toString', 'type': 'function', 'url': 'handler/loggerFormat.object.html#toString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'loggerFormat.fromString', 'type': 'function', 'url': 'handler/loggerFormat.object.html#fromString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'handler/loggerFormat.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'handler/loggerFormat.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'loggerFormat.toJava', 'type': 'value', 'url': 'handler/loggerFormat.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'handler/loggerFormat.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'handler/loggerFormat.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'loggerFormat.toCeylon', 'type': 'value', 'url': 'handler/loggerFormat.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'loggerFormat', 'type': 'object', 'url': 'handler/loggerFormat.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'loggerFormat', 'type': 'value', 'url': 'handler/index.html#loggerFormat', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AuthHandler.handle', 'type': 'function', 'url': 'handler/AuthHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AuthHandler.parseCredentials', 'type': 'function', 'url': 'handler/AuthHandler.type.html#parseCredentials', 'doc': '<p>Parses the credentials from the request into a JsonObject.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AuthHandler.addAuthority', 'type': 'function', 'url': 'handler/AuthHandler.type.html#addAuthority', 'doc': '<p>Add a required authority for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AuthHandler.authorize', 'type': 'function', 'url': 'handler/AuthHandler.type.html#authorize', 'doc': '<p>Authorizes the given user against all added authorities.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AuthHandler.addAuthorities', 'type': 'function', 'url': 'handler/AuthHandler.type.html#addAuthorities', 'doc': '<p>Add a set of required authorities for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'AuthHandler', 'type': 'interface', 'url': 'handler/AuthHandler.type.html', 'doc': '<p>Base interface for auth handlers.\n<p>\nA', 'tags': [],'icons': ['icon-interface']},
{'name': 'errorHandler.create', 'type': 'function', 'url': 'handler/errorHandler.object.html#create', 'doc': '<p>Create an error handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'errorHandler.create', 'type': 'function', 'url': 'handler/errorHandler.object.html#create', 'doc': '<p>Create an error handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'errorHandler.create', 'type': 'function', 'url': 'handler/errorHandler.object.html#create', 'doc': '<p>Create an error handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'errorHandler.create', 'type': 'function', 'url': 'handler/errorHandler.object.html#create', 'doc': '<p>Create an error handler using defaults</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'errorHandler.create', 'type': 'function', 'url': 'handler/errorHandler.object.html#create', 'doc': '<p>Create an error handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'errorHandler', 'type': 'object', 'url': 'handler/errorHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'errorHandler', 'type': 'value', 'url': 'handler/index.html#errorHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FormLoginHandler.handle', 'type': 'function', 'url': 'handler/FormLoginHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FormLoginHandler.setUsernameParam', 'type': 'function', 'url': 'handler/FormLoginHandler.type.html#setUsernameParam', 'doc': '<p>Set the name of the form param used to submit the username</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FormLoginHandler.setPasswordParam', 'type': 'function', 'url': 'handler/FormLoginHandler.type.html#setPasswordParam', 'doc': '<p>Set the name of the form param used to submit the password</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FormLoginHandler.setReturnURLParam', 'type': 'function', 'url': 'handler/FormLoginHandler.type.html#setReturnURLParam', 'doc': '<p>Set the name of the session attrioute used to specify the return url</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FormLoginHandler.setDirectLoggedInOKURL', 'type': 'function', 'url': 'handler/FormLoginHandler.type.html#setDirectLoggedInOKURL', 'doc': '<p>Set the url to redirect to if the user logs in directly at the url of the form login handler\nwithout being redirectedâ€¦</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FormLoginHandler', 'type': 'class', 'url': 'handler/FormLoginHandler.type.html', 'doc': '<p>Handler that handles login from a form on a custom login page.\n<p>\nU', 'tags': [],'icons': ['icon-class']},
{'name': 'ErrorHandler.handle', 'type': 'function', 'url': 'handler/ErrorHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ErrorHandler', 'type': 'class', 'url': 'handler/ErrorHandler.type.html', 'doc': '<p>A pretty error handler for rendering error pages.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'RedirectAuthHandler.handle', 'type': 'function', 'url': 'handler/RedirectAuthHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RedirectAuthHandler.parseCredentials', 'type': 'function', 'url': 'handler/RedirectAuthHandler.type.html#parseCredentials', 'doc': '<p>Parses the credentials from the request into a JsonObject.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RedirectAuthHandler.addAuthority', 'type': 'function', 'url': 'handler/RedirectAuthHandler.type.html#addAuthority', 'doc': '<p>Add a required authority for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RedirectAuthHandler.authorize', 'type': 'function', 'url': 'handler/RedirectAuthHandler.type.html#authorize', 'doc': '<p>Authorizes the given user against all added authorities.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RedirectAuthHandler.addAuthorities', 'type': 'function', 'url': 'handler/RedirectAuthHandler.type.html#addAuthorities', 'doc': '<p>Add a set of required authorities for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'RedirectAuthHandler', 'type': 'class', 'url': 'handler/RedirectAuthHandler.type.html', 'doc': '<p>An auth handler that\'s used to handle auth by redirecting user to a custom login page.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'chainAuthHandler.create', 'type': 'function', 'url': 'handler/chainAuthHandler.object.html#create', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'chainAuthHandler', 'type': 'object', 'url': 'handler/chainAuthHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'chainAuthHandler', 'type': 'value', 'url': 'handler/index.html#chainAuthHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ResponseContentTypeHandler.handle', 'type': 'function', 'url': 'handler/ResponseContentTypeHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ResponseContentTypeHandler', 'type': 'class', 'url': 'handler/ResponseContentTypeHandler.type.html', 'doc': '<p>A handler which sets the response content type automatically according to the best <code>Accept</code> header match.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'DigestAuthHandler.handle', 'type': 'function', 'url': 'handler/DigestAuthHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DigestAuthHandler.parseCredentials', 'type': 'function', 'url': 'handler/DigestAuthHandler.type.html#parseCredentials', 'doc': '<p>Parses the credentials from the request into a JsonObject.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DigestAuthHandler.addAuthority', 'type': 'function', 'url': 'handler/DigestAuthHandler.type.html#addAuthority', 'doc': '<p>Add a required authority for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DigestAuthHandler.authorize', 'type': 'function', 'url': 'handler/DigestAuthHandler.type.html#authorize', 'doc': '<p>Authorizes the given user against all added authorities.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DigestAuthHandler.addAuthorities', 'type': 'function', 'url': 'handler/DigestAuthHandler.type.html#addAuthorities', 'doc': '<p>Add a set of required authorities for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'DigestAuthHandler', 'type': 'class', 'url': 'handler/DigestAuthHandler.type.html', 'doc': '<p>An auth handler that provides HTTP Basic Authentication support.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'responseTimeHandler.create', 'type': 'function', 'url': 'handler/responseTimeHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'responseTimeHandler', 'type': 'object', 'url': 'handler/responseTimeHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'responseTimeHandler', 'type': 'value', 'url': 'handler/index.html#responseTimeHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'VirtualHostHandler.handle', 'type': 'function', 'url': 'handler/VirtualHostHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'VirtualHostHandler', 'type': 'class', 'url': 'handler/VirtualHostHandler.type.html', 'doc': '<p>Handler that will filter requests based on the request Host name.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'CookieHandler.handle', 'type': 'function', 'url': 'handler/CookieHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CookieHandler', 'type': 'class', 'url': 'handler/CookieHandler.type.html', 'doc': '<p>A handler which decodes cookies from the request, makes them available in the\nand writes them back in the response.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'digestAuthHandler.create', 'type': 'function', 'url': 'handler/digestAuthHandler.object.html#create', 'doc': '<p>Create a digest auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'digestAuthHandler.create', 'type': 'function', 'url': 'handler/digestAuthHandler.object.html#create', 'doc': '<p>Create a digest auth handler, specifying the expire timeout for nonces.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'digestAuthHandler.create', 'type': 'function', 'url': 'handler/digestAuthHandler.object.html#create', 'doc': '<p>Create a digest auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'digestAuthHandler', 'type': 'object', 'url': 'handler/digestAuthHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'digestAuthHandler', 'type': 'value', 'url': 'handler/index.html#digestAuthHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'basicAuthHandler.create', 'type': 'function', 'url': 'handler/basicAuthHandler.object.html#create', 'doc': '<p>Create a basic auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'basicAuthHandler.create', 'type': 'function', 'url': 'handler/basicAuthHandler.object.html#create', 'doc': '<p>Create a basic auth handler, specifying realm</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'basicAuthHandler.create', 'type': 'function', 'url': 'handler/basicAuthHandler.object.html#create', 'doc': '<p>Create a basic auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'basicAuthHandler', 'type': 'object', 'url': 'handler/basicAuthHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'basicAuthHandler', 'type': 'value', 'url': 'handler/index.html#basicAuthHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'OAuth2AuthHandler.handle', 'type': 'function', 'url': 'handler/OAuth2AuthHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'OAuth2AuthHandler.extraParams', 'type': 'function', 'url': 'handler/OAuth2AuthHandler.type.html#extraParams', 'doc': '<p>Extra parameters needed to be passed while requesting a token.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'OAuth2AuthHandler.parseCredentials', 'type': 'function', 'url': 'handler/OAuth2AuthHandler.type.html#parseCredentials', 'doc': '<p>Parses the credentials from the request into a JsonObject.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'OAuth2AuthHandler.addAuthority', 'type': 'function', 'url': 'handler/OAuth2AuthHandler.type.html#addAuthority', 'doc': '<p>Add a required authority for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'OAuth2AuthHandler.authorize', 'type': 'function', 'url': 'handler/OAuth2AuthHandler.type.html#authorize', 'doc': '<p>Authorizes the given user against all added authorities.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'OAuth2AuthHandler.addAuthorities', 'type': 'function', 'url': 'handler/OAuth2AuthHandler.type.html#addAuthorities', 'doc': '<p>Add a set of required authorities for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'OAuth2AuthHandler.setupCallback', 'type': 'function', 'url': 'handler/OAuth2AuthHandler.type.html#setupCallback', 'doc': '<p>add the callback handler to a given route.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'OAuth2AuthHandler', 'type': 'class', 'url': 'handler/OAuth2AuthHandler.type.html', 'doc': '<p>An auth handler that provides OAuth2 Authentication support.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'templateHandler.create', 'type': 'function', 'url': 'handler/templateHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'templateHandler.create', 'type': 'function', 'url': 'handler/templateHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'templateHandler.create', 'type': 'function', 'url': 'handler/templateHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'templateHandler', 'type': 'object', 'url': 'handler/templateHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'templateHandler', 'type': 'value', 'url': 'handler/index.html#templateHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'bodyHandler.create', 'type': 'function', 'url': 'handler/bodyHandler.object.html#create', 'doc': '<p>Create a body handler with defaults</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'bodyHandler.create', 'type': 'function', 'url': 'handler/bodyHandler.object.html#create', 'doc': '<p>Create a body handler and use the given upload directory.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'bodyHandler.create', 'type': 'function', 'url': 'handler/bodyHandler.object.html#create', 'doc': '<p>Create a body handler with defaults</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'bodyHandler', 'type': 'object', 'url': 'handler/bodyHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'bodyHandler', 'type': 'value', 'url': 'handler/index.html#bodyHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CSRFHandler.handle', 'type': 'function', 'url': 'handler/CSRFHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CSRFHandler.setHeaderName', 'type': 'function', 'url': 'handler/CSRFHandler.type.html#setHeaderName', 'doc': '<p>Set the header name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CSRFHandler.setCookieName', 'type': 'function', 'url': 'handler/CSRFHandler.type.html#setCookieName', 'doc': '<p>Set the cookie name.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CSRFHandler.setCookiePath', 'type': 'function', 'url': 'handler/CSRFHandler.type.html#setCookiePath', 'doc': '<p>Set the cookie path.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CSRFHandler.setNagHttps', 'type': 'function', 'url': 'handler/CSRFHandler.type.html#setNagHttps', 'doc': '<p>Should the handler give warning messages if this handler is used in other than https protocols?</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CSRFHandler.setResponseBody', 'type': 'function', 'url': 'handler/CSRFHandler.type.html#setResponseBody', 'doc': '<p>Set the body returned by the handler when the XSRF token is missing or invalid.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CSRFHandler.setTimeout', 'type': 'function', 'url': 'handler/CSRFHandler.type.html#setTimeout', 'doc': '<p>Set the timeout for tokens generated by the handler, by default it uses the default from the session handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CSRFHandler', 'type': 'class', 'url': 'handler/CSRFHandler.type.html', 'doc': '<p>This handler adds a CSRF token to requests which mutate state.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'TemplateHandler.handle', 'type': 'function', 'url': 'handler/TemplateHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TemplateHandler.setIndexTemplate', 'type': 'function', 'url': 'handler/TemplateHandler.type.html#setIndexTemplate', 'doc': '<p>Set the index template</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TemplateHandler', 'type': 'class', 'url': 'handler/TemplateHandler.type.html', 'doc': '<p>A handler which renders responses using a template engine and where the template name is selected from the URI\npath.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'sessionHandler.create', 'type': 'function', 'url': 'handler/sessionHandler.object.html#create', 'doc': '<p>Create a session handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'sessionHandler', 'type': 'object', 'url': 'handler/sessionHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'sessionHandler', 'type': 'value', 'url': 'handler/index.html#sessionHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'corsHandler.create', 'type': 'function', 'url': 'handler/corsHandler.object.html#create', 'doc': '<p>Create a CORS handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'corsHandler', 'type': 'object', 'url': 'handler/corsHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'corsHandler', 'type': 'value', 'url': 'handler/index.html#corsHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'faviconHandler.create', 'type': 'function', 'url': 'handler/faviconHandler.object.html#create', 'doc': '<p>Create a handler with the specified max cache time</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'faviconHandler.create', 'type': 'function', 'url': 'handler/faviconHandler.object.html#create', 'doc': '<p>Create a handler attempting to load favicon file from the specified path</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'faviconHandler.create', 'type': 'function', 'url': 'handler/faviconHandler.object.html#create', 'doc': '<p>Create a handler attempting to load favicon file from the specified path, and with the specified max cache time</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'faviconHandler.create', 'type': 'function', 'url': 'handler/faviconHandler.object.html#create', 'doc': '<p>Create a handler with defaults</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'faviconHandler.create', 'type': 'function', 'url': 'handler/faviconHandler.object.html#create', 'doc': '<p>Create a handler with the specified max cache time</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'faviconHandler', 'type': 'object', 'url': 'handler/faviconHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'faviconHandler', 'type': 'value', 'url': 'handler/index.html#faviconHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FaviconHandler.handle', 'type': 'function', 'url': 'handler/FaviconHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'FaviconHandler', 'type': 'class', 'url': 'handler/FaviconHandler.type.html', 'doc': '<p>A handler that serves favicons.\n<p>\nI', 'tags': [],'icons': ['icon-class']},
{'name': 'BodyHandler.handle', 'type': 'function', 'url': 'handler/BodyHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BodyHandler.setBodyLimit', 'type': 'function', 'url': 'handler/BodyHandler.type.html#setBodyLimit', 'doc': '<p>Set the maximum body size -1 means unlimited</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BodyHandler.setUploadsDirectory', 'type': 'function', 'url': 'handler/BodyHandler.type.html#setUploadsDirectory', 'doc': '<p>Set the uploads directory to use</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BodyHandler.setMergeFormAttributes', 'type': 'function', 'url': 'handler/BodyHandler.type.html#setMergeFormAttributes', 'doc': '<p>Set whether form attributes will be added to the request parameters</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BodyHandler.setDeleteUploadedFilesOnEnd', 'type': 'function', 'url': 'handler/BodyHandler.type.html#setDeleteUploadedFilesOnEnd', 'doc': '<p>Set whether uploaded files should be removed after handling the request</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BodyHandler', 'type': 'class', 'url': 'handler/BodyHandler.type.html', 'doc': '<p>A handler which gathers the entire request body and sets it on the .\n<p>\nI', 'tags': [],'icons': ['icon-class']},
{'name': 'formLoginHandler.create', 'type': 'function', 'url': 'handler/formLoginHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'formLoginHandler.create', 'type': 'function', 'url': 'handler/formLoginHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'formLoginHandler.create', 'type': 'function', 'url': 'handler/formLoginHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'formLoginHandler', 'type': 'object', 'url': 'handler/formLoginHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'formLoginHandler', 'type': 'value', 'url': 'handler/index.html#formLoginHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'csrfHandler.create', 'type': 'function', 'url': 'handler/csrfHandler.object.html#create', 'doc': '<p>Instantiate a new CSRFHandlerImpl with a secret\n<p><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'csrfHandler', 'type': 'object', 'url': 'handler/csrfHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'csrfHandler', 'type': 'value', 'url': 'handler/index.html#csrfHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'responseContentTypeHandler.create', 'type': 'function', 'url': 'handler/responseContentTypeHandler.object.html#create', 'doc': '<p>Create a response content type handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'responseContentTypeHandler.create', 'type': 'function', 'url': 'handler/responseContentTypeHandler.object.html#create', 'doc': '<p>Create a response content type handler with a custom disable flag.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'responseContentTypeHandler.create', 'type': 'function', 'url': 'handler/responseContentTypeHandler.object.html#create', 'doc': '<p>Create a response content type handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'responseContentTypeHandler', 'type': 'object', 'url': 'handler/responseContentTypeHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'responseContentTypeHandler', 'type': 'value', 'url': 'handler/index.html#responseContentTypeHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'staticHandler.create', 'type': 'function', 'url': 'handler/staticHandler.object.html#create', 'doc': '<p>Create a handler using defaults</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'staticHandler.create', 'type': 'function', 'url': 'handler/staticHandler.object.html#create', 'doc': '<p>Create a handler, specifying web-root</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'staticHandler.create', 'type': 'function', 'url': 'handler/staticHandler.object.html#create', 'doc': '<p>Create a handler using defaults</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'staticHandler', 'type': 'object', 'url': 'handler/staticHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'staticHandler', 'type': 'value', 'url': 'handler/index.html#staticHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'redirectAuthHandler.create', 'type': 'function', 'url': 'handler/redirectAuthHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'redirectAuthHandler.create', 'type': 'function', 'url': 'handler/redirectAuthHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'redirectAuthHandler.create', 'type': 'function', 'url': 'handler/redirectAuthHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'redirectAuthHandler.create', 'type': 'function', 'url': 'handler/redirectAuthHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'redirectAuthHandler', 'type': 'object', 'url': 'handler/redirectAuthHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'redirectAuthHandler', 'type': 'value', 'url': 'handler/index.html#redirectAuthHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TimeoutHandler.handle', 'type': 'function', 'url': 'handler/TimeoutHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TimeoutHandler', 'type': 'class', 'url': 'handler/TimeoutHandler.type.html', 'doc': '<p>Handler that will timeout requests if the response has not been written after a certain time.\nT</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'CorsHandler.handle', 'type': 'function', 'url': 'handler/CorsHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CorsHandler.allowedMethod', 'type': 'function', 'url': 'handler/CorsHandler.type.html#allowedMethod', 'doc': '<p>Add an allowed method</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CorsHandler.allowedHeader', 'type': 'function', 'url': 'handler/CorsHandler.type.html#allowedHeader', 'doc': '<p>Add an allowed header</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CorsHandler.allowedHeaders', 'type': 'function', 'url': 'handler/CorsHandler.type.html#allowedHeaders', 'doc': '<p>Add a set of allowed headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CorsHandler.exposedHeader', 'type': 'function', 'url': 'handler/CorsHandler.type.html#exposedHeader', 'doc': '<p>Add an exposed header</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CorsHandler.exposedHeaders', 'type': 'function', 'url': 'handler/CorsHandler.type.html#exposedHeaders', 'doc': '<p>Add a set of exposed headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CorsHandler.allowCredentials', 'type': 'function', 'url': 'handler/CorsHandler.type.html#allowCredentials', 'doc': '<p>Set whether credentials are allowed.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CorsHandler.maxAgeSeconds', 'type': 'function', 'url': 'handler/CorsHandler.type.html#maxAgeSeconds', 'doc': '<p>Set how long the browser should cache the information</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'CorsHandler', 'type': 'class', 'url': 'handler/CorsHandler.type.html', 'doc': '<p>A handler which implements server side http://www.w3.org/TR/cors/[CORS] support for Vert.x-Web.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'cookieHandler.create', 'type': 'function', 'url': 'handler/cookieHandler.object.html#create', 'doc': '<p>Create a cookie handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'cookieHandler', 'type': 'object', 'url': 'handler/cookieHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'cookieHandler', 'type': 'value', 'url': 'handler/index.html#cookieHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jwtAuthHandler.create', 'type': 'function', 'url': 'handler/jwtAuthHandler.object.html#create', 'doc': '<p>Create a JWT auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jwtAuthHandler.create', 'type': 'function', 'url': 'handler/jwtAuthHandler.object.html#create', 'doc': '<p>Create a JWT auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jwtAuthHandler.create', 'type': 'function', 'url': 'handler/jwtAuthHandler.object.html#create', 'doc': '<p>Create a JWT auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jwtAuthHandler', 'type': 'object', 'url': 'handler/jwtAuthHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'jwtAuthHandler', 'type': 'value', 'url': 'handler/index.html#jwtAuthHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'userSessionHandler.create', 'type': 'function', 'url': 'handler/userSessionHandler.object.html#create', 'doc': '<p>Create a new handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'userSessionHandler', 'type': 'object', 'url': 'handler/userSessionHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'userSessionHandler', 'type': 'value', 'url': 'handler/index.html#userSessionHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BasicAuthHandler.handle', 'type': 'function', 'url': 'handler/BasicAuthHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BasicAuthHandler.parseCredentials', 'type': 'function', 'url': 'handler/BasicAuthHandler.type.html#parseCredentials', 'doc': '<p>Parses the credentials from the request into a JsonObject.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BasicAuthHandler.addAuthority', 'type': 'function', 'url': 'handler/BasicAuthHandler.type.html#addAuthority', 'doc': '<p>Add a required authority for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BasicAuthHandler.authorize', 'type': 'function', 'url': 'handler/BasicAuthHandler.type.html#authorize', 'doc': '<p>Authorizes the given user against all added authorities.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BasicAuthHandler.addAuthorities', 'type': 'function', 'url': 'handler/BasicAuthHandler.type.html#addAuthorities', 'doc': '<p>Add a set of required authorities for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BasicAuthHandler', 'type': 'class', 'url': 'handler/BasicAuthHandler.type.html', 'doc': '<p>An auth handler that provides HTTP Basic Authentication support.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'ResponseTimeHandler.handle', 'type': 'function', 'url': 'handler/ResponseTimeHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ResponseTimeHandler', 'type': 'class', 'url': 'handler/ResponseTimeHandler.type.html', 'doc': '<p>Handler which adds a header <code>x-response-time</code> in the response of matching requests containing the time taken\nin ms toâ€¦</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'StaticHandler.handle', 'type': 'function', 'url': 'handler/StaticHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setHttp2PushMapping', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setHttp2PushMapping', 'doc': '<p>Set the file mapping for http2push and link preload</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setAllowRootFileSystemAccess', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setAllowRootFileSystemAccess', 'doc': '<p>Enable/Disable access to the root of the filesystem</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setWebRoot', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setWebRoot', 'doc': '<p>Set the web root</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setFilesReadOnly', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setFilesReadOnly', 'doc': '<p>Set whether files are read-only and will never change</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setMaxAgeSeconds', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setMaxAgeSeconds', 'doc': '<p>Set value for max age in caching headers</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setCachingEnabled', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setCachingEnabled', 'doc': '<p>Set whether cache header handling is enabled</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setDirectoryListing', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setDirectoryListing', 'doc': '<p>Set whether directory listing is enabled</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setIncludeHidden', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setIncludeHidden', 'doc': '<p>Set whether hidden files should be served</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setCacheEntryTimeout', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setCacheEntryTimeout', 'doc': '<p>Set the server cache entry timeout when caching is enabled</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setIndexPage', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setIndexPage', 'doc': '<p>Set the index page</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setMaxCacheSize', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setMaxCacheSize', 'doc': '<p>Set the max cache size, when caching is enabled</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setAlwaysAsyncFS', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setAlwaysAsyncFS', 'doc': '<p>Set whether async filesystem access should always be used</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setEnableFSTuning', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setEnableFSTuning', 'doc': '<p>Set whether async/sync filesystem tuning should enabled</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setMaxAvgServeTimeNs', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setMaxAvgServeTimeNs', 'doc': '<p>Set the max serve time in ns, above which serves are considered slow</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setDirectoryTemplate', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setDirectoryTemplate', 'doc': '<p>Set the directory template to be used when directory listing</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setEnableRangeSupport', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setEnableRangeSupport', 'doc': '<p>Set whether range requests (resumable downloads; media streaming) should be enabled.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setSendVaryHeader', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setSendVaryHeader', 'doc': '<p>Set whether vary header should be sent with response.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler.setDefaultContentEncoding', 'type': 'function', 'url': 'handler/StaticHandler.type.html#setDefaultContentEncoding', 'doc': '<p>Set the default content encoding for text related files.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'StaticHandler', 'type': 'class', 'url': 'handler/StaticHandler.type.html', 'doc': '<p>A handler for serving static resources from the file system or classpath.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'timeoutHandler.create', 'type': 'function', 'url': 'handler/timeoutHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'timeoutHandler.create', 'type': 'function', 'url': 'handler/timeoutHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'timeoutHandler.create', 'type': 'function', 'url': 'handler/timeoutHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'timeoutHandler.create', 'type': 'function', 'url': 'handler/timeoutHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'timeoutHandler', 'type': 'object', 'url': 'handler/timeoutHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'timeoutHandler', 'type': 'value', 'url': 'handler/index.html#timeoutHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ChainAuthHandler.remove', 'type': 'function', 'url': 'handler/ChainAuthHandler.type.html#remove', 'doc': '<p>Removes a provider from the chain.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ChainAuthHandler.append', 'type': 'function', 'url': 'handler/ChainAuthHandler.type.html#append', 'doc': '<p>Appends a auth provider to the chain.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ChainAuthHandler.clear', 'type': 'function', 'url': 'handler/ChainAuthHandler.type.html#clear', 'doc': '<p>Clears the chain.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ChainAuthHandler.handle', 'type': 'function', 'url': 'handler/ChainAuthHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ChainAuthHandler.parseCredentials', 'type': 'function', 'url': 'handler/ChainAuthHandler.type.html#parseCredentials', 'doc': '<p>Parses the credentials from the request into a JsonObject.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ChainAuthHandler.addAuthority', 'type': 'function', 'url': 'handler/ChainAuthHandler.type.html#addAuthority', 'doc': '<p>Add a required authority for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ChainAuthHandler.authorize', 'type': 'function', 'url': 'handler/ChainAuthHandler.type.html#authorize', 'doc': '<p>Authorizes the given user against all added authorities.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ChainAuthHandler.addAuthorities', 'type': 'function', 'url': 'handler/ChainAuthHandler.type.html#addAuthorities', 'doc': '<p>Add a set of required authorities for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ChainAuthHandler', 'type': 'class', 'url': 'handler/ChainAuthHandler.type.html', 'doc': '<p>An auth handler that chains to a sequence of handlers.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'JWTAuthHandler.handle', 'type': 'function', 'url': 'handler/JWTAuthHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JWTAuthHandler.setIssuer', 'type': 'function', 'url': 'handler/JWTAuthHandler.type.html#setIssuer', 'doc': '<p>Set the issuer</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JWTAuthHandler.parseCredentials', 'type': 'function', 'url': 'handler/JWTAuthHandler.type.html#parseCredentials', 'doc': '<p>Parses the credentials from the request into a JsonObject.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JWTAuthHandler.addAuthority', 'type': 'function', 'url': 'handler/JWTAuthHandler.type.html#addAuthority', 'doc': '<p>Add a required authority for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JWTAuthHandler.authorize', 'type': 'function', 'url': 'handler/JWTAuthHandler.type.html#authorize', 'doc': '<p>Authorizes the given user against all added authorities.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JWTAuthHandler.addAuthorities', 'type': 'function', 'url': 'handler/JWTAuthHandler.type.html#addAuthorities', 'doc': '<p>Add a set of required authorities for this auth handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JWTAuthHandler.setIgnoreExpiration', 'type': 'function', 'url': 'handler/JWTAuthHandler.type.html#setIgnoreExpiration', 'doc': '<p>Set whether expiration is ignored</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JWTAuthHandler.setAudience', 'type': 'function', 'url': 'handler/JWTAuthHandler.type.html#setAudience', 'doc': '<p>Set the audience list</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JWTAuthHandler', 'type': 'class', 'url': 'handler/JWTAuthHandler.type.html', 'doc': '<p>An auth handler that provides JWT Authentication support.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'virtualHostHandler.create', 'type': 'function', 'url': 'handler/virtualHostHandler.object.html#create', 'doc': '<p>Create a handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'virtualHostHandler', 'type': 'object', 'url': 'handler/virtualHostHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'virtualHostHandler', 'type': 'value', 'url': 'handler/index.html#virtualHostHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'UserSessionHandler.handle', 'type': 'function', 'url': 'handler/UserSessionHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'UserSessionHandler', 'type': 'class', 'url': 'handler/UserSessionHandler.type.html', 'doc': '<p>This handler should be used if you want to store the User object in the Session so it\'s available between\ndifferentâ€¦</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'oAuth2AuthHandler.create', 'type': 'function', 'url': 'handler/oAuth2AuthHandler.object.html#create', 'doc': '<p>Create a OAuth2 auth handler with host pinning</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'oAuth2AuthHandler.create', 'type': 'function', 'url': 'handler/oAuth2AuthHandler.object.html#create', 'doc': '<p>Create a OAuth2 auth handler without host pinning.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'oAuth2AuthHandler.create', 'type': 'function', 'url': 'handler/oAuth2AuthHandler.object.html#create', 'doc': '<p>Create a OAuth2 auth handler with host pinning</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'oAuth2AuthHandler', 'type': 'object', 'url': 'handler/oAuth2AuthHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'oAuth2AuthHandler', 'type': 'value', 'url': 'handler/index.html#oAuth2AuthHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionHandler.handle', 'type': 'function', 'url': 'handler/SessionHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionHandler.setNagHttps', 'type': 'function', 'url': 'handler/SessionHandler.type.html#setNagHttps', 'doc': '<p>Set whether a nagging log warning should be written if the session handler is accessed over HTTP, not\nHTTPS</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionHandler.setCookieSecureFlag', 'type': 'function', 'url': 'handler/SessionHandler.type.html#setCookieSecureFlag', 'doc': '<p>Sets whether the \'secure\' flag should be set for the session cookie.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionHandler.setCookieHttpOnlyFlag', 'type': 'function', 'url': 'handler/SessionHandler.type.html#setCookieHttpOnlyFlag', 'doc': '<p>Sets whether the \'HttpOnly\' flag should be set for the session cookie.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionHandler.setSessionCookieName', 'type': 'function', 'url': 'handler/SessionHandler.type.html#setSessionCookieName', 'doc': '<p>Set the session cookie name</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionHandler.setMinLength', 'type': 'function', 'url': 'handler/SessionHandler.type.html#setMinLength', 'doc': '<p>Set expected session id minimum length.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionHandler.setSessionTimeout', 'type': 'function', 'url': 'handler/SessionHandler.type.html#setSessionTimeout', 'doc': '<p>Set the session timeout</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionHandler', 'type': 'class', 'url': 'handler/SessionHandler.type.html', 'doc': '<p>A handler that maintains a <a href="Session.type.html">Session</a> for each browser session.\n<p>\nI', 'tags': [],'icons': ['icon-class']},
{'name': 'loggerHandler.create', 'type': 'function', 'url': 'handler/loggerHandler.object.html#create', 'doc': '<p>Create a handler with he specified format</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'loggerHandler.create', 'type': 'function', 'url': 'handler/loggerHandler.object.html#create', 'doc': '<p>Create a handler with default format</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'loggerHandler.create', 'type': 'function', 'url': 'handler/loggerHandler.object.html#create', 'doc': '<p>Create a handler with he specified format</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'loggerHandler.create', 'type': 'function', 'url': 'handler/loggerHandler.object.html#create', 'doc': '<p>Create a handler with he specified format</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'loggerHandler', 'type': 'object', 'url': 'handler/loggerHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'loggerHandler', 'type': 'value', 'url': 'handler/index.html#loggerHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LoggerHandler.handle', 'type': 'function', 'url': 'handler/LoggerHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LoggerHandler', 'type': 'class', 'url': 'handler/LoggerHandler.type.html', 'doc': '<p>A handler which logs request information to the Vert.x logger.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'io.vertx.ceylon.web.handler.sockjs', 'type': 'package', 'url': 'handler/sockjs/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'Transport', 'type': 'class', 'url': 'handler/sockjs/Transport.type.html', 'doc': '<p>The available SockJS transports</p>', 'tags': [],'icons': ['icon-class', 'icon-decoration-abstract', 'icon-decoration-enumerated']},
{'name': 'websocket', 'type': 'object', 'url': 'handler/sockjs/websocket.object.html', 'doc': '<p><a href="http://www.rfc-editor.org/rfc/rfc6455.txt">rfc 6455</a></p>', 'tags': [],'icons': ['icon-object']},
{'name': 'websocket', 'type': 'value', 'url': 'handler/sockjs/index.html#websocket', 'doc': '<p><a href="http://www.rfc-editor.org/rfc/rfc6455.txt">rfc 6455</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'event_source', 'type': 'object', 'url': 'handler/sockjs/event_source.object.html', 'doc': '<p><a href="http://dev.w3.org/html5/eventsource/">Event source</a></p>', 'tags': [],'icons': ['icon-object']},
{'name': 'event_source', 'type': 'value', 'url': 'handler/sockjs/index.html#event_source', 'doc': '<p><a href="http://dev.w3.org/html5/eventsource/">Event source</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'html_file', 'type': 'object', 'url': 'handler/sockjs/html_file.object.html', 'doc': '<p><a href="http://cometdaily.com/2007/11/18/ie-activexhtmlfile-transport-part-ii/">HtmlFile</a>.</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'html_file', 'type': 'value', 'url': 'handler/sockjs/index.html#html_file', 'doc': '<p><a href="http://cometdaily.com/2007/11/18/ie-activexhtmlfile-transport-part-ii/">HtmlFile</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'json_p', 'type': 'object', 'url': 'handler/sockjs/json_p.object.html', 'doc': '<p>Slow and old fashioned <a hred="https://developer.mozilla.org/en/DOM/window.postMessage">JSONP polling</a>.</p>', 'tags': [],'icons': ['icon-object']},
{'name': 'json_p', 'type': 'value', 'url': 'handler/sockjs/index.html#json_p', 'doc': '<p>Slow and old fashioned <a hred="https://developer.mozilla.org/en/DOM/window.postMessage">JSONP polling</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'xhr', 'type': 'object', 'url': 'handler/sockjs/xhr.object.html', 'doc': '<p>Long-polling using <a hred="https://secure.wikimedia.org/wikipedia/en/wiki/XMLHttpRequest#Cross-domain_requests">cross domain XHR</a></p>', 'tags': [],'icons': ['icon-object']},
{'name': 'xhr', 'type': 'value', 'url': 'handler/sockjs/index.html#xhr', 'doc': '<p>Long-polling using <a hred="https://secure.wikimedia.org/wikipedia/en/wiki/XMLHttpRequest#Cross-domain_requests">cross domain XHR</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'transport.toString', 'type': 'function', 'url': 'handler/sockjs/transport.object.html#toString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'transport.fromString', 'type': 'function', 'url': 'handler/sockjs/transport.object.html#fromString', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'handler/sockjs/transport.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'handler/sockjs/transport.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'transport.toJava', 'type': 'value', 'url': 'handler/sockjs/transport.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'handler/sockjs/transport.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'handler/sockjs/transport.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'transport.toCeylon', 'type': 'value', 'url': 'handler/sockjs/transport.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'transport', 'type': 'object', 'url': 'handler/sockjs/transport.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'transport', 'type': 'value', 'url': 'handler/sockjs/index.html#transport', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BridgeOptions.toJson', 'type': 'function', 'url': 'handler/sockjs/BridgeOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'BridgeOptions', 'type': 'class', 'url': 'handler/sockjs/BridgeOptions.type.html', 'doc': '<p>Options for configuring the event bus bridge.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'bridgeOptions.fromJson', 'type': 'function', 'url': 'handler/sockjs/bridgeOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'handler/sockjs/bridgeOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'handler/sockjs/bridgeOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'bridgeOptions.toJava', 'type': 'value', 'url': 'handler/sockjs/bridgeOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'bridgeOptions.toJson', 'type': 'function', 'url': 'handler/sockjs/bridgeOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'bridgeOptions', 'type': 'object', 'url': 'handler/sockjs/bridgeOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'bridgeOptions', 'type': 'value', 'url': 'handler/sockjs/index.html#bridgeOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'PermittedOptions.toJson', 'type': 'function', 'url': 'handler/sockjs/PermittedOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'PermittedOptions', 'type': 'class', 'url': 'handler/sockjs/PermittedOptions.type.html', 'doc': '<p>Specify a match to allow for inbound and outbound traffic using the\n<a href="../../handler/sockjs/BridgeOptions.type.html">BridgeOptions</a>.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'permittedOptions.fromJson', 'type': 'function', 'url': 'handler/sockjs/permittedOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toCeylon.convert', 'type': 'function', 'url': 'handler/sockjs/permittedOptions.toCeylon.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toCeylon', 'type': 'object', 'url': 'handler/sockjs/permittedOptions.toCeylon.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'permittedOptions.toCeylon', 'type': 'value', 'url': 'handler/sockjs/permittedOptions.object.html#toCeylon', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'handler/sockjs/permittedOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'handler/sockjs/permittedOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'permittedOptions.toJava', 'type': 'value', 'url': 'handler/sockjs/permittedOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'permittedOptions.toJson', 'type': 'function', 'url': 'handler/sockjs/permittedOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'permittedOptions', 'type': 'object', 'url': 'handler/sockjs/permittedOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'permittedOptions', 'type': 'value', 'url': 'handler/sockjs/index.html#permittedOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSHandlerOptions.toJson', 'type': 'function', 'url': 'handler/sockjs/SockJSHandlerOptions.type.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'SockJSHandlerOptions', 'type': 'class', 'url': 'handler/sockjs/SockJSHandlerOptions.type.html', 'doc': '<p>Options for configuring a SockJS handler</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'sockJSHandlerOptions.fromJson', 'type': 'function', 'url': 'handler/sockjs/sockJSHandlerOptions.object.html#fromJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'toJava.convert', 'type': 'function', 'url': 'handler/sockjs/sockJSHandlerOptions.toJava.object.html#convert', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'toJava', 'type': 'object', 'url': 'handler/sockjs/sockJSHandlerOptions.toJava.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'sockJSHandlerOptions.toJava', 'type': 'value', 'url': 'handler/sockjs/sockJSHandlerOptions.object.html#toJava', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'sockJSHandlerOptions.toJson', 'type': 'function', 'url': 'handler/sockjs/sockJSHandlerOptions.object.html#toJson', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'sockJSHandlerOptions', 'type': 'object', 'url': 'handler/sockjs/sockJSHandlerOptions.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'sockJSHandlerOptions', 'type': 'value', 'url': 'handler/sockjs/index.html#sockJSHandlerOptions', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'sockJSHandler.create', 'type': 'function', 'url': 'handler/sockjs/sockJSHandler.object.html#create', 'doc': '<p>Create a SockJS handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'sockJSHandler.create', 'type': 'function', 'url': 'handler/sockjs/sockJSHandler.object.html#create', 'doc': '<p>Create a SockJS handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'sockJSHandler.create', 'type': 'function', 'url': 'handler/sockjs/sockJSHandler.object.html#create', 'doc': '<p>Create a SockJS handler</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'sockJSHandler.installTestApplications', 'type': 'function', 'url': 'handler/sockjs/sockJSHandler.object.html#installTestApplications', 'doc': '<p>Install SockJS test applications on a router - used when running the SockJS test suite</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'sockJSHandler', 'type': 'object', 'url': 'handler/sockjs/sockJSHandler.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'sockJSHandler', 'type': 'value', 'url': 'handler/sockjs/index.html#sockJSHandler', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BridgeEvent.result', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#result', 'doc': '<p>The result of the operation.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.map', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#map', 'doc': '<p>Apply a <code>mapper</code> function on this future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.map', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#map', 'doc': '<p>Apply a <code>mapper</code> function on this future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.completer', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#completer', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.compose', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#compose', 'doc': '<p>Compose this future with a provided <code>next</code> future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.compose', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#compose', 'doc': '<p>Compose this future with a <code>mapper</code> function.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.compose', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#compose', 'doc': '<p>Compose this future with a provided <code>next</code> future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.socket', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#socket', 'doc': '<p>Get the SockJSSocket instance corresponding to the event</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'BridgeEvent.setHandler', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#setHandler', 'doc': '<p>Set a handler for the result.\n<p>\nI', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.recover', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#recover', 'doc': '<p>Handles a failure of this Future by returning the result of another Future.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.complete', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#complete', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.complete', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#complete', 'doc': '<p>Set the result.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.otherwise', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#otherwise', 'doc': '<p>Apply a <code>mapper</code> function on this future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.otherwise', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#otherwise', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.otherwise', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#otherwise', 'doc': '<p>Apply a <code>mapper</code> function on this future.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.tryComplete', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#tryComplete', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.tryComplete', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#tryComplete', 'doc': '<p>Set the failure.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.otherwiseEmpty', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#otherwiseEmpty', 'doc': '<p>Map the failure of a future to <code>null</code>.<p><', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent.setRawMessage', 'type': 'function', 'url': 'handler/sockjs/BridgeEvent.type.html#setRawMessage', 'doc': '<p>Get the raw JSON message for the event.</p>', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'BridgeEvent', 'type': 'class', 'url': 'handler/sockjs/BridgeEvent.type.html', 'doc': '<p>Represents an event that occurs on the event bus bridge.\n<p>\nP', 'tags': [],'icons': ['icon-class']},
{'name': 'SockJSHandler.handle', 'type': 'function', 'url': 'handler/sockjs/SockJSHandler.type.html#handle', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSHandler.bridge', 'type': 'function', 'url': 'handler/sockjs/SockJSHandler.type.html#bridge', 'doc': '<p>Like <a href="../../handler/sockjs/SockJSHandler.type.html#bridge">bridge</a> but specifying a handler\nthat will receive bridge events.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSHandler.bridge', 'type': 'function', 'url': 'handler/sockjs/SockJSHandler.type.html#bridge', 'doc': '<p>Bridge the SockJS handler to the Vert.x event bus.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSHandler.bridge', 'type': 'function', 'url': 'handler/sockjs/SockJSHandler.type.html#bridge', 'doc': '<p>Like <a href="../../handler/sockjs/SockJSHandler.type.html#bridge">bridge</a> but specifying a handler\nthat will receive bridge events.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSHandler.socketHandler', 'type': 'function', 'url': 'handler/sockjs/SockJSHandler.type.html#socketHandler', 'doc': '<p>Set a SockJS socket handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSHandler', 'type': 'class', 'url': 'handler/sockjs/SockJSHandler.type.html', 'doc': '<p>A handler that allows you to handle SockJS connections from clients.\n<p>\nW', 'tags': [],'icons': ['icon-class']},
{'name': 'SockJSSocket.write', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#write', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'SockJSSocket.write', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#write', 'doc': '<p>Write a <code>String</code> to the socket, encoded in UTF-8.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.write', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#write', 'doc': '<p>Write some data to the stream. T</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.resume', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#resume', 'doc': '<p>Resume reading. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.close', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#close', 'doc': '<p>Close it</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.handler', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#handler', 'doc': '<p>Set a data handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.uri', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#uri', 'doc': '<p>Return the URI corresponding to the last request for this socket or the websocket handshake</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.localAddress', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#localAddress', 'doc': '<p>Return the local address for this socket</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.headers', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#headers', 'doc': '<p>Return the headers corresponding to the last request for this socket or the websocket handshake\nAny cookie headers willâ€¦</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.remoteAddress', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#remoteAddress', 'doc': '<p>Return the remote address for this socket</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.end', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#end', 'doc': '', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-over']},
{'name': 'SockJSSocket.end', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#end', 'doc': '<p>Call <a href="../../handler/sockjs/SockJSSocket.type.html#end">end</a>.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.end', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#end', 'doc': '<p>Same as <a href="../streams/WriteStream.type.html#end">end</a> but writes some data to the stream before ending.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.exceptionHandler', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#exceptionHandler', 'doc': '<p>Set an exception handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.setWriteQueueMaxSize', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#setWriteQueueMaxSize', 'doc': '<p>Set the maximum size of the write queue to <code>maxSize</code>. Y</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.drainHandler', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#drainHandler', 'doc': '<p>Set a drain handler on the stream. I</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.writeQueueFull', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#writeQueueFull', 'doc': '<p>This will return <code>true</code> if there are more bytes in the write queue than the value set using <a href="../streams/WriteStream.type.html#setWriteQueueMaxSize">setWriteQueueMaxSize</a></p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.pause', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#pause', 'doc': '<p>Pause the <code>ReadSupport</code>. W</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.endHandler', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#endHandler', 'doc': '<p>Set an end handler.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.writeHandlerID', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#writeHandlerID', 'doc': '<p>When a <code>SockJSSocket</code> is created it automatically registers an event handler with the event bus, the ID of that\nhandler iâ€¦</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.webUser', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#webUser', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket.webSession', 'type': 'function', 'url': 'handler/sockjs/SockJSSocket.type.html#webSession', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SockJSSocket', 'type': 'class', 'url': 'handler/sockjs/SockJSSocket.type.html', 'doc': '<p>You interact with SockJS clients through instances of SockJS socket.\n<p>\nT', 'tags': [],'icons': ['icon-class']},
{'name': 'io.vertx.ceylon.web.sstore', 'type': 'package', 'url': 'sstore/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'SessionStore.get', 'type': 'function', 'url': 'sstore/SessionStore.type.html#get', 'doc': '<p>Get the session with the specified ID</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionStore.put', 'type': 'function', 'url': 'sstore/SessionStore.type.html#put', 'doc': '<p>Add a session with the specified ID</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionStore.clear', 'type': 'function', 'url': 'sstore/SessionStore.type.html#clear', 'doc': '<p>Remove all sessions from the store</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionStore.size', 'type': 'function', 'url': 'sstore/SessionStore.type.html#size', 'doc': '<p>Get the number of sessions in the store</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionStore.delete', 'type': 'function', 'url': 'sstore/SessionStore.type.html#delete', 'doc': '<p>Delete the session with the specified ID</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionStore.close', 'type': 'function', 'url': 'sstore/SessionStore.type.html#close', 'doc': '<p>Close the store</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionStore.retryTimeout', 'type': 'function', 'url': 'sstore/SessionStore.type.html#retryTimeout', 'doc': '<p>The retry timeout value in milli seconds used by the session handler when it retrieves a value from the store.<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionStore.createSession', 'type': 'function', 'url': 'sstore/SessionStore.type.html#createSession', 'doc': '<p>Create a new session using the default min length.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionStore.createSession', 'type': 'function', 'url': 'sstore/SessionStore.type.html#createSession', 'doc': '<p>Create a new session</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionStore.createSession', 'type': 'function', 'url': 'sstore/SessionStore.type.html#createSession', 'doc': '<p>Create a new session using the default min length.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'SessionStore', 'type': 'class', 'url': 'sstore/SessionStore.type.html', 'doc': '<p>A session store is used to store sessions for an Vert.x-Web web app</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'ClusteredSessionStore', 'type': 'class', 'url': 'sstore/ClusteredSessionStore.type.html', 'doc': '<p>A session store which stores sessions in a distributed map so they are available across the cluster.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'clusteredSessionStore.create', 'type': 'function', 'url': 'sstore/clusteredSessionStore.object.html#create', 'doc': '<p>Create a session store.<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'clusteredSessionStore.create', 'type': 'function', 'url': 'sstore/clusteredSessionStore.object.html#create', 'doc': '<p>Create a session store.<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'clusteredSessionStore.create', 'type': 'function', 'url': 'sstore/clusteredSessionStore.object.html#create', 'doc': '<p>Create a session store</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'clusteredSessionStore.create', 'type': 'function', 'url': 'sstore/clusteredSessionStore.object.html#create', 'doc': '<p>Create a session store</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'clusteredSessionStore.create', 'type': 'function', 'url': 'sstore/clusteredSessionStore.object.html#create', 'doc': '<p>Create a session store.<p /><', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'clusteredSessionStore', 'type': 'object', 'url': 'sstore/clusteredSessionStore.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'clusteredSessionStore', 'type': 'value', 'url': 'sstore/index.html#clusteredSessionStore', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'LocalSessionStore', 'type': 'class', 'url': 'sstore/LocalSessionStore.type.html', 'doc': '<p>A session store which is only available on a single node.\n<p>\nC', 'tags': [],'icons': ['icon-class']},
{'name': 'localSessionStore.create', 'type': 'function', 'url': 'sstore/localSessionStore.object.html#create', 'doc': '<p>Create a session store</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'localSessionStore.create', 'type': 'function', 'url': 'sstore/localSessionStore.object.html#create', 'doc': '<p>Create a session store</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'localSessionStore.create', 'type': 'function', 'url': 'sstore/localSessionStore.object.html#create', 'doc': '<p>Create a session store</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'localSessionStore.create', 'type': 'function', 'url': 'sstore/localSessionStore.object.html#create', 'doc': '<p>Create a session store</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'localSessionStore', 'type': 'object', 'url': 'sstore/localSessionStore.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'localSessionStore', 'type': 'value', 'url': 'sstore/index.html#localSessionStore', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'io.vertx.ceylon.web.templ', 'type': 'package', 'url': 'templ/index.html', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'handlebarsTemplateEngine.create', 'type': 'function', 'url': 'templ/handlebarsTemplateEngine.object.html#create', 'doc': '<p>Create a template engine using defaults</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'handlebarsTemplateEngine', 'type': 'object', 'url': 'templ/handlebarsTemplateEngine.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'handlebarsTemplateEngine', 'type': 'value', 'url': 'templ/index.html#handlebarsTemplateEngine', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'mvelTemplateEngine.create', 'type': 'function', 'url': 'templ/mvelTemplateEngine.object.html#create', 'doc': '<p>Create a template engine using defaults</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'mvelTemplateEngine', 'type': 'object', 'url': 'templ/mvelTemplateEngine.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'mvelTemplateEngine', 'type': 'value', 'url': 'templ/index.html#mvelTemplateEngine', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'thymeleafTemplateEngine.create', 'type': 'function', 'url': 'templ/thymeleafTemplateEngine.object.html#create', 'doc': '<p>Create a template engine using defaults</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'thymeleafTemplateEngine', 'type': 'object', 'url': 'templ/thymeleafTemplateEngine.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'thymeleafTemplateEngine', 'type': 'value', 'url': 'templ/index.html#thymeleafTemplateEngine', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MVELTemplateEngine.setExtension', 'type': 'function', 'url': 'templ/MVELTemplateEngine.type.html#setExtension', 'doc': '<p>Set the extension for the engine</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MVELTemplateEngine.setMaxCacheSize', 'type': 'function', 'url': 'templ/MVELTemplateEngine.type.html#setMaxCacheSize', 'doc': '<p>Set the max cache size for the engine</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'MVELTemplateEngine', 'type': 'class', 'url': 'templ/MVELTemplateEngine.type.html', 'doc': '<p>A template engine that uses the Handlebars library.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'TemplateEngine.isCachingEnabled', 'type': 'function', 'url': 'templ/TemplateEngine.type.html#isCachingEnabled', 'doc': '<p>Returns true if the template engine caches template files.</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TemplateEngine.render', 'type': 'function', 'url': 'templ/TemplateEngine.type.html#render', 'doc': '<p>Render the template\n<p>\n<', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TemplateEngine.render', 'type': 'function', 'url': 'templ/TemplateEngine.type.html#render', 'doc': '<p>Render the template</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TemplateEngine.render', 'type': 'function', 'url': 'templ/TemplateEngine.type.html#render', 'doc': '<p>Render the template\n<p>\n<', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'TemplateEngine', 'type': 'class', 'url': 'templ/TemplateEngine.type.html', 'doc': '<p>A template engine uses a specific template and the data in a routing context to render a resource into a buffer.\n<p>\nC', 'tags': [],'icons': ['icon-class']},
{'name': 'ThymeleafTemplateEngine.setMode', 'type': 'function', 'url': 'templ/ThymeleafTemplateEngine.type.html#setMode', 'doc': '<p>Set the mode for the engine</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'ThymeleafTemplateEngine', 'type': 'class', 'url': 'templ/ThymeleafTemplateEngine.type.html', 'doc': '<p>A template engine that uses the Thymeleaf library.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'HandlebarsTemplateEngine.setExtension', 'type': 'function', 'url': 'templ/HandlebarsTemplateEngine.type.html#setExtension', 'doc': '<p>Set the extension for the engine</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HandlebarsTemplateEngine.setMaxCacheSize', 'type': 'function', 'url': 'templ/HandlebarsTemplateEngine.type.html#setMaxCacheSize', 'doc': '<p>Set the max cache size for the engine</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'HandlebarsTemplateEngine', 'type': 'class', 'url': 'templ/HandlebarsTemplateEngine.type.html', 'doc': '<p>A template engine that uses the Handlebars library.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'JadeTemplateEngine.setExtension', 'type': 'function', 'url': 'templ/JadeTemplateEngine.type.html#setExtension', 'doc': '<p>Set the extension for the engine</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JadeTemplateEngine.setMaxCacheSize', 'type': 'function', 'url': 'templ/JadeTemplateEngine.type.html#setMaxCacheSize', 'doc': '<p>Set the max cache size for the engine</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'JadeTemplateEngine', 'type': 'class', 'url': 'templ/JadeTemplateEngine.type.html', 'doc': '<p>A template engine that uses Jade.</p>', 'tags': [],'icons': ['icon-class']},
{'name': 'jadeTemplateEngine.create', 'type': 'function', 'url': 'templ/jadeTemplateEngine.object.html#create', 'doc': '<p>Create a template engine using defaults</p>', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'jadeTemplateEngine', 'type': 'object', 'url': 'templ/jadeTemplateEngine.object.html', 'doc': '', 'tags': [],'icons': ['icon-object']},
{'name': 'jadeTemplateEngine', 'type': 'value', 'url': 'templ/index.html#jadeTemplateEngine', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'io.vertx.ceylon.web', 'type': 'module', 'url': 'index.html', 'doc': '', 'tags': [],'icons': ['icon-module']}];
var tagIndex = [
];
