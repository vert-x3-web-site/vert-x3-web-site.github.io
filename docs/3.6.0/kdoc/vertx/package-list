$dokka.format:html
$dokka.linkExtension:html
$dokka.location:io.vertx.kotlin.amqpbridge$closeAwait(io.vertx.amqpbridge.AmqpBridge)io.vertx.kotlin.amqpbridge/io.vertx.amqpbridge.-amqp-bridge/close-await.html
$dokka.location:io.vertx.kotlin.amqpbridge$startAwait(io.vertx.amqpbridge.AmqpBridge, kotlin.String, kotlin.Int)io.vertx.kotlin.amqpbridge/io.vertx.amqpbridge.-amqp-bridge/start-await.html
$dokka.location:io.vertx.kotlin.amqpbridge$startAwait(io.vertx.amqpbridge.AmqpBridge, kotlin.String, kotlin.Int, kotlin.String, kotlin.String)io.vertx.kotlin.amqpbridge/io.vertx.amqpbridge.-amqp-bridge/start-await.html
$dokka.location:io.vertx.kotlin.cassandra$connectAwait(io.vertx.cassandra.CassandraClient)io.vertx.kotlin.cassandra/io.vertx.cassandra.-cassandra-client/connect-await.html
$dokka.location:io.vertx.kotlin.cassandra$connectAwait(io.vertx.cassandra.CassandraClient, kotlin.String)io.vertx.kotlin.cassandra/io.vertx.cassandra.-cassandra-client/connect-await.html
$dokka.location:io.vertx.kotlin.cassandra$disconnectAwait(io.vertx.cassandra.CassandraClient)io.vertx.kotlin.cassandra/io.vertx.cassandra.-cassandra-client/disconnect-await.html
$dokka.location:io.vertx.kotlin.cassandra$executeAwait(io.vertx.cassandra.CassandraClient, kotlin.String)io.vertx.kotlin.cassandra/io.vertx.cassandra.-cassandra-client/execute-await.html
$dokka.location:io.vertx.kotlin.cassandra$fetchMoreResultsAwait(io.vertx.cassandra.ResultSet)io.vertx.kotlin.cassandra/io.vertx.cassandra.-result-set/fetch-more-results-await.html
$dokka.location:io.vertx.kotlin.cassandra$queryStreamAwait(io.vertx.cassandra.CassandraClient, kotlin.String)io.vertx.kotlin.cassandra/io.vertx.cassandra.-cassandra-client/query-stream-await.html
$dokka.location:io.vertx.kotlin.circuitbreaker$executeCommandAwait(io.vertx.circuitbreaker.CircuitBreaker, io.vertx.core.Handler((io.vertx.core.Future((io.vertx.kotlin.circuitbreaker.executeCommandAwait.T)))))io.vertx.kotlin.circuitbreaker/io.vertx.circuitbreaker.-circuit-breaker/execute-command-await.html
$dokka.location:io.vertx.kotlin.circuitbreaker$executeCommandWithFallbackAwait(io.vertx.circuitbreaker.CircuitBreaker, io.vertx.core.Handler((io.vertx.core.Future((io.vertx.kotlin.circuitbreaker.executeCommandWithFallbackAwait.T)))), java.util.function.Function((kotlin.Throwable, io.vertx.kotlin.circuitbreaker.executeCommandWithFallbackAwait.T)))io.vertx.kotlin.circuitbreaker/io.vertx.circuitbreaker.-circuit-breaker/execute-command-with-fallback-await.html
$dokka.location:io.vertx.kotlin.config$getConfigAwait(io.vertx.config.ConfigRetriever)io.vertx.kotlin.config/io.vertx.config.-config-retriever/get-config-await.html
$dokka.location:io.vertx.kotlin.core$closeAwait(io.vertx.core.Vertx)io.vertx.kotlin.core/io.vertx.core.-vertx/close-await.html
$dokka.location:io.vertx.kotlin.core$deployVerticleAwait(io.vertx.core.Vertx, kotlin.String)io.vertx.kotlin.core/io.vertx.core.-vertx/deploy-verticle-await.html
$dokka.location:io.vertx.kotlin.core$deployVerticleAwait(io.vertx.core.Vertx, kotlin.String, io.vertx.core.DeploymentOptions)io.vertx.kotlin.core/io.vertx.core.-vertx/deploy-verticle-await.html
$dokka.location:io.vertx.kotlin.core$executeBlockingAwait(io.vertx.core.Context, io.vertx.core.Handler((io.vertx.core.Future((io.vertx.kotlin.core.executeBlockingAwait.T)))))io.vertx.kotlin.core/io.vertx.core.-context/execute-blocking-await.html
$dokka.location:io.vertx.kotlin.core$executeBlockingAwait(io.vertx.core.Context, io.vertx.core.Handler((io.vertx.core.Future((io.vertx.kotlin.core.executeBlockingAwait.T)))), kotlin.Boolean)io.vertx.kotlin.core/io.vertx.core.-context/execute-blocking-await.html
$dokka.location:io.vertx.kotlin.core$executeBlockingAwait(io.vertx.core.Vertx, io.vertx.core.Handler((io.vertx.core.Future((io.vertx.kotlin.core.executeBlockingAwait.T)))))io.vertx.kotlin.core/io.vertx.core.-vertx/execute-blocking-await.html
$dokka.location:io.vertx.kotlin.core$executeBlockingAwait(io.vertx.core.Vertx, io.vertx.core.Handler((io.vertx.core.Future((io.vertx.kotlin.core.executeBlockingAwait.T)))), kotlin.Boolean)io.vertx.kotlin.core/io.vertx.core.-vertx/execute-blocking-await.html
$dokka.location:io.vertx.kotlin.core$executeBlockingAwait(io.vertx.core.WorkerExecutor, io.vertx.core.Handler((io.vertx.core.Future((io.vertx.kotlin.core.executeBlockingAwait.T)))))io.vertx.kotlin.core/io.vertx.core.-worker-executor/execute-blocking-await.html
$dokka.location:io.vertx.kotlin.core$executeBlockingAwait(io.vertx.core.WorkerExecutor, io.vertx.core.Handler((io.vertx.core.Future((io.vertx.kotlin.core.executeBlockingAwait.T)))), kotlin.Boolean)io.vertx.kotlin.core/io.vertx.core.-worker-executor/execute-blocking-await.html
$dokka.location:io.vertx.kotlin.core$setHandlerAwait(io.vertx.core.CompositeFuture)io.vertx.kotlin.core/io.vertx.core.-composite-future/set-handler-await.html
$dokka.location:io.vertx.kotlin.core$setHandlerAwait(io.vertx.core.Future((io.vertx.kotlin.core.setHandlerAwait.T)))io.vertx.kotlin.core/io.vertx.core.-future/set-handler-await.html
$dokka.location:io.vertx.kotlin.core$undeployAwait(io.vertx.core.Vertx, kotlin.String)io.vertx.kotlin.core/io.vertx.core.-vertx/undeploy-await.html
$dokka.location:io.vertx.kotlin.core.buffer$appendJson(io.vertx.core.buffer.Buffer, kotlin.Boolean, kotlin.Function1((io.vertx.kotlin.core.json.Json, kotlin.Any)))io.vertx.kotlin.core.buffer/io.vertx.core.buffer.-buffer/append-json.html
$dokka.location:io.vertx.kotlin.core.datagram$blockMulticastGroupAwait(io.vertx.core.datagram.DatagramSocket, kotlin.String, kotlin.String)io.vertx.kotlin.core.datagram/io.vertx.core.datagram.-datagram-socket/block-multicast-group-await.html
$dokka.location:io.vertx.kotlin.core.datagram$blockMulticastGroupAwait(io.vertx.core.datagram.DatagramSocket, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.core.datagram/io.vertx.core.datagram.-datagram-socket/block-multicast-group-await.html
$dokka.location:io.vertx.kotlin.core.datagram$closeAwait(io.vertx.core.datagram.DatagramSocket)io.vertx.kotlin.core.datagram/io.vertx.core.datagram.-datagram-socket/close-await.html
$dokka.location:io.vertx.kotlin.core.datagram$listenAwait(io.vertx.core.datagram.DatagramSocket, kotlin.Int, kotlin.String)io.vertx.kotlin.core.datagram/io.vertx.core.datagram.-datagram-socket/listen-await.html
$dokka.location:io.vertx.kotlin.core.datagram$listenMulticastGroupAwait(io.vertx.core.datagram.DatagramSocket, kotlin.String)io.vertx.kotlin.core.datagram/io.vertx.core.datagram.-datagram-socket/listen-multicast-group-await.html
$dokka.location:io.vertx.kotlin.core.datagram$listenMulticastGroupAwait(io.vertx.core.datagram.DatagramSocket, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.core.datagram/io.vertx.core.datagram.-datagram-socket/listen-multicast-group-await.html
$dokka.location:io.vertx.kotlin.core.datagram$sendAwait(io.vertx.core.datagram.DatagramSocket, io.vertx.core.buffer.Buffer, kotlin.Int, kotlin.String)io.vertx.kotlin.core.datagram/io.vertx.core.datagram.-datagram-socket/send-await.html
$dokka.location:io.vertx.kotlin.core.datagram$sendAwait(io.vertx.core.datagram.DatagramSocket, kotlin.String, kotlin.Int, kotlin.String)io.vertx.kotlin.core.datagram/io.vertx.core.datagram.-datagram-socket/send-await.html
$dokka.location:io.vertx.kotlin.core.datagram$sendAwait(io.vertx.core.datagram.DatagramSocket, kotlin.String, kotlin.String, kotlin.Int, kotlin.String)io.vertx.kotlin.core.datagram/io.vertx.core.datagram.-datagram-socket/send-await.html
$dokka.location:io.vertx.kotlin.core.datagram$unlistenMulticastGroupAwait(io.vertx.core.datagram.DatagramSocket, kotlin.String)io.vertx.kotlin.core.datagram/io.vertx.core.datagram.-datagram-socket/unlisten-multicast-group-await.html
$dokka.location:io.vertx.kotlin.core.datagram$unlistenMulticastGroupAwait(io.vertx.core.datagram.DatagramSocket, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.core.datagram/io.vertx.core.datagram.-datagram-socket/unlisten-multicast-group-await.html
$dokka.location:io.vertx.kotlin.core.dns$lookup4Await(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/lookup4-await.html
$dokka.location:io.vertx.kotlin.core.dns$lookup6Await(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/lookup6-await.html
$dokka.location:io.vertx.kotlin.core.dns$lookupAwait(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/lookup-await.html
$dokka.location:io.vertx.kotlin.core.dns$resolveAAAAAwait(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/resolve-a-a-a-a-await.html
$dokka.location:io.vertx.kotlin.core.dns$resolveAAwait(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/resolve-a-await.html
$dokka.location:io.vertx.kotlin.core.dns$resolveCNAMEAwait(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/resolve-c-n-a-m-e-await.html
$dokka.location:io.vertx.kotlin.core.dns$resolveMXAwait(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/resolve-m-x-await.html
$dokka.location:io.vertx.kotlin.core.dns$resolveNSAwait(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/resolve-n-s-await.html
$dokka.location:io.vertx.kotlin.core.dns$resolvePTRAwait(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/resolve-p-t-r-await.html
$dokka.location:io.vertx.kotlin.core.dns$resolveSRVAwait(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/resolve-s-r-v-await.html
$dokka.location:io.vertx.kotlin.core.dns$resolveTXTAwait(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/resolve-t-x-t-await.html
$dokka.location:io.vertx.kotlin.core.dns$reverseLookupAwait(io.vertx.core.dns.DnsClient, kotlin.String)io.vertx.kotlin.core.dns/io.vertx.core.dns.-dns-client/reverse-lookup-await.html
$dokka.location:io.vertx.kotlin.core.eventbus$completionHandlerAwait(io.vertx.core.eventbus.MessageConsumer((io.vertx.kotlin.core.eventbus.completionHandlerAwait.T)))io.vertx.kotlin.core.eventbus/io.vertx.core.eventbus.-message-consumer/completion-handler-await.html
$dokka.location:io.vertx.kotlin.core.eventbus$replyAwait(io.vertx.core.eventbus.Message((io.vertx.kotlin.core.eventbus.replyAwait.T)), kotlin.Any)io.vertx.kotlin.core.eventbus/io.vertx.core.eventbus.-message/reply-await.html
$dokka.location:io.vertx.kotlin.core.eventbus$replyAwait(io.vertx.core.eventbus.Message((io.vertx.kotlin.core.eventbus.replyAwait.T)), kotlin.Any, io.vertx.core.eventbus.DeliveryOptions)io.vertx.kotlin.core.eventbus/io.vertx.core.eventbus.-message/reply-await.html
$dokka.location:io.vertx.kotlin.core.eventbus$sendAwait(io.vertx.core.eventbus.EventBus, kotlin.String, kotlin.Any)io.vertx.kotlin.core.eventbus/io.vertx.core.eventbus.-event-bus/send-await.html
$dokka.location:io.vertx.kotlin.core.eventbus$sendAwait(io.vertx.core.eventbus.EventBus, kotlin.String, kotlin.Any, io.vertx.core.eventbus.DeliveryOptions)io.vertx.kotlin.core.eventbus/io.vertx.core.eventbus.-event-bus/send-await.html
$dokka.location:io.vertx.kotlin.core.eventbus$unregisterAwait(io.vertx.core.eventbus.MessageConsumer((io.vertx.kotlin.core.eventbus.unregisterAwait.T)))io.vertx.kotlin.core.eventbus/io.vertx.core.eventbus.-message-consumer/unregister-await.html
$dokka.location:io.vertx.kotlin.core.file$chmodAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/chmod-await.html
$dokka.location:io.vertx.kotlin.core.file$chmodRecursiveAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/chmod-recursive-await.html
$dokka.location:io.vertx.kotlin.core.file$chownAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/chown-await.html
$dokka.location:io.vertx.kotlin.core.file$closeAwait(io.vertx.core.file.AsyncFile)io.vertx.kotlin.core.file/io.vertx.core.file.-async-file/close-await.html
$dokka.location:io.vertx.kotlin.core.file$copyAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/copy-await.html
$dokka.location:io.vertx.kotlin.core.file$copyAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String, io.vertx.core.file.CopyOptions)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/copy-await.html
$dokka.location:io.vertx.kotlin.core.file$copyRecursiveAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String, kotlin.Boolean)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/copy-recursive-await.html
$dokka.location:io.vertx.kotlin.core.file$createFileAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/create-file-await.html
$dokka.location:io.vertx.kotlin.core.file$createFileAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/create-file-await.html
$dokka.location:io.vertx.kotlin.core.file$createTempDirectoryAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/create-temp-directory-await.html
$dokka.location:io.vertx.kotlin.core.file$createTempDirectoryAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/create-temp-directory-await.html
$dokka.location:io.vertx.kotlin.core.file$createTempDirectoryAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/create-temp-directory-await.html
$dokka.location:io.vertx.kotlin.core.file$createTempFileAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/create-temp-file-await.html
$dokka.location:io.vertx.kotlin.core.file$createTempFileAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/create-temp-file-await.html
$dokka.location:io.vertx.kotlin.core.file$createTempFileAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/create-temp-file-await.html
$dokka.location:io.vertx.kotlin.core.file$deleteAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/delete-await.html
$dokka.location:io.vertx.kotlin.core.file$deleteRecursiveAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.Boolean)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/delete-recursive-await.html
$dokka.location:io.vertx.kotlin.core.file$existsAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/exists-await.html
$dokka.location:io.vertx.kotlin.core.file$flushAwait(io.vertx.core.file.AsyncFile)io.vertx.kotlin.core.file/io.vertx.core.file.-async-file/flush-await.html
$dokka.location:io.vertx.kotlin.core.file$fsPropsAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/fs-props-await.html
$dokka.location:io.vertx.kotlin.core.file$linkAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/link-await.html
$dokka.location:io.vertx.kotlin.core.file$lpropsAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/lprops-await.html
$dokka.location:io.vertx.kotlin.core.file$mkdirAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/mkdir-await.html
$dokka.location:io.vertx.kotlin.core.file$mkdirAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/mkdir-await.html
$dokka.location:io.vertx.kotlin.core.file$mkdirsAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/mkdirs-await.html
$dokka.location:io.vertx.kotlin.core.file$mkdirsAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/mkdirs-await.html
$dokka.location:io.vertx.kotlin.core.file$moveAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/move-await.html
$dokka.location:io.vertx.kotlin.core.file$moveAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String, io.vertx.core.file.CopyOptions)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/move-await.html
$dokka.location:io.vertx.kotlin.core.file$openAwait(io.vertx.core.file.FileSystem, kotlin.String, io.vertx.core.file.OpenOptions)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/open-await.html
$dokka.location:io.vertx.kotlin.core.file$propsAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/props-await.html
$dokka.location:io.vertx.kotlin.core.file$readAwait(io.vertx.core.file.AsyncFile, io.vertx.core.buffer.Buffer, kotlin.Int, kotlin.Long, kotlin.Int)io.vertx.kotlin.core.file/io.vertx.core.file.-async-file/read-await.html
$dokka.location:io.vertx.kotlin.core.file$readDirAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/read-dir-await.html
$dokka.location:io.vertx.kotlin.core.file$readDirAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/read-dir-await.html
$dokka.location:io.vertx.kotlin.core.file$readFileAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/read-file-await.html
$dokka.location:io.vertx.kotlin.core.file$readSymlinkAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/read-symlink-await.html
$dokka.location:io.vertx.kotlin.core.file$symlinkAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/symlink-await.html
$dokka.location:io.vertx.kotlin.core.file$truncateAwait(io.vertx.core.file.FileSystem, kotlin.String, kotlin.Long)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/truncate-await.html
$dokka.location:io.vertx.kotlin.core.file$unlinkAwait(io.vertx.core.file.FileSystem, kotlin.String)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/unlink-await.html
$dokka.location:io.vertx.kotlin.core.file$writeAwait(io.vertx.core.file.AsyncFile, io.vertx.core.buffer.Buffer, kotlin.Long)io.vertx.kotlin.core.file/io.vertx.core.file.-async-file/write-await.html
$dokka.location:io.vertx.kotlin.core.file$writeFileAwait(io.vertx.core.file.FileSystem, kotlin.String, io.vertx.core.buffer.Buffer)io.vertx.kotlin.core.file/io.vertx.core.file.-file-system/write-file-await.html
$dokka.location:io.vertx.kotlin.core.http$closeAwait(io.vertx.core.http.HttpServer)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server/close-await.html
$dokka.location:io.vertx.kotlin.core.http$listenAwait(io.vertx.core.http.HttpServer)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server/listen-await.html
$dokka.location:io.vertx.kotlin.core.http$listenAwait(io.vertx.core.http.HttpServer, io.vertx.core.net.SocketAddress)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server/listen-await.html
$dokka.location:io.vertx.kotlin.core.http$listenAwait(io.vertx.core.http.HttpServer, kotlin.Int)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server/listen-await.html
$dokka.location:io.vertx.kotlin.core.http$listenAwait(io.vertx.core.http.HttpServer, kotlin.Int, kotlin.String)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server/listen-await.html
$dokka.location:io.vertx.kotlin.core.http$pingAwait(io.vertx.core.http.HttpConnection, io.vertx.core.buffer.Buffer)io.vertx.kotlin.core.http/io.vertx.core.http.-http-connection/ping-await.html
$dokka.location:io.vertx.kotlin.core.http$pushAwait(io.vertx.core.http.HttpServerResponse, io.vertx.core.http.HttpMethod, kotlin.String)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server-response/push-await.html
$dokka.location:io.vertx.kotlin.core.http$pushAwait(io.vertx.core.http.HttpServerResponse, io.vertx.core.http.HttpMethod, kotlin.String, io.vertx.core.MultiMap)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server-response/push-await.html
$dokka.location:io.vertx.kotlin.core.http$pushAwait(io.vertx.core.http.HttpServerResponse, io.vertx.core.http.HttpMethod, kotlin.String, kotlin.String)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server-response/push-await.html
$dokka.location:io.vertx.kotlin.core.http$pushAwait(io.vertx.core.http.HttpServerResponse, io.vertx.core.http.HttpMethod, kotlin.String, kotlin.String, io.vertx.core.MultiMap)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server-response/push-await.html
$dokka.location:io.vertx.kotlin.core.http$sendFileAwait(io.vertx.core.http.HttpServerResponse, kotlin.String)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server-response/send-file-await.html
$dokka.location:io.vertx.kotlin.core.http$sendFileAwait(io.vertx.core.http.HttpServerResponse, kotlin.String, kotlin.Long)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server-response/send-file-await.html
$dokka.location:io.vertx.kotlin.core.http$sendFileAwait(io.vertx.core.http.HttpServerResponse, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.core.http/io.vertx.core.http.-http-server-response/send-file-await.html
$dokka.location:io.vertx.kotlin.core.http$updateSettingsAwait(io.vertx.core.http.HttpConnection, io.vertx.core.http.Http2Settings)io.vertx.kotlin.core.http/io.vertx.core.http.-http-connection/update-settings-await.html
$dokka.location:io.vertx.kotlin.core.json$get(io.vertx.core.json.JsonArray, kotlin.Int)io.vertx.kotlin.core.json/io.vertx.core.json.-json-array/get.html
$dokka.location:io.vertx.kotlin.core.json$get(io.vertx.core.json.JsonObject, kotlin.String)io.vertx.kotlin.core.json/io.vertx.core.json.-json-object/get.html
$dokka.location:io.vertx.kotlin.core.net$closeAwait(io.vertx.core.net.NetServer)io.vertx.kotlin.core.net/io.vertx.core.net.-net-server/close-await.html
$dokka.location:io.vertx.kotlin.core.net$connectAwait(io.vertx.core.net.NetClient, io.vertx.core.net.SocketAddress)io.vertx.kotlin.core.net/io.vertx.core.net.-net-client/connect-await.html
$dokka.location:io.vertx.kotlin.core.net$connectAwait(io.vertx.core.net.NetClient, io.vertx.core.net.SocketAddress, kotlin.String)io.vertx.kotlin.core.net/io.vertx.core.net.-net-client/connect-await.html
$dokka.location:io.vertx.kotlin.core.net$connectAwait(io.vertx.core.net.NetClient, kotlin.Int, kotlin.String)io.vertx.kotlin.core.net/io.vertx.core.net.-net-client/connect-await.html
$dokka.location:io.vertx.kotlin.core.net$connectAwait(io.vertx.core.net.NetClient, kotlin.Int, kotlin.String, kotlin.String)io.vertx.kotlin.core.net/io.vertx.core.net.-net-client/connect-await.html
$dokka.location:io.vertx.kotlin.core.net$listenAwait(io.vertx.core.net.NetServer)io.vertx.kotlin.core.net/io.vertx.core.net.-net-server/listen-await.html
$dokka.location:io.vertx.kotlin.core.net$listenAwait(io.vertx.core.net.NetServer, io.vertx.core.net.SocketAddress)io.vertx.kotlin.core.net/io.vertx.core.net.-net-server/listen-await.html
$dokka.location:io.vertx.kotlin.core.net$listenAwait(io.vertx.core.net.NetServer, kotlin.Int)io.vertx.kotlin.core.net/io.vertx.core.net.-net-server/listen-await.html
$dokka.location:io.vertx.kotlin.core.net$listenAwait(io.vertx.core.net.NetServer, kotlin.Int, kotlin.String)io.vertx.kotlin.core.net/io.vertx.core.net.-net-server/listen-await.html
$dokka.location:io.vertx.kotlin.core.net$sendFileAwait(io.vertx.core.net.NetSocket, kotlin.String)io.vertx.kotlin.core.net/io.vertx.core.net.-net-socket/send-file-await.html
$dokka.location:io.vertx.kotlin.core.net$sendFileAwait(io.vertx.core.net.NetSocket, kotlin.String, kotlin.Long)io.vertx.kotlin.core.net/io.vertx.core.net.-net-socket/send-file-await.html
$dokka.location:io.vertx.kotlin.core.net$sendFileAwait(io.vertx.core.net.NetSocket, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.core.net/io.vertx.core.net.-net-socket/send-file-await.html
$dokka.location:io.vertx.kotlin.core.net$writeAwait(io.vertx.core.net.NetSocket, io.vertx.core.buffer.Buffer)io.vertx.kotlin.core.net/io.vertx.core.net.-net-socket/write-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$addAndGetAwait(io.vertx.core.shareddata.Counter, kotlin.Long)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-counter/add-and-get-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$clearAwait(io.vertx.core.shareddata.AsyncMap((io.vertx.kotlin.core.shareddata.clearAwait.K, io.vertx.kotlin.core.shareddata.clearAwait.V)))io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-async-map/clear-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$compareAndSetAwait(io.vertx.core.shareddata.Counter, kotlin.Long, kotlin.Long)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-counter/compare-and-set-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$decrementAndGetAwait(io.vertx.core.shareddata.Counter)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-counter/decrement-and-get-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$getAndAddAwait(io.vertx.core.shareddata.Counter, kotlin.Long)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-counter/get-and-add-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$getAndIncrementAwait(io.vertx.core.shareddata.Counter)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-counter/get-and-increment-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$getAsyncMapAwait(io.vertx.core.shareddata.SharedData, kotlin.String)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-shared-data/get-async-map-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$getAwait(io.vertx.core.shareddata.AsyncMap((io.vertx.kotlin.core.shareddata.getAwait.K, io.vertx.kotlin.core.shareddata.getAwait.V)), io.vertx.kotlin.core.shareddata.getAwait.K)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-async-map/get-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$getAwait(io.vertx.core.shareddata.Counter)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-counter/get-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$getClusterWideMapAwait(io.vertx.core.shareddata.SharedData, kotlin.String)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-shared-data/get-cluster-wide-map-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$getCounterAwait(io.vertx.core.shareddata.SharedData, kotlin.String)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-shared-data/get-counter-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$getLockAwait(io.vertx.core.shareddata.SharedData, kotlin.String)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-shared-data/get-lock-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$getLockWithTimeoutAwait(io.vertx.core.shareddata.SharedData, kotlin.String, kotlin.Long)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-shared-data/get-lock-with-timeout-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$incrementAndGetAwait(io.vertx.core.shareddata.Counter)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-counter/increment-and-get-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$putAwait(io.vertx.core.shareddata.AsyncMap((io.vertx.kotlin.core.shareddata.putAwait.K, io.vertx.kotlin.core.shareddata.putAwait.V)), io.vertx.kotlin.core.shareddata.putAwait.K, io.vertx.kotlin.core.shareddata.putAwait.V)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-async-map/put-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$putAwait(io.vertx.core.shareddata.AsyncMap((io.vertx.kotlin.core.shareddata.putAwait.K, io.vertx.kotlin.core.shareddata.putAwait.V)), io.vertx.kotlin.core.shareddata.putAwait.K, io.vertx.kotlin.core.shareddata.putAwait.V, kotlin.Long)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-async-map/put-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$putIfAbsentAwait(io.vertx.core.shareddata.AsyncMap((io.vertx.kotlin.core.shareddata.putIfAbsentAwait.K, io.vertx.kotlin.core.shareddata.putIfAbsentAwait.V)), io.vertx.kotlin.core.shareddata.putIfAbsentAwait.K, io.vertx.kotlin.core.shareddata.putIfAbsentAwait.V)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-async-map/put-if-absent-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$putIfAbsentAwait(io.vertx.core.shareddata.AsyncMap((io.vertx.kotlin.core.shareddata.putIfAbsentAwait.K, io.vertx.kotlin.core.shareddata.putIfAbsentAwait.V)), io.vertx.kotlin.core.shareddata.putIfAbsentAwait.K, io.vertx.kotlin.core.shareddata.putIfAbsentAwait.V, kotlin.Long)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-async-map/put-if-absent-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$removeAwait(io.vertx.core.shareddata.AsyncMap((io.vertx.kotlin.core.shareddata.removeAwait.K, io.vertx.kotlin.core.shareddata.removeAwait.V)), io.vertx.kotlin.core.shareddata.removeAwait.K)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-async-map/remove-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$removeIfPresentAwait(io.vertx.core.shareddata.AsyncMap((io.vertx.kotlin.core.shareddata.removeIfPresentAwait.K, io.vertx.kotlin.core.shareddata.removeIfPresentAwait.V)), io.vertx.kotlin.core.shareddata.removeIfPresentAwait.K, io.vertx.kotlin.core.shareddata.removeIfPresentAwait.V)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-async-map/remove-if-present-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$replaceAwait(io.vertx.core.shareddata.AsyncMap((io.vertx.kotlin.core.shareddata.replaceAwait.K, io.vertx.kotlin.core.shareddata.replaceAwait.V)), io.vertx.kotlin.core.shareddata.replaceAwait.K, io.vertx.kotlin.core.shareddata.replaceAwait.V)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-async-map/replace-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$replaceIfPresentAwait(io.vertx.core.shareddata.AsyncMap((io.vertx.kotlin.core.shareddata.replaceIfPresentAwait.K, io.vertx.kotlin.core.shareddata.replaceIfPresentAwait.V)), io.vertx.kotlin.core.shareddata.replaceIfPresentAwait.K, io.vertx.kotlin.core.shareddata.replaceIfPresentAwait.V, io.vertx.kotlin.core.shareddata.replaceIfPresentAwait.V)io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-async-map/replace-if-present-await.html
$dokka.location:io.vertx.kotlin.core.shareddata$sizeAwait(io.vertx.core.shareddata.AsyncMap((io.vertx.kotlin.core.shareddata.sizeAwait.K, io.vertx.kotlin.core.shareddata.sizeAwait.V)))io.vertx.kotlin.core.shareddata/io.vertx.core.shareddata.-async-map/size-await.html
$dokka.location:io.vertx.kotlin.ext.asyncsql$querySingleAwait(io.vertx.ext.asyncsql.AsyncSQLClient, kotlin.String)io.vertx.kotlin.ext.asyncsql/io.vertx.ext.asyncsql.-async-s-q-l-client/query-single-await.html
$dokka.location:io.vertx.kotlin.ext.asyncsql$querySingleAwait(io.vertx.ext.asyncsql.MySQLClient, kotlin.String)io.vertx.kotlin.ext.asyncsql/io.vertx.ext.asyncsql.-my-s-q-l-client/query-single-await.html
$dokka.location:io.vertx.kotlin.ext.asyncsql$querySingleAwait(io.vertx.ext.asyncsql.PostgreSQLClient, kotlin.String)io.vertx.kotlin.ext.asyncsql/io.vertx.ext.asyncsql.-postgre-s-q-l-client/query-single-await.html
$dokka.location:io.vertx.kotlin.ext.asyncsql$querySingleWithParamsAwait(io.vertx.ext.asyncsql.AsyncSQLClient, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.asyncsql/io.vertx.ext.asyncsql.-async-s-q-l-client/query-single-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.asyncsql$querySingleWithParamsAwait(io.vertx.ext.asyncsql.MySQLClient, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.asyncsql/io.vertx.ext.asyncsql.-my-s-q-l-client/query-single-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.asyncsql$querySingleWithParamsAwait(io.vertx.ext.asyncsql.PostgreSQLClient, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.asyncsql/io.vertx.ext.asyncsql.-postgre-s-q-l-client/query-single-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.auth$authenticateAwait(io.vertx.ext.auth.AuthProvider, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.auth/io.vertx.ext.auth.-auth-provider/authenticate-await.html
$dokka.location:io.vertx.kotlin.ext.auth$isAuthorizedAwait(io.vertx.ext.auth.User, kotlin.String)io.vertx.kotlin.ext.auth/io.vertx.ext.auth.-user/is-authorized-await.html
$dokka.location:io.vertx.kotlin.ext.auth.mongo$insertUserAwait(io.vertx.ext.auth.mongo.MongoAuth, kotlin.String, kotlin.String, kotlin.collections.List((kotlin.String)), kotlin.collections.List((kotlin.String)))io.vertx.kotlin.ext.auth.mongo/io.vertx.ext.auth.mongo.-mongo-auth/insert-user-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$fetchAwait(io.vertx.ext.auth.oauth2.AccessToken, io.vertx.core.http.HttpMethod, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.buffer.Buffer)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-access-token/fetch-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$fetchAwait(io.vertx.ext.auth.oauth2.AccessToken, kotlin.String)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-access-token/fetch-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$introspectAwait(io.vertx.ext.auth.oauth2.AccessToken)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-access-token/introspect-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$introspectAwait(io.vertx.ext.auth.oauth2.AccessToken, kotlin.String)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-access-token/introspect-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$introspectTokenAwait(io.vertx.ext.auth.oauth2.OAuth2Auth, kotlin.String)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-o-auth2-auth/introspect-token-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$introspectTokenAwait(io.vertx.ext.auth.oauth2.OAuth2Auth, kotlin.String, kotlin.String)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-o-auth2-auth/introspect-token-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$isAuthorizedAwait(io.vertx.ext.auth.oauth2.OAuth2RBAC, io.vertx.ext.auth.oauth2.AccessToken, kotlin.String)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-o-auth2-r-b-a-c/is-authorized-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$loadJWKAwait(io.vertx.ext.auth.oauth2.OAuth2Auth)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-o-auth2-auth/load-j-w-k-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$logoutAwait(io.vertx.ext.auth.oauth2.AccessToken)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-access-token/logout-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$refreshAwait(io.vertx.ext.auth.oauth2.AccessToken)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-access-token/refresh-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$revokeAwait(io.vertx.ext.auth.oauth2.AccessToken, kotlin.String)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-access-token/revoke-await.html
$dokka.location:io.vertx.kotlin.ext.auth.oauth2$userInfoAwait(io.vertx.ext.auth.oauth2.AccessToken)io.vertx.kotlin.ext.auth.oauth2/io.vertx.ext.auth.oauth2.-access-token/user-info-await.html
$dokka.location:io.vertx.kotlin.ext.bridge$setHandlerAwait(io.vertx.ext.bridge.BaseBridgeEvent)io.vertx.kotlin.ext.bridge/io.vertx.ext.bridge.-base-bridge-event/set-handler-await.html
$dokka.location:io.vertx.kotlin.ext.consul$agentInfoAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/agent-info-await.html
$dokka.location:io.vertx.kotlin.ext.consul$agentInfoAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/agent-info-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogDatacentersAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/catalog-datacenters-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogDatacentersAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/catalog-datacenters-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogNodeServicesAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/catalog-node-services-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogNodeServicesAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/catalog-node-services-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogNodeServicesWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/catalog-node-services-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogNodeServicesWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/catalog-node-services-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogNodesAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/catalog-nodes-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogNodesAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/catalog-nodes-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogNodesWithOptionsAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.NodeQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/catalog-nodes-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogNodesWithOptionsAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.NodeQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/catalog-nodes-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogServiceNodesAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/catalog-service-nodes-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogServiceNodesAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/catalog-service-nodes-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogServiceNodesWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.ServiceQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/catalog-service-nodes-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogServiceNodesWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.ServiceQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/catalog-service-nodes-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogServicesAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/catalog-services-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogServicesAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/catalog-services-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogServicesWithOptionsAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/catalog-services-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$catalogServicesWithOptionsAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/catalog-services-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$cloneAclTokenAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/clone-acl-token-await.html
$dokka.location:io.vertx.kotlin.ext.consul$cloneAclTokenAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/clone-acl-token-await.html
$dokka.location:io.vertx.kotlin.ext.consul$coordinateDatacentersAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/coordinate-datacenters-await.html
$dokka.location:io.vertx.kotlin.ext.consul$coordinateDatacentersAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/coordinate-datacenters-await.html
$dokka.location:io.vertx.kotlin.ext.consul$coordinateNodesAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/coordinate-nodes-await.html
$dokka.location:io.vertx.kotlin.ext.consul$coordinateNodesAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/coordinate-nodes-await.html
$dokka.location:io.vertx.kotlin.ext.consul$coordinateNodesWithOptionsAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/coordinate-nodes-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$coordinateNodesWithOptionsAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/coordinate-nodes-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$createAclTokenAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.AclToken)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/create-acl-token-await.html
$dokka.location:io.vertx.kotlin.ext.consul$createAclTokenAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.AclToken)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/create-acl-token-await.html
$dokka.location:io.vertx.kotlin.ext.consul$createPreparedQueryAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.PreparedQueryDefinition)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/create-prepared-query-await.html
$dokka.location:io.vertx.kotlin.ext.consul$createPreparedQueryAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.PreparedQueryDefinition)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/create-prepared-query-await.html
$dokka.location:io.vertx.kotlin.ext.consul$createSessionAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/create-session-await.html
$dokka.location:io.vertx.kotlin.ext.consul$createSessionAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/create-session-await.html
$dokka.location:io.vertx.kotlin.ext.consul$createSessionWithOptionsAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.SessionOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/create-session-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$createSessionWithOptionsAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.SessionOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/create-session-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$deletePreparedQueryAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/delete-prepared-query-await.html
$dokka.location:io.vertx.kotlin.ext.consul$deletePreparedQueryAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/delete-prepared-query-await.html
$dokka.location:io.vertx.kotlin.ext.consul$deleteValueAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/delete-value-await.html
$dokka.location:io.vertx.kotlin.ext.consul$deleteValueAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/delete-value-await.html
$dokka.location:io.vertx.kotlin.ext.consul$deleteValuesAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/delete-values-await.html
$dokka.location:io.vertx.kotlin.ext.consul$deleteValuesAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/delete-values-await.html
$dokka.location:io.vertx.kotlin.ext.consul$deregisterCheckAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/deregister-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$deregisterCheckAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/deregister-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$deregisterServiceAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/deregister-service-await.html
$dokka.location:io.vertx.kotlin.ext.consul$deregisterServiceAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/deregister-service-await.html
$dokka.location:io.vertx.kotlin.ext.consul$destroyAclTokenAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/destroy-acl-token-await.html
$dokka.location:io.vertx.kotlin.ext.consul$destroyAclTokenAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/destroy-acl-token-await.html
$dokka.location:io.vertx.kotlin.ext.consul$destroySessionAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/destroy-session-await.html
$dokka.location:io.vertx.kotlin.ext.consul$destroySessionAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/destroy-session-await.html
$dokka.location:io.vertx.kotlin.ext.consul$executePreparedQueryAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/execute-prepared-query-await.html
$dokka.location:io.vertx.kotlin.ext.consul$executePreparedQueryAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/execute-prepared-query-await.html
$dokka.location:io.vertx.kotlin.ext.consul$executePreparedQueryWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.PreparedQueryExecuteOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/execute-prepared-query-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$executePreparedQueryWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.PreparedQueryExecuteOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/execute-prepared-query-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$failCheckAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/fail-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$failCheckAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/fail-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$failCheckWithNoteAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/fail-check-with-note-await.html
$dokka.location:io.vertx.kotlin.ext.consul$failCheckWithNoteAwait(io.vertx.ext.consul.ConsulService, kotlin.String, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/fail-check-with-note-await.html
$dokka.location:io.vertx.kotlin.ext.consul$fireEventAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/fire-event-await.html
$dokka.location:io.vertx.kotlin.ext.consul$fireEventAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/fire-event-await.html
$dokka.location:io.vertx.kotlin.ext.consul$fireEventWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.EventOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/fire-event-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$fireEventWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.EventOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/fire-event-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getAllPreparedQueriesAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/get-all-prepared-queries-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getAllPreparedQueriesAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/get-all-prepared-queries-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getKeysAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/get-keys-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getKeysAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/get-keys-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getKeysWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/get-keys-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getKeysWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/get-keys-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getPreparedQueryAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/get-prepared-query-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getPreparedQueryAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/get-prepared-query-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getValueAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/get-value-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getValueAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/get-value-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getValueWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/get-value-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getValueWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/get-value-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getValuesAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/get-values-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getValuesAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/get-values-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getValuesWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/get-values-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$getValuesWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/get-values-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthChecksAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/health-checks-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthChecksAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/health-checks-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthChecksWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.CheckQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/health-checks-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthChecksWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.CheckQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/health-checks-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthServiceNodesAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, kotlin.Boolean)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/health-service-nodes-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthServiceNodesAwait(io.vertx.ext.consul.ConsulService, kotlin.String, kotlin.Boolean)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/health-service-nodes-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthServiceNodesWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, kotlin.Boolean, io.vertx.ext.consul.ServiceQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/health-service-nodes-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthServiceNodesWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, kotlin.Boolean, io.vertx.ext.consul.ServiceQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/health-service-nodes-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthStateAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.HealthState)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/health-state-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthStateAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.HealthState)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/health-state-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthStateWithOptionsAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.HealthState, io.vertx.ext.consul.CheckQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/health-state-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$healthStateWithOptionsAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.HealthState, io.vertx.ext.consul.CheckQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/health-state-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$infoAclTokenAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/info-acl-token-await.html
$dokka.location:io.vertx.kotlin.ext.consul$infoAclTokenAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/info-acl-token-await.html
$dokka.location:io.vertx.kotlin.ext.consul$infoSessionAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/info-session-await.html
$dokka.location:io.vertx.kotlin.ext.consul$infoSessionAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/info-session-await.html
$dokka.location:io.vertx.kotlin.ext.consul$infoSessionWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/info-session-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$infoSessionWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/info-session-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$leaderStatusAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/leader-status-await.html
$dokka.location:io.vertx.kotlin.ext.consul$leaderStatusAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/leader-status-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listAclTokensAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/list-acl-tokens-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listAclTokensAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/list-acl-tokens-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listEventsAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/list-events-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listEventsAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/list-events-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listEventsWithOptionsAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.EventListOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/list-events-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listEventsWithOptionsAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.EventListOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/list-events-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listNodeSessionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/list-node-sessions-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listNodeSessionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/list-node-sessions-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listNodeSessionsWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/list-node-sessions-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listNodeSessionsWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/list-node-sessions-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listSessionsAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/list-sessions-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listSessionsAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/list-sessions-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listSessionsWithOptionsAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/list-sessions-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$listSessionsWithOptionsAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.BlockingQueryOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/list-sessions-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$localChecksAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/local-checks-await.html
$dokka.location:io.vertx.kotlin.ext.consul$localChecksAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/local-checks-await.html
$dokka.location:io.vertx.kotlin.ext.consul$localServicesAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/local-services-await.html
$dokka.location:io.vertx.kotlin.ext.consul$localServicesAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/local-services-await.html
$dokka.location:io.vertx.kotlin.ext.consul$maintenanceServiceAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.MaintenanceOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/maintenance-service-await.html
$dokka.location:io.vertx.kotlin.ext.consul$maintenanceServiceAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.MaintenanceOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/maintenance-service-await.html
$dokka.location:io.vertx.kotlin.ext.consul$passCheckAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/pass-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$passCheckAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/pass-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$passCheckWithNoteAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/pass-check-with-note-await.html
$dokka.location:io.vertx.kotlin.ext.consul$passCheckWithNoteAwait(io.vertx.ext.consul.ConsulService, kotlin.String, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/pass-check-with-note-await.html
$dokka.location:io.vertx.kotlin.ext.consul$peersStatusAwait(io.vertx.ext.consul.ConsulClient)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/peers-status-await.html
$dokka.location:io.vertx.kotlin.ext.consul$peersStatusAwait(io.vertx.ext.consul.ConsulService)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/peers-status-await.html
$dokka.location:io.vertx.kotlin.ext.consul$putValueAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/put-value-await.html
$dokka.location:io.vertx.kotlin.ext.consul$putValueAwait(io.vertx.ext.consul.ConsulService, kotlin.String, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/put-value-await.html
$dokka.location:io.vertx.kotlin.ext.consul$putValueWithOptionsAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, kotlin.String, io.vertx.ext.consul.KeyValueOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/put-value-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$putValueWithOptionsAwait(io.vertx.ext.consul.ConsulService, kotlin.String, kotlin.String, io.vertx.ext.consul.KeyValueOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/put-value-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.consul$registerCheckAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.CheckOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/register-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$registerCheckAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.CheckOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/register-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$registerServiceAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.ServiceOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/register-service-await.html
$dokka.location:io.vertx.kotlin.ext.consul$registerServiceAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.ServiceOptions)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/register-service-await.html
$dokka.location:io.vertx.kotlin.ext.consul$renewSessionAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/renew-session-await.html
$dokka.location:io.vertx.kotlin.ext.consul$renewSessionAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/renew-session-await.html
$dokka.location:io.vertx.kotlin.ext.consul$transactionAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.TxnRequest)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/transaction-await.html
$dokka.location:io.vertx.kotlin.ext.consul$transactionAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.TxnRequest)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/transaction-await.html
$dokka.location:io.vertx.kotlin.ext.consul$updateAclTokenAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.AclToken)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/update-acl-token-await.html
$dokka.location:io.vertx.kotlin.ext.consul$updateAclTokenAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.AclToken)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/update-acl-token-await.html
$dokka.location:io.vertx.kotlin.ext.consul$updateCheckAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.CheckStatus)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/update-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$updateCheckAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.CheckStatus)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/update-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$updateCheckWithNoteAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, io.vertx.ext.consul.CheckStatus, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/update-check-with-note-await.html
$dokka.location:io.vertx.kotlin.ext.consul$updateCheckWithNoteAwait(io.vertx.ext.consul.ConsulService, kotlin.String, io.vertx.ext.consul.CheckStatus, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/update-check-with-note-await.html
$dokka.location:io.vertx.kotlin.ext.consul$updatePreparedQueryAwait(io.vertx.ext.consul.ConsulClient, io.vertx.ext.consul.PreparedQueryDefinition)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/update-prepared-query-await.html
$dokka.location:io.vertx.kotlin.ext.consul$updatePreparedQueryAwait(io.vertx.ext.consul.ConsulService, io.vertx.ext.consul.PreparedQueryDefinition)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/update-prepared-query-await.html
$dokka.location:io.vertx.kotlin.ext.consul$warnCheckAwait(io.vertx.ext.consul.ConsulClient, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/warn-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$warnCheckAwait(io.vertx.ext.consul.ConsulService, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/warn-check-await.html
$dokka.location:io.vertx.kotlin.ext.consul$warnCheckWithNoteAwait(io.vertx.ext.consul.ConsulClient, kotlin.String, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-client/warn-check-with-note-await.html
$dokka.location:io.vertx.kotlin.ext.consul$warnCheckWithNoteAwait(io.vertx.ext.consul.ConsulService, kotlin.String, kotlin.String)io.vertx.kotlin.ext.consul/io.vertx.ext.consul.-consul-service/warn-check-with-note-await.html
$dokka.location:io.vertx.kotlin.ext.healthchecks$invokeAwait(io.vertx.ext.healthchecks.HealthChecks, kotlin.String)io.vertx.kotlin.ext.healthchecks/io.vertx.ext.healthchecks.-health-checks/invoke-await.html
$dokka.location:io.vertx.kotlin.ext.jdbc$querySingleAwait(io.vertx.ext.jdbc.JDBCClient, kotlin.String)io.vertx.kotlin.ext.jdbc/io.vertx.ext.jdbc.-j-d-b-c-client/query-single-await.html
$dokka.location:io.vertx.kotlin.ext.jdbc$querySingleWithParamsAwait(io.vertx.ext.jdbc.JDBCClient, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.jdbc/io.vertx.ext.jdbc.-j-d-b-c-client/query-single-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.mail$sendMailAwait(io.vertx.ext.mail.MailClient, io.vertx.ext.mail.MailMessage)io.vertx.kotlin.ext.mail/io.vertx.ext.mail.-mail-client/send-mail-await.html
$dokka.location:io.vertx.kotlin.ext.mail$sendMailAwait(io.vertx.ext.mail.MailService, io.vertx.ext.mail.MailMessage)io.vertx.kotlin.ext.mail/io.vertx.ext.mail.-mail-service/send-mail-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$bulkWriteAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, kotlin.collections.List((io.vertx.ext.mongo.BulkOperation)))io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/bulk-write-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$bulkWriteAwait(io.vertx.ext.mongo.MongoService, kotlin.String, kotlin.collections.List((io.vertx.ext.mongo.BulkOperation)))io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/bulk-write-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$bulkWriteWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, kotlin.collections.List((io.vertx.ext.mongo.BulkOperation)), io.vertx.ext.mongo.BulkWriteOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/bulk-write-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$bulkWriteWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, kotlin.collections.List((io.vertx.ext.mongo.BulkOperation)), io.vertx.ext.mongo.BulkWriteOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/bulk-write-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$countAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/count-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$countAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/count-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$createCollectionAwait(io.vertx.ext.mongo.MongoClient, kotlin.String)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/create-collection-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$createCollectionAwait(io.vertx.ext.mongo.MongoService, kotlin.String)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/create-collection-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$createIndexAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/create-index-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$createIndexAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/create-index-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$createIndexWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.IndexOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/create-index-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$createIndexWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.IndexOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/create-index-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$distinctAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/distinct-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$distinctAwait(io.vertx.ext.mongo.MongoService, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/distinct-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$distinctWithQueryAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, kotlin.String, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/distinct-with-query-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$distinctWithQueryAwait(io.vertx.ext.mongo.MongoService, kotlin.String, kotlin.String, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/distinct-with-query-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$dropCollectionAwait(io.vertx.ext.mongo.MongoClient, kotlin.String)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/drop-collection-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$dropCollectionAwait(io.vertx.ext.mongo.MongoService, kotlin.String)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/drop-collection-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$dropIndexAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, kotlin.String)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/drop-index-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$dropIndexAwait(io.vertx.ext.mongo.MongoService, kotlin.String, kotlin.String)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/drop-index-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/find-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/find-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndDeleteAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/find-one-and-delete-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndDeleteAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/find-one-and-delete-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndDeleteWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.FindOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/find-one-and-delete-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndDeleteWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.FindOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/find-one-and-delete-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndReplaceAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/find-one-and-replace-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndReplaceAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/find-one-and-replace-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndReplaceWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.FindOptions, io.vertx.ext.mongo.UpdateOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/find-one-and-replace-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndReplaceWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.FindOptions, io.vertx.ext.mongo.UpdateOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/find-one-and-replace-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndUpdateAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/find-one-and-update-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndUpdateAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/find-one-and-update-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndUpdateWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.FindOptions, io.vertx.ext.mongo.UpdateOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/find-one-and-update-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAndUpdateWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.FindOptions, io.vertx.ext.mongo.UpdateOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/find-one-and-update-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/find-one-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findOneAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/find-one-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.FindOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/find-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$findWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.FindOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/find-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$getCollectionsAwait(io.vertx.ext.mongo.MongoClient)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/get-collections-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$getCollectionsAwait(io.vertx.ext.mongo.MongoService)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/get-collections-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$insertAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/insert-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$insertAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/insert-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$insertWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.WriteOption)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/insert-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$insertWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.WriteOption)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/insert-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$listIndexesAwait(io.vertx.ext.mongo.MongoClient, kotlin.String)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/list-indexes-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$listIndexesAwait(io.vertx.ext.mongo.MongoService, kotlin.String)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/list-indexes-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$removeDocumentAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/remove-document-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$removeDocumentAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/remove-document-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$removeDocumentWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.WriteOption)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/remove-document-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$removeDocumentWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.WriteOption)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/remove-document-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$removeDocumentsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/remove-documents-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$removeDocumentsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/remove-documents-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$removeDocumentsWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.WriteOption)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/remove-documents-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$removeDocumentsWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.WriteOption)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/remove-documents-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$replaceDocumentsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/replace-documents-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$replaceDocumentsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/replace-documents-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$replaceDocumentsWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.UpdateOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/replace-documents-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$replaceDocumentsWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.UpdateOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/replace-documents-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$runCommandAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/run-command-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$runCommandAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/run-command-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$saveAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/save-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$saveAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/save-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$saveWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.WriteOption)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/save-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$saveWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.WriteOption)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/save-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$updateCollectionAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/update-collection-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$updateCollectionAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/update-collection-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$updateCollectionWithOptionsAwait(io.vertx.ext.mongo.MongoClient, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.UpdateOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-client/update-collection-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.mongo$updateCollectionWithOptionsAwait(io.vertx.ext.mongo.MongoService, kotlin.String, io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject, io.vertx.ext.mongo.UpdateOptions)io.vertx.kotlin.ext.mongo/io.vertx.ext.mongo.-mongo-service/update-collection-with-options-await.html
$dokka.location:io.vertx.kotlin.ext.shell$closeAwait(io.vertx.ext.shell.ShellServer)io.vertx.kotlin.ext.shell/io.vertx.ext.shell.-shell-server/close-await.html
$dokka.location:io.vertx.kotlin.ext.shell$listenAwait(io.vertx.ext.shell.ShellServer)io.vertx.kotlin.ext.shell/io.vertx.ext.shell.-shell-server/listen-await.html
$dokka.location:io.vertx.kotlin.ext.shell$startAwait(io.vertx.ext.shell.ShellService)io.vertx.kotlin.ext.shell/io.vertx.ext.shell.-shell-service/start-await.html
$dokka.location:io.vertx.kotlin.ext.shell$stopAwait(io.vertx.ext.shell.ShellService)io.vertx.kotlin.ext.shell/io.vertx.ext.shell.-shell-service/stop-await.html
$dokka.location:io.vertx.kotlin.ext.shell.command$registerCommandAwait(io.vertx.ext.shell.command.CommandRegistry, io.vertx.ext.shell.command.Command)io.vertx.kotlin.ext.shell.command/io.vertx.ext.shell.command.-command-registry/register-command-await.html
$dokka.location:io.vertx.kotlin.ext.shell.command$registerCommandsAwait(io.vertx.ext.shell.command.CommandRegistry, kotlin.collections.List((io.vertx.ext.shell.command.Command)))io.vertx.kotlin.ext.shell.command/io.vertx.ext.shell.command.-command-registry/register-commands-await.html
$dokka.location:io.vertx.kotlin.ext.shell.command$unregisterCommandAwait(io.vertx.ext.shell.command.CommandRegistry, kotlin.String)io.vertx.kotlin.ext.shell.command/io.vertx.ext.shell.command.-command-registry/unregister-command-await.html
$dokka.location:io.vertx.kotlin.ext.shell.term$closeAwait(io.vertx.ext.shell.term.TermServer)io.vertx.kotlin.ext.shell.term/io.vertx.ext.shell.term.-term-server/close-await.html
$dokka.location:io.vertx.kotlin.ext.shell.term$listenAwait(io.vertx.ext.shell.term.TermServer)io.vertx.kotlin.ext.shell.term/io.vertx.ext.shell.term.-term-server/listen-await.html
$dokka.location:io.vertx.kotlin.ext.sql$batchAwait(io.vertx.ext.sql.SQLConnection, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/batch-await.html
$dokka.location:io.vertx.kotlin.ext.sql$batchCallableWithParamsAwait(io.vertx.ext.sql.SQLConnection, kotlin.String, kotlin.collections.List((io.vertx.core.json.JsonArray)), kotlin.collections.List((io.vertx.core.json.JsonArray)))io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/batch-callable-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$batchWithParamsAwait(io.vertx.ext.sql.SQLConnection, kotlin.String, kotlin.collections.List((io.vertx.core.json.JsonArray)))io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/batch-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$callAwait(io.vertx.ext.sql.SQLClient, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/call-await.html
$dokka.location:io.vertx.kotlin.ext.sql$callAwait(io.vertx.ext.sql.SQLConnection, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/call-await.html
$dokka.location:io.vertx.kotlin.ext.sql$callAwait(io.vertx.ext.sql.SQLOperations, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-operations/call-await.html
$dokka.location:io.vertx.kotlin.ext.sql$callWithParamsAwait(io.vertx.ext.sql.SQLClient, kotlin.String, io.vertx.core.json.JsonArray, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/call-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$callWithParamsAwait(io.vertx.ext.sql.SQLConnection, kotlin.String, io.vertx.core.json.JsonArray, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/call-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$callWithParamsAwait(io.vertx.ext.sql.SQLOperations, kotlin.String, io.vertx.core.json.JsonArray, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-operations/call-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$closeAwait(io.vertx.ext.sql.SQLClient)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/close-await.html
$dokka.location:io.vertx.kotlin.ext.sql$closeAwait(io.vertx.ext.sql.SQLConnection)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/close-await.html
$dokka.location:io.vertx.kotlin.ext.sql$closeAwait(io.vertx.ext.sql.SQLRowStream)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-row-stream/close-await.html
$dokka.location:io.vertx.kotlin.ext.sql$commitAwait(io.vertx.ext.sql.SQLConnection)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/commit-await.html
$dokka.location:io.vertx.kotlin.ext.sql$executeAwait(io.vertx.ext.sql.SQLConnection, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/execute-await.html
$dokka.location:io.vertx.kotlin.ext.sql$getConnectionAwait(io.vertx.ext.sql.SQLClient)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/get-connection-await.html
$dokka.location:io.vertx.kotlin.ext.sql$getTransactionIsolationAwait(io.vertx.ext.sql.SQLConnection)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/get-transaction-isolation-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryAwait(io.vertx.ext.sql.SQLClient, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/query-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryAwait(io.vertx.ext.sql.SQLConnection, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/query-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryAwait(io.vertx.ext.sql.SQLOperations, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-operations/query-await.html
$dokka.location:io.vertx.kotlin.ext.sql$querySingleAwait(io.vertx.ext.sql.SQLClient, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/query-single-await.html
$dokka.location:io.vertx.kotlin.ext.sql$querySingleAwait(io.vertx.ext.sql.SQLConnection, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/query-single-await.html
$dokka.location:io.vertx.kotlin.ext.sql$querySingleAwait(io.vertx.ext.sql.SQLOperations, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-operations/query-single-await.html
$dokka.location:io.vertx.kotlin.ext.sql$querySingleWithParamsAwait(io.vertx.ext.sql.SQLClient, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/query-single-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$querySingleWithParamsAwait(io.vertx.ext.sql.SQLConnection, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/query-single-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$querySingleWithParamsAwait(io.vertx.ext.sql.SQLOperations, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-operations/query-single-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryStreamAwait(io.vertx.ext.sql.SQLClient, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/query-stream-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryStreamAwait(io.vertx.ext.sql.SQLConnection, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/query-stream-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryStreamAwait(io.vertx.ext.sql.SQLOperations, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-operations/query-stream-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryStreamWithParamsAwait(io.vertx.ext.sql.SQLClient, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/query-stream-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryStreamWithParamsAwait(io.vertx.ext.sql.SQLConnection, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/query-stream-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryStreamWithParamsAwait(io.vertx.ext.sql.SQLOperations, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-operations/query-stream-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryWithParamsAwait(io.vertx.ext.sql.SQLClient, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/query-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryWithParamsAwait(io.vertx.ext.sql.SQLConnection, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/query-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$queryWithParamsAwait(io.vertx.ext.sql.SQLOperations, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-operations/query-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$rollbackAwait(io.vertx.ext.sql.SQLConnection)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/rollback-await.html
$dokka.location:io.vertx.kotlin.ext.sql$setAutoCommitAwait(io.vertx.ext.sql.SQLConnection, kotlin.Boolean)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/set-auto-commit-await.html
$dokka.location:io.vertx.kotlin.ext.sql$setTransactionIsolationAwait(io.vertx.ext.sql.SQLConnection, io.vertx.ext.sql.TransactionIsolation)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/set-transaction-isolation-await.html
$dokka.location:io.vertx.kotlin.ext.sql$updateAwait(io.vertx.ext.sql.SQLClient, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/update-await.html
$dokka.location:io.vertx.kotlin.ext.sql$updateAwait(io.vertx.ext.sql.SQLConnection, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/update-await.html
$dokka.location:io.vertx.kotlin.ext.sql$updateAwait(io.vertx.ext.sql.SQLOperations, kotlin.String)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-operations/update-await.html
$dokka.location:io.vertx.kotlin.ext.sql$updateWithParamsAwait(io.vertx.ext.sql.SQLClient, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-client/update-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$updateWithParamsAwait(io.vertx.ext.sql.SQLConnection, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-connection/update-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.sql$updateWithParamsAwait(io.vertx.ext.sql.SQLOperations, kotlin.String, io.vertx.core.json.JsonArray)io.vertx.kotlin.ext.sql/io.vertx.ext.sql.-s-q-l-operations/update-with-params-await.html
$dokka.location:io.vertx.kotlin.ext.stomp$closeAwait(io.vertx.ext.stomp.StompServer)io.vertx.kotlin.ext.stomp/io.vertx.ext.stomp.-stomp-server/close-await.html
$dokka.location:io.vertx.kotlin.ext.stomp$connectAwait(io.vertx.ext.stomp.StompClient)io.vertx.kotlin.ext.stomp/io.vertx.ext.stomp.-stomp-client/connect-await.html
$dokka.location:io.vertx.kotlin.ext.stomp$connectAwait(io.vertx.ext.stomp.StompClient, io.vertx.core.net.NetClient)io.vertx.kotlin.ext.stomp/io.vertx.ext.stomp.-stomp-client/connect-await.html
$dokka.location:io.vertx.kotlin.ext.stomp$connectAwait(io.vertx.ext.stomp.StompClient, kotlin.Int, kotlin.String)io.vertx.kotlin.ext.stomp/io.vertx.ext.stomp.-stomp-client/connect-await.html
$dokka.location:io.vertx.kotlin.ext.stomp$connectAwait(io.vertx.ext.stomp.StompClient, kotlin.Int, kotlin.String, io.vertx.core.net.NetClient)io.vertx.kotlin.ext.stomp/io.vertx.ext.stomp.-stomp-client/connect-await.html
$dokka.location:io.vertx.kotlin.ext.stomp$listenAwait(io.vertx.ext.stomp.StompServer)io.vertx.kotlin.ext.stomp/io.vertx.ext.stomp.-stomp-server/listen-await.html
$dokka.location:io.vertx.kotlin.ext.stomp$listenAwait(io.vertx.ext.stomp.StompServer, kotlin.Int)io.vertx.kotlin.ext.stomp/io.vertx.ext.stomp.-stomp-server/listen-await.html
$dokka.location:io.vertx.kotlin.ext.stomp$listenAwait(io.vertx.ext.stomp.StompServer, kotlin.Int, kotlin.String)io.vertx.kotlin.ext.stomp/io.vertx.ext.stomp.-stomp-server/listen-await.html
$dokka.location:io.vertx.kotlin.ext.stomp$onAuthenticationRequestAwait(io.vertx.ext.stomp.StompServerHandler, io.vertx.ext.stomp.StompServerConnection, kotlin.String, kotlin.String)io.vertx.kotlin.ext.stomp/io.vertx.ext.stomp.-stomp-server-handler/on-authentication-request-await.html
$dokka.location:io.vertx.kotlin.ext.unit$handlerAwait(io.vertx.ext.unit.Async)io.vertx.kotlin.ext.unit/io.vertx.ext.unit.-async/handler-await.html
$dokka.location:io.vertx.kotlin.ext.unit$handlerAwait(io.vertx.ext.unit.Completion((io.vertx.kotlin.ext.unit.handlerAwait.T)))io.vertx.kotlin.ext.unit/io.vertx.ext.unit.-completion/handler-await.html
$dokka.location:io.vertx.kotlin.ext.unit$handlerAwait(io.vertx.ext.unit.TestCompletion)io.vertx.kotlin.ext.unit/io.vertx.ext.unit.-test-completion/handler-await.html
$dokka.location:io.vertx.kotlin.ext.web.client$sendAwait(io.vertx.ext.web.client.HttpRequest((io.vertx.kotlin.ext.web.client.sendAwait.T)))io.vertx.kotlin.ext.web.client/io.vertx.ext.web.client.-http-request/send-await.html
$dokka.location:io.vertx.kotlin.ext.web.client$sendBufferAwait(io.vertx.ext.web.client.HttpRequest((io.vertx.kotlin.ext.web.client.sendBufferAwait.T)), io.vertx.core.buffer.Buffer)io.vertx.kotlin.ext.web.client/io.vertx.ext.web.client.-http-request/send-buffer-await.html
$dokka.location:io.vertx.kotlin.ext.web.client$sendFormAwait(io.vertx.ext.web.client.HttpRequest((io.vertx.kotlin.ext.web.client.sendFormAwait.T)), io.vertx.core.MultiMap)io.vertx.kotlin.ext.web.client/io.vertx.ext.web.client.-http-request/send-form-await.html
$dokka.location:io.vertx.kotlin.ext.web.client$sendJsonAwait(io.vertx.ext.web.client.HttpRequest((io.vertx.kotlin.ext.web.client.sendJsonAwait.T)), kotlin.Any)io.vertx.kotlin.ext.web.client/io.vertx.ext.web.client.-http-request/send-json-await.html
$dokka.location:io.vertx.kotlin.ext.web.client$sendJsonObjectAwait(io.vertx.ext.web.client.HttpRequest((io.vertx.kotlin.ext.web.client.sendJsonObjectAwait.T)), io.vertx.core.json.JsonObject)io.vertx.kotlin.ext.web.client/io.vertx.ext.web.client.-http-request/send-json-object-await.html
$dokka.location:io.vertx.kotlin.ext.web.client$sendMultipartFormAwait(io.vertx.ext.web.client.HttpRequest((io.vertx.kotlin.ext.web.client.sendMultipartFormAwait.T)), io.vertx.ext.web.multipart.MultipartForm)io.vertx.kotlin.ext.web.client/io.vertx.ext.web.client.-http-request/send-multipart-form-await.html
$dokka.location:io.vertx.kotlin.ext.web.client$sendStreamAwait(io.vertx.ext.web.client.HttpRequest((io.vertx.kotlin.ext.web.client.sendStreamAwait.T)), io.vertx.core.streams.ReadStream((io.vertx.core.buffer.Buffer)))io.vertx.kotlin.ext.web.client/io.vertx.ext.web.client.-http-request/send-stream-await.html
$dokka.location:io.vertx.kotlin.ext.web.common.template$renderAwait(io.vertx.ext.web.common.template.TemplateEngine, io.vertx.core.json.JsonObject, kotlin.String)io.vertx.kotlin.ext.web.common.template/io.vertx.ext.web.common.template.-template-engine/render-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$authorizeAwait(io.vertx.ext.web.handler.AuthHandler, io.vertx.ext.auth.User)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-auth-handler/authorize-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$authorizeAwait(io.vertx.ext.web.handler.BasicAuthHandler, io.vertx.ext.auth.User)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-basic-auth-handler/authorize-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$authorizeAwait(io.vertx.ext.web.handler.ChainAuthHandler, io.vertx.ext.auth.User)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-chain-auth-handler/authorize-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$authorizeAwait(io.vertx.ext.web.handler.DigestAuthHandler, io.vertx.ext.auth.User)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-digest-auth-handler/authorize-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$authorizeAwait(io.vertx.ext.web.handler.JWTAuthHandler, io.vertx.ext.auth.User)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-j-w-t-auth-handler/authorize-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$authorizeAwait(io.vertx.ext.web.handler.OAuth2AuthHandler, io.vertx.ext.auth.User)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-o-auth2-auth-handler/authorize-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$authorizeAwait(io.vertx.ext.web.handler.RedirectAuthHandler, io.vertx.ext.auth.User)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-redirect-auth-handler/authorize-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$parseCredentialsAwait(io.vertx.ext.web.handler.AuthHandler, io.vertx.ext.web.RoutingContext)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-auth-handler/parse-credentials-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$parseCredentialsAwait(io.vertx.ext.web.handler.BasicAuthHandler, io.vertx.ext.web.RoutingContext)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-basic-auth-handler/parse-credentials-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$parseCredentialsAwait(io.vertx.ext.web.handler.ChainAuthHandler, io.vertx.ext.web.RoutingContext)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-chain-auth-handler/parse-credentials-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$parseCredentialsAwait(io.vertx.ext.web.handler.DigestAuthHandler, io.vertx.ext.web.RoutingContext)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-digest-auth-handler/parse-credentials-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$parseCredentialsAwait(io.vertx.ext.web.handler.JWTAuthHandler, io.vertx.ext.web.RoutingContext)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-j-w-t-auth-handler/parse-credentials-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$parseCredentialsAwait(io.vertx.ext.web.handler.OAuth2AuthHandler, io.vertx.ext.web.RoutingContext)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-o-auth2-auth-handler/parse-credentials-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler$parseCredentialsAwait(io.vertx.ext.web.handler.RedirectAuthHandler, io.vertx.ext.web.RoutingContext)io.vertx.kotlin.ext.web.handler/io.vertx.ext.web.handler.-redirect-auth-handler/parse-credentials-await.html
$dokka.location:io.vertx.kotlin.ext.web.handler.sockjs$setHandlerAwait(io.vertx.ext.web.handler.sockjs.BridgeEvent)io.vertx.kotlin.ext.web.handler.sockjs/io.vertx.ext.web.handler.sockjs.-bridge-event/set-handler-await.html
$dokka.location:io.vertx.kotlin.ext.web.sstore$clearAwait(io.vertx.ext.web.sstore.SessionStore)io.vertx.kotlin.ext.web.sstore/io.vertx.ext.web.sstore.-session-store/clear-await.html
$dokka.location:io.vertx.kotlin.ext.web.sstore$deleteAwait(io.vertx.ext.web.sstore.SessionStore, kotlin.String)io.vertx.kotlin.ext.web.sstore/io.vertx.ext.web.sstore.-session-store/delete-await.html
$dokka.location:io.vertx.kotlin.ext.web.sstore$getAwait(io.vertx.ext.web.sstore.SessionStore, kotlin.String)io.vertx.kotlin.ext.web.sstore/io.vertx.ext.web.sstore.-session-store/get-await.html
$dokka.location:io.vertx.kotlin.ext.web.sstore$putAwait(io.vertx.ext.web.sstore.SessionStore, io.vertx.ext.web.Session)io.vertx.kotlin.ext.web.sstore/io.vertx.ext.web.sstore.-session-store/put-await.html
$dokka.location:io.vertx.kotlin.ext.web.sstore$sizeAwait(io.vertx.ext.web.sstore.SessionStore)io.vertx.kotlin.ext.web.sstore/io.vertx.ext.web.sstore.-session-store/size-await.html
$dokka.location:io.vertx.kotlin.kafka.admin$changeTopicConfigAwait(io.vertx.kafka.admin.AdminUtils, kotlin.String, kotlin.collections.Map((kotlin.String, )))io.vertx.kotlin.kafka.admin/io.vertx.kafka.admin.-admin-utils/change-topic-config-await.html
$dokka.location:io.vertx.kotlin.kafka.admin$closeAwait(io.vertx.kafka.admin.AdminUtils)io.vertx.kotlin.kafka.admin/io.vertx.kafka.admin.-admin-utils/close-await.html
$dokka.location:io.vertx.kotlin.kafka.admin$createTopicAwait(io.vertx.kafka.admin.AdminUtils, kotlin.String, kotlin.Int, kotlin.Int)io.vertx.kotlin.kafka.admin/io.vertx.kafka.admin.-admin-utils/create-topic-await.html
$dokka.location:io.vertx.kotlin.kafka.admin$createTopicAwait(io.vertx.kafka.admin.AdminUtils, kotlin.String, kotlin.Int, kotlin.Int, kotlin.collections.Map((kotlin.String, )))io.vertx.kotlin.kafka.admin/io.vertx.kafka.admin.-admin-utils/create-topic-await.html
$dokka.location:io.vertx.kotlin.kafka.admin$deleteTopicAwait(io.vertx.kafka.admin.AdminUtils, kotlin.String)io.vertx.kotlin.kafka.admin/io.vertx.kafka.admin.-admin-utils/delete-topic-await.html
$dokka.location:io.vertx.kotlin.kafka.admin$topicExistsAwait(io.vertx.kafka.admin.AdminUtils, kotlin.String)io.vertx.kotlin.kafka.admin/io.vertx.kafka.admin.-admin-utils/topic-exists-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$assignAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.assignAwait.K, io.vertx.kotlin.kafka.client.consumer.assignAwait.V)), io.vertx.kafka.client.common.TopicPartition)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/assign-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$assignAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.assignAwait.K, io.vertx.kotlin.kafka.client.consumer.assignAwait.V)), kotlin.collections.Set((io.vertx.kafka.client.common.TopicPartition)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/assign-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$assignmentAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.assignmentAwait.K, io.vertx.kotlin.kafka.client.consumer.assignmentAwait.V)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/assignment-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$beginningOffsetsAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.beginningOffsetsAwait.K, io.vertx.kotlin.kafka.client.consumer.beginningOffsetsAwait.V)), io.vertx.kafka.client.common.TopicPartition)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/beginning-offsets-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$closeAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.closeAwait.K, io.vertx.kotlin.kafka.client.consumer.closeAwait.V)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/close-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$commitAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.commitAwait.K, io.vertx.kotlin.kafka.client.consumer.commitAwait.V)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/commit-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$committedAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.committedAwait.K, io.vertx.kotlin.kafka.client.consumer.committedAwait.V)), io.vertx.kafka.client.common.TopicPartition)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/committed-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$endOffsetsAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.endOffsetsAwait.K, io.vertx.kotlin.kafka.client.consumer.endOffsetsAwait.V)), io.vertx.kafka.client.common.TopicPartition)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/end-offsets-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$offsetsForTimesAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.offsetsForTimesAwait.K, io.vertx.kotlin.kafka.client.consumer.offsetsForTimesAwait.V)), io.vertx.kafka.client.common.TopicPartition, kotlin.Long)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/offsets-for-times-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$partitionsForAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.partitionsForAwait.K, io.vertx.kotlin.kafka.client.consumer.partitionsForAwait.V)), kotlin.String)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/partitions-for-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$pauseAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.pauseAwait.K, io.vertx.kotlin.kafka.client.consumer.pauseAwait.V)), io.vertx.kafka.client.common.TopicPartition)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/pause-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$pauseAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.pauseAwait.K, io.vertx.kotlin.kafka.client.consumer.pauseAwait.V)), kotlin.collections.Set((io.vertx.kafka.client.common.TopicPartition)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/pause-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$pausedAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.pausedAwait.K, io.vertx.kotlin.kafka.client.consumer.pausedAwait.V)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/paused-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$pollAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.pollAwait.K, io.vertx.kotlin.kafka.client.consumer.pollAwait.V)), kotlin.Long)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/poll-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$positionAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.positionAwait.K, io.vertx.kotlin.kafka.client.consumer.positionAwait.V)), io.vertx.kafka.client.common.TopicPartition)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/position-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$resumeAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.resumeAwait.K, io.vertx.kotlin.kafka.client.consumer.resumeAwait.V)), io.vertx.kafka.client.common.TopicPartition)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/resume-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$resumeAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.resumeAwait.K, io.vertx.kotlin.kafka.client.consumer.resumeAwait.V)), kotlin.collections.Set((io.vertx.kafka.client.common.TopicPartition)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/resume-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$seekAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.seekAwait.K, io.vertx.kotlin.kafka.client.consumer.seekAwait.V)), io.vertx.kafka.client.common.TopicPartition, kotlin.Long)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/seek-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$seekToBeginningAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.seekToBeginningAwait.K, io.vertx.kotlin.kafka.client.consumer.seekToBeginningAwait.V)), io.vertx.kafka.client.common.TopicPartition)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/seek-to-beginning-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$seekToBeginningAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.seekToBeginningAwait.K, io.vertx.kotlin.kafka.client.consumer.seekToBeginningAwait.V)), kotlin.collections.Set((io.vertx.kafka.client.common.TopicPartition)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/seek-to-beginning-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$seekToEndAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.seekToEndAwait.K, io.vertx.kotlin.kafka.client.consumer.seekToEndAwait.V)), io.vertx.kafka.client.common.TopicPartition)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/seek-to-end-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$seekToEndAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.seekToEndAwait.K, io.vertx.kotlin.kafka.client.consumer.seekToEndAwait.V)), kotlin.collections.Set((io.vertx.kafka.client.common.TopicPartition)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/seek-to-end-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$subscribeAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.subscribeAwait.K, io.vertx.kotlin.kafka.client.consumer.subscribeAwait.V)), kotlin.String)io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/subscribe-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$subscribeAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.subscribeAwait.K, io.vertx.kotlin.kafka.client.consumer.subscribeAwait.V)), kotlin.collections.Set((kotlin.String)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/subscribe-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$subscriptionAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.subscriptionAwait.K, io.vertx.kotlin.kafka.client.consumer.subscriptionAwait.V)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/subscription-await.html
$dokka.location:io.vertx.kotlin.kafka.client.consumer$unsubscribeAwait(io.vertx.kafka.client.consumer.KafkaConsumer((io.vertx.kotlin.kafka.client.consumer.unsubscribeAwait.K, io.vertx.kotlin.kafka.client.consumer.unsubscribeAwait.V)))io.vertx.kotlin.kafka.client.consumer/io.vertx.kafka.client.consumer.-kafka-consumer/unsubscribe-await.html
$dokka.location:io.vertx.kotlin.kafka.client.producer$closeAwait(io.vertx.kafka.client.producer.KafkaProducer((io.vertx.kotlin.kafka.client.producer.closeAwait.K, io.vertx.kotlin.kafka.client.producer.closeAwait.V)))io.vertx.kotlin.kafka.client.producer/io.vertx.kafka.client.producer.-kafka-producer/close-await.html
$dokka.location:io.vertx.kotlin.kafka.client.producer$closeAwait(io.vertx.kafka.client.producer.KafkaProducer((io.vertx.kotlin.kafka.client.producer.closeAwait.K, io.vertx.kotlin.kafka.client.producer.closeAwait.V)), kotlin.Long)io.vertx.kotlin.kafka.client.producer/io.vertx.kafka.client.producer.-kafka-producer/close-await.html
$dokka.location:io.vertx.kotlin.kafka.client.producer$partitionsForAwait(io.vertx.kafka.client.producer.KafkaProducer((io.vertx.kotlin.kafka.client.producer.partitionsForAwait.K, io.vertx.kotlin.kafka.client.producer.partitionsForAwait.V)), kotlin.String)io.vertx.kotlin.kafka.client.producer/io.vertx.kafka.client.producer.-kafka-producer/partitions-for-await.html
$dokka.location:io.vertx.kotlin.kafka.client.producer$writeAwait(io.vertx.kafka.client.producer.KafkaProducer((io.vertx.kotlin.kafka.client.producer.writeAwait.K, io.vertx.kotlin.kafka.client.producer.writeAwait.V)), io.vertx.kafka.client.producer.KafkaProducerRecord((io.vertx.kotlin.kafka.client.producer.writeAwait.K, io.vertx.kotlin.kafka.client.producer.writeAwait.V)))io.vertx.kotlin.kafka.client.producer/io.vertx.kafka.client.producer.-kafka-producer/write-await.html
$dokka.location:io.vertx.kotlin.mqtt$closeAwait(io.vertx.mqtt.MqttServer)io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-server/close-await.html
$dokka.location:io.vertx.kotlin.mqtt$connectAwait(io.vertx.mqtt.MqttClient, kotlin.Int, kotlin.String)io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-client/connect-await.html
$dokka.location:io.vertx.kotlin.mqtt$connectAwait(io.vertx.mqtt.MqttClient, kotlin.Int, kotlin.String, kotlin.String)io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-client/connect-await.html
$dokka.location:io.vertx.kotlin.mqtt$disconnectAwait(io.vertx.mqtt.MqttClient)io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-client/disconnect-await.html
$dokka.location:io.vertx.kotlin.mqtt$listenAwait(io.vertx.mqtt.MqttServer)io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-server/listen-await.html
$dokka.location:io.vertx.kotlin.mqtt$listenAwait(io.vertx.mqtt.MqttServer, kotlin.Int)io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-server/listen-await.html
$dokka.location:io.vertx.kotlin.mqtt$listenAwait(io.vertx.mqtt.MqttServer, kotlin.Int, kotlin.String)io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-server/listen-await.html
$dokka.location:io.vertx.kotlin.mqtt$publishAwait(io.vertx.mqtt.MqttClient, kotlin.String, io.vertx.core.buffer.Buffer, io.netty.handler.codec.mqtt.MqttQoS, kotlin.Boolean, kotlin.Boolean)io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-client/publish-await.html
$dokka.location:io.vertx.kotlin.mqtt$publishAwait(io.vertx.mqtt.MqttEndpoint, kotlin.String, io.vertx.core.buffer.Buffer, io.netty.handler.codec.mqtt.MqttQoS, kotlin.Boolean, kotlin.Boolean)io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-endpoint/publish-await.html
$dokka.location:io.vertx.kotlin.mqtt$subscribeAwait(io.vertx.mqtt.MqttClient, kotlin.String, kotlin.Int)io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-client/subscribe-await.html
$dokka.location:io.vertx.kotlin.mqtt$subscribeAwait(io.vertx.mqtt.MqttClient, kotlin.collections.Map((kotlin.String, kotlin.Int)))io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-client/subscribe-await.html
$dokka.location:io.vertx.kotlin.mqtt$unsubscribeAwait(io.vertx.mqtt.MqttClient, kotlin.String)io.vertx.kotlin.mqtt/io.vertx.mqtt.-mqtt-client/unsubscribe-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$basicAckAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.Long, kotlin.Boolean)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/basic-ack-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$basicConsumerAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/basic-consumer-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$basicConsumerAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String, io.vertx.rabbitmq.QueueOptions)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/basic-consumer-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$basicGetAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String, kotlin.Boolean)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/basic-get-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$basicNackAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.Long, kotlin.Boolean, kotlin.Boolean)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/basic-nack-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$basicPublishAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/basic-publish-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$basicQosAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.Int)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/basic-qos-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$basicQosAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.Int, kotlin.Boolean)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/basic-qos-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$basicQosAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.Int, kotlin.Int, kotlin.Boolean)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/basic-qos-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$cancelAwait(io.vertx.rabbitmq.RabbitMQConsumer)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-consumer/cancel-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$confirmSelectAwait(io.vertx.rabbitmq.RabbitMQClient)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/confirm-select-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$exchangeBindAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/exchange-bind-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$exchangeDeclareAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String, kotlin.String, kotlin.Boolean, kotlin.Boolean)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/exchange-declare-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$exchangeDeclareAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String, kotlin.String, kotlin.Boolean, kotlin.Boolean, io.vertx.core.json.JsonObject)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/exchange-declare-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$exchangeDeleteAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/exchange-delete-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$exchangeUnbindAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/exchange-unbind-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$messageCountAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/message-count-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$queueBindAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/queue-bind-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$queueDeclareAutoAwait(io.vertx.rabbitmq.RabbitMQClient)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/queue-declare-auto-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$queueDeclareAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String, kotlin.Boolean, kotlin.Boolean, kotlin.Boolean)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/queue-declare-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$queueDeclareAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String, kotlin.Boolean, kotlin.Boolean, kotlin.Boolean, io.vertx.core.json.JsonObject)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/queue-declare-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$queueDeleteAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/queue-delete-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$queueDeleteIfAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.String, kotlin.Boolean, kotlin.Boolean)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/queue-delete-if-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$startAwait(io.vertx.rabbitmq.RabbitMQClient)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/start-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$stopAwait(io.vertx.rabbitmq.RabbitMQClient)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/stop-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$waitForConfirmsAwait(io.vertx.rabbitmq.RabbitMQClient)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/wait-for-confirms-await.html
$dokka.location:io.vertx.kotlin.rabbitmq$waitForConfirmsAwait(io.vertx.rabbitmq.RabbitMQClient, kotlin.Long)io.vertx.kotlin.rabbitmq/io.vertx.rabbitmq.-rabbit-m-q-client/wait-for-confirms-await.html
$dokka.location:io.vertx.kotlin.redis$appendAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/append-await.html
$dokka.location:io.vertx.kotlin.redis$appendAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/append-await.html
$dokka.location:io.vertx.kotlin.redis$authAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/auth-await.html
$dokka.location:io.vertx.kotlin.redis$authAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/auth-await.html
$dokka.location:io.vertx.kotlin.redis$bgrewriteaofAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/bgrewriteaof-await.html
$dokka.location:io.vertx.kotlin.redis$bgrewriteaofAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/bgrewriteaof-await.html
$dokka.location:io.vertx.kotlin.redis$bgsaveAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/bgsave-await.html
$dokka.location:io.vertx.kotlin.redis$bgsaveAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/bgsave-await.html
$dokka.location:io.vertx.kotlin.redis$bitcountAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/bitcount-await.html
$dokka.location:io.vertx.kotlin.redis$bitcountAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/bitcount-await.html
$dokka.location:io.vertx.kotlin.redis$bitcountRangeAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/bitcount-range-await.html
$dokka.location:io.vertx.kotlin.redis$bitcountRangeAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/bitcount-range-await.html
$dokka.location:io.vertx.kotlin.redis$bitfieldAwait(io.vertx.redis.RedisClient, kotlin.String, io.vertx.redis.op.BitFieldOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/bitfield-await.html
$dokka.location:io.vertx.kotlin.redis$bitfieldWithOverflowAwait(io.vertx.redis.RedisClient, kotlin.String, io.vertx.redis.op.BitFieldOptions, io.vertx.redis.op.BitFieldOverflowOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/bitfield-with-overflow-await.html
$dokka.location:io.vertx.kotlin.redis$bitopAwait(io.vertx.redis.RedisClient, io.vertx.redis.op.BitOperation, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/bitop-await.html
$dokka.location:io.vertx.kotlin.redis$bitopAwait(io.vertx.redis.RedisTransaction, io.vertx.redis.op.BitOperation, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/bitop-await.html
$dokka.location:io.vertx.kotlin.redis$bitposAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/bitpos-await.html
$dokka.location:io.vertx.kotlin.redis$bitposAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/bitpos-await.html
$dokka.location:io.vertx.kotlin.redis$bitposFromAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/bitpos-from-await.html
$dokka.location:io.vertx.kotlin.redis$bitposFromAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/bitpos-from-await.html
$dokka.location:io.vertx.kotlin.redis$bitposRangeAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int, kotlin.Int, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/bitpos-range-await.html
$dokka.location:io.vertx.kotlin.redis$bitposRangeAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int, kotlin.Int, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/bitpos-range-await.html
$dokka.location:io.vertx.kotlin.redis$blpopAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/blpop-await.html
$dokka.location:io.vertx.kotlin.redis$blpopAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/blpop-await.html
$dokka.location:io.vertx.kotlin.redis$blpopManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)), kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/blpop-many-await.html
$dokka.location:io.vertx.kotlin.redis$blpopManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)), kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/blpop-many-await.html
$dokka.location:io.vertx.kotlin.redis$brpopAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/brpop-await.html
$dokka.location:io.vertx.kotlin.redis$brpopAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/brpop-await.html
$dokka.location:io.vertx.kotlin.redis$brpopManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)), kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/brpop-many-await.html
$dokka.location:io.vertx.kotlin.redis$brpopManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)), kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/brpop-many-await.html
$dokka.location:io.vertx.kotlin.redis$brpoplpushAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/brpoplpush-await.html
$dokka.location:io.vertx.kotlin.redis$brpoplpushAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/brpoplpush-await.html
$dokka.location:io.vertx.kotlin.redis$clientGetnameAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/client-getname-await.html
$dokka.location:io.vertx.kotlin.redis$clientGetnameAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/client-getname-await.html
$dokka.location:io.vertx.kotlin.redis$clientKillAwait(io.vertx.redis.RedisClient, io.vertx.redis.op.KillFilter)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/client-kill-await.html
$dokka.location:io.vertx.kotlin.redis$clientKillAwait(io.vertx.redis.RedisTransaction, io.vertx.redis.op.KillFilter)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/client-kill-await.html
$dokka.location:io.vertx.kotlin.redis$clientListAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/client-list-await.html
$dokka.location:io.vertx.kotlin.redis$clientListAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/client-list-await.html
$dokka.location:io.vertx.kotlin.redis$clientPauseAwait(io.vertx.redis.RedisClient, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/client-pause-await.html
$dokka.location:io.vertx.kotlin.redis$clientPauseAwait(io.vertx.redis.RedisTransaction, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/client-pause-await.html
$dokka.location:io.vertx.kotlin.redis$clientReplyAwait(io.vertx.redis.RedisClient, io.vertx.redis.op.ClientReplyOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/client-reply-await.html
$dokka.location:io.vertx.kotlin.redis$clientSetnameAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/client-setname-await.html
$dokka.location:io.vertx.kotlin.redis$clientSetnameAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/client-setname-await.html
$dokka.location:io.vertx.kotlin.redis$closeAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/close-await.html
$dokka.location:io.vertx.kotlin.redis$closeAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/close-await.html
$dokka.location:io.vertx.kotlin.redis$clusterAddslotsAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.Long)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-addslots-await.html
$dokka.location:io.vertx.kotlin.redis$clusterAddslotsAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-addslots-await.html
$dokka.location:io.vertx.kotlin.redis$clusterCountFailureReportsAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-count-failure-reports-await.html
$dokka.location:io.vertx.kotlin.redis$clusterCountFailureReportsAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-count-failure-reports-await.html
$dokka.location:io.vertx.kotlin.redis$clusterCountkeysinslotAwait(io.vertx.redis.RedisClient, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-countkeysinslot-await.html
$dokka.location:io.vertx.kotlin.redis$clusterCountkeysinslotAwait(io.vertx.redis.RedisTransaction, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-countkeysinslot-await.html
$dokka.location:io.vertx.kotlin.redis$clusterDelslotsAwait(io.vertx.redis.RedisClient, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-delslots-await.html
$dokka.location:io.vertx.kotlin.redis$clusterDelslotsAwait(io.vertx.redis.RedisTransaction, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-delslots-await.html
$dokka.location:io.vertx.kotlin.redis$clusterDelslotsManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.Long)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-delslots-many-await.html
$dokka.location:io.vertx.kotlin.redis$clusterDelslotsManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-delslots-many-await.html
$dokka.location:io.vertx.kotlin.redis$clusterFailOverWithOptionsAwait(io.vertx.redis.RedisClient, io.vertx.redis.op.FailoverOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-fail-over-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$clusterFailOverWithOptionsAwait(io.vertx.redis.RedisTransaction, io.vertx.redis.op.FailoverOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-fail-over-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$clusterFailoverAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-failover-await.html
$dokka.location:io.vertx.kotlin.redis$clusterFailoverAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-failover-await.html
$dokka.location:io.vertx.kotlin.redis$clusterForgetAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-forget-await.html
$dokka.location:io.vertx.kotlin.redis$clusterForgetAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-forget-await.html
$dokka.location:io.vertx.kotlin.redis$clusterGetkeysinslotAwait(io.vertx.redis.RedisClient, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-getkeysinslot-await.html
$dokka.location:io.vertx.kotlin.redis$clusterGetkeysinslotAwait(io.vertx.redis.RedisTransaction, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-getkeysinslot-await.html
$dokka.location:io.vertx.kotlin.redis$clusterInfoAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-info-await.html
$dokka.location:io.vertx.kotlin.redis$clusterInfoAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-info-await.html
$dokka.location:io.vertx.kotlin.redis$clusterKeyslotAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-keyslot-await.html
$dokka.location:io.vertx.kotlin.redis$clusterKeyslotAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-keyslot-await.html
$dokka.location:io.vertx.kotlin.redis$clusterMeetAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-meet-await.html
$dokka.location:io.vertx.kotlin.redis$clusterMeetAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-meet-await.html
$dokka.location:io.vertx.kotlin.redis$clusterNodesAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-nodes-await.html
$dokka.location:io.vertx.kotlin.redis$clusterNodesAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-nodes-await.html
$dokka.location:io.vertx.kotlin.redis$clusterReplicateAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-replicate-await.html
$dokka.location:io.vertx.kotlin.redis$clusterReplicateAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-replicate-await.html
$dokka.location:io.vertx.kotlin.redis$clusterResetAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-reset-await.html
$dokka.location:io.vertx.kotlin.redis$clusterResetAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-reset-await.html
$dokka.location:io.vertx.kotlin.redis$clusterResetWithOptionsAwait(io.vertx.redis.RedisClient, io.vertx.redis.op.ResetOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-reset-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$clusterResetWithOptionsAwait(io.vertx.redis.RedisTransaction, io.vertx.redis.op.ResetOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-reset-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSaveconfigAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-saveconfig-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSaveconfigAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-saveconfig-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSetConfigEpochAwait(io.vertx.redis.RedisClient, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-set-config-epoch-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSetConfigEpochAwait(io.vertx.redis.RedisTransaction, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-set-config-epoch-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSetslotAwait(io.vertx.redis.RedisClient, kotlin.Long, io.vertx.redis.op.SlotCmd)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-setslot-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSetslotAwait(io.vertx.redis.RedisTransaction, kotlin.Long, io.vertx.redis.op.SlotCmd)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-setslot-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSetslotWithNodeAwait(io.vertx.redis.RedisClient, kotlin.Long, io.vertx.redis.op.SlotCmd, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-setslot-with-node-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSetslotWithNodeAwait(io.vertx.redis.RedisTransaction, kotlin.Long, io.vertx.redis.op.SlotCmd, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-setslot-with-node-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSlavesAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-slaves-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSlavesAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-slaves-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSlotsAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/cluster-slots-await.html
$dokka.location:io.vertx.kotlin.redis$clusterSlotsAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/cluster-slots-await.html
$dokka.location:io.vertx.kotlin.redis$commandAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/command-await.html
$dokka.location:io.vertx.kotlin.redis$commandAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/command-await.html
$dokka.location:io.vertx.kotlin.redis$commandCountAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/command-count-await.html
$dokka.location:io.vertx.kotlin.redis$commandCountAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/command-count-await.html
$dokka.location:io.vertx.kotlin.redis$commandGetkeysAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/command-getkeys-await.html
$dokka.location:io.vertx.kotlin.redis$commandGetkeysAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/command-getkeys-await.html
$dokka.location:io.vertx.kotlin.redis$commandInfoAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/command-info-await.html
$dokka.location:io.vertx.kotlin.redis$commandInfoAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/command-info-await.html
$dokka.location:io.vertx.kotlin.redis$configGetAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/config-get-await.html
$dokka.location:io.vertx.kotlin.redis$configGetAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/config-get-await.html
$dokka.location:io.vertx.kotlin.redis$configResetstatAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/config-resetstat-await.html
$dokka.location:io.vertx.kotlin.redis$configResetstatAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/config-resetstat-await.html
$dokka.location:io.vertx.kotlin.redis$configRewriteAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/config-rewrite-await.html
$dokka.location:io.vertx.kotlin.redis$configRewriteAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/config-rewrite-await.html
$dokka.location:io.vertx.kotlin.redis$configSetAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/config-set-await.html
$dokka.location:io.vertx.kotlin.redis$configSetAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/config-set-await.html
$dokka.location:io.vertx.kotlin.redis$dbsizeAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/dbsize-await.html
$dokka.location:io.vertx.kotlin.redis$dbsizeAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/dbsize-await.html
$dokka.location:io.vertx.kotlin.redis$debugObjectAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/debug-object-await.html
$dokka.location:io.vertx.kotlin.redis$debugObjectAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/debug-object-await.html
$dokka.location:io.vertx.kotlin.redis$debugSegfaultAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/debug-segfault-await.html
$dokka.location:io.vertx.kotlin.redis$debugSegfaultAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/debug-segfault-await.html
$dokka.location:io.vertx.kotlin.redis$decrAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/decr-await.html
$dokka.location:io.vertx.kotlin.redis$decrAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/decr-await.html
$dokka.location:io.vertx.kotlin.redis$decrbyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/decrby-await.html
$dokka.location:io.vertx.kotlin.redis$decrbyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/decrby-await.html
$dokka.location:io.vertx.kotlin.redis$delAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/del-await.html
$dokka.location:io.vertx.kotlin.redis$delAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/del-await.html
$dokka.location:io.vertx.kotlin.redis$delManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/del-many-await.html
$dokka.location:io.vertx.kotlin.redis$delManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/del-many-await.html
$dokka.location:io.vertx.kotlin.redis$discardAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/discard-await.html
$dokka.location:io.vertx.kotlin.redis$dumpAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/dump-await.html
$dokka.location:io.vertx.kotlin.redis$dumpAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/dump-await.html
$dokka.location:io.vertx.kotlin.redis$echoAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/echo-await.html
$dokka.location:io.vertx.kotlin.redis$echoAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/echo-await.html
$dokka.location:io.vertx.kotlin.redis$evalAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)), kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/eval-await.html
$dokka.location:io.vertx.kotlin.redis$evalAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)), kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/eval-await.html
$dokka.location:io.vertx.kotlin.redis$evalScriptAwait(io.vertx.redis.RedisClient, io.vertx.redis.Script, kotlin.collections.List((kotlin.String)), kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/eval-script-await.html
$dokka.location:io.vertx.kotlin.redis$evalshaAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)), kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/evalsha-await.html
$dokka.location:io.vertx.kotlin.redis$evalshaAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)), kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/evalsha-await.html
$dokka.location:io.vertx.kotlin.redis$execAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/exec-await.html
$dokka.location:io.vertx.kotlin.redis$existsAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/exists-await.html
$dokka.location:io.vertx.kotlin.redis$existsAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/exists-await.html
$dokka.location:io.vertx.kotlin.redis$existsManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/exists-many-await.html
$dokka.location:io.vertx.kotlin.redis$existsManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/exists-many-await.html
$dokka.location:io.vertx.kotlin.redis$expireAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/expire-await.html
$dokka.location:io.vertx.kotlin.redis$expireAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/expire-await.html
$dokka.location:io.vertx.kotlin.redis$expireatAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/expireat-await.html
$dokka.location:io.vertx.kotlin.redis$expireatAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/expireat-await.html
$dokka.location:io.vertx.kotlin.redis$flushallAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/flushall-await.html
$dokka.location:io.vertx.kotlin.redis$flushallAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/flushall-await.html
$dokka.location:io.vertx.kotlin.redis$flushdbAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/flushdb-await.html
$dokka.location:io.vertx.kotlin.redis$flushdbAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/flushdb-await.html
$dokka.location:io.vertx.kotlin.redis$geoaddAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Double, kotlin.Double, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/geoadd-await.html
$dokka.location:io.vertx.kotlin.redis$geoaddAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Double, kotlin.Double, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/geoadd-await.html
$dokka.location:io.vertx.kotlin.redis$geoaddManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((io.vertx.redis.op.GeoMember)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/geoadd-many-await.html
$dokka.location:io.vertx.kotlin.redis$geoaddManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((io.vertx.redis.op.GeoMember)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/geoadd-many-await.html
$dokka.location:io.vertx.kotlin.redis$geodistAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/geodist-await.html
$dokka.location:io.vertx.kotlin.redis$geodistAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/geodist-await.html
$dokka.location:io.vertx.kotlin.redis$geodistWithUnitAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String, io.vertx.redis.op.GeoUnit)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/geodist-with-unit-await.html
$dokka.location:io.vertx.kotlin.redis$geodistWithUnitAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String, io.vertx.redis.op.GeoUnit)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/geodist-with-unit-await.html
$dokka.location:io.vertx.kotlin.redis$geohashAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/geohash-await.html
$dokka.location:io.vertx.kotlin.redis$geohashAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/geohash-await.html
$dokka.location:io.vertx.kotlin.redis$geohashManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/geohash-many-await.html
$dokka.location:io.vertx.kotlin.redis$geohashManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/geohash-many-await.html
$dokka.location:io.vertx.kotlin.redis$geoposAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/geopos-await.html
$dokka.location:io.vertx.kotlin.redis$geoposAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/geopos-await.html
$dokka.location:io.vertx.kotlin.redis$geoposManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/geopos-many-await.html
$dokka.location:io.vertx.kotlin.redis$geoposManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/geopos-many-await.html
$dokka.location:io.vertx.kotlin.redis$georadiusAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Double, kotlin.Double, kotlin.Double, io.vertx.redis.op.GeoUnit)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/georadius-await.html
$dokka.location:io.vertx.kotlin.redis$georadiusAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Double, kotlin.Double, kotlin.Double, io.vertx.redis.op.GeoUnit)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/georadius-await.html
$dokka.location:io.vertx.kotlin.redis$georadiusWithOptionsAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Double, kotlin.Double, kotlin.Double, io.vertx.redis.op.GeoUnit, io.vertx.redis.op.GeoRadiusOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/georadius-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$georadiusWithOptionsAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Double, kotlin.Double, kotlin.Double, io.vertx.redis.op.GeoUnit, io.vertx.redis.op.GeoRadiusOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/georadius-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$georadiusbymemberAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.Double, io.vertx.redis.op.GeoUnit)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/georadiusbymember-await.html
$dokka.location:io.vertx.kotlin.redis$georadiusbymemberAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.Double, io.vertx.redis.op.GeoUnit)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/georadiusbymember-await.html
$dokka.location:io.vertx.kotlin.redis$georadiusbymemberWithOptionsAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.Double, io.vertx.redis.op.GeoUnit, io.vertx.redis.op.GeoRadiusOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/georadiusbymember-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$georadiusbymemberWithOptionsAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.Double, io.vertx.redis.op.GeoUnit, io.vertx.redis.op.GeoRadiusOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/georadiusbymember-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$getAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/get-await.html
$dokka.location:io.vertx.kotlin.redis$getAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/get-await.html
$dokka.location:io.vertx.kotlin.redis$getBinaryAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/get-binary-await.html
$dokka.location:io.vertx.kotlin.redis$getBinaryAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/get-binary-await.html
$dokka.location:io.vertx.kotlin.redis$getbitAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/getbit-await.html
$dokka.location:io.vertx.kotlin.redis$getbitAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/getbit-await.html
$dokka.location:io.vertx.kotlin.redis$getrangeAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/getrange-await.html
$dokka.location:io.vertx.kotlin.redis$getrangeAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/getrange-await.html
$dokka.location:io.vertx.kotlin.redis$getsetAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/getset-await.html
$dokka.location:io.vertx.kotlin.redis$getsetAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/getset-await.html
$dokka.location:io.vertx.kotlin.redis$hdelAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hdel-await.html
$dokka.location:io.vertx.kotlin.redis$hdelAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hdel-await.html
$dokka.location:io.vertx.kotlin.redis$hdelManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hdel-many-await.html
$dokka.location:io.vertx.kotlin.redis$hdelManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hdel-many-await.html
$dokka.location:io.vertx.kotlin.redis$hexistsAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hexists-await.html
$dokka.location:io.vertx.kotlin.redis$hexistsAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hexists-await.html
$dokka.location:io.vertx.kotlin.redis$hgetAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hget-await.html
$dokka.location:io.vertx.kotlin.redis$hgetAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hget-await.html
$dokka.location:io.vertx.kotlin.redis$hgetallAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hgetall-await.html
$dokka.location:io.vertx.kotlin.redis$hgetallAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hgetall-await.html
$dokka.location:io.vertx.kotlin.redis$hincrbyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hincrby-await.html
$dokka.location:io.vertx.kotlin.redis$hincrbyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hincrby-await.html
$dokka.location:io.vertx.kotlin.redis$hincrbyfloatAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.Double)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hincrbyfloat-await.html
$dokka.location:io.vertx.kotlin.redis$hincrbyfloatAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.Double)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hincrbyfloat-await.html
$dokka.location:io.vertx.kotlin.redis$hkeysAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hkeys-await.html
$dokka.location:io.vertx.kotlin.redis$hkeysAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hkeys-await.html
$dokka.location:io.vertx.kotlin.redis$hlenAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hlen-await.html
$dokka.location:io.vertx.kotlin.redis$hlenAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hlen-await.html
$dokka.location:io.vertx.kotlin.redis$hmgetAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hmget-await.html
$dokka.location:io.vertx.kotlin.redis$hmgetAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hmget-await.html
$dokka.location:io.vertx.kotlin.redis$hmsetAwait(io.vertx.redis.RedisClient, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hmset-await.html
$dokka.location:io.vertx.kotlin.redis$hmsetAwait(io.vertx.redis.RedisTransaction, kotlin.String, io.vertx.core.json.JsonObject)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hmset-await.html
$dokka.location:io.vertx.kotlin.redis$hscanAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, io.vertx.redis.op.ScanOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hscan-await.html
$dokka.location:io.vertx.kotlin.redis$hscanAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, io.vertx.redis.op.ScanOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hscan-await.html
$dokka.location:io.vertx.kotlin.redis$hsetAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hset-await.html
$dokka.location:io.vertx.kotlin.redis$hsetAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hset-await.html
$dokka.location:io.vertx.kotlin.redis$hsetnxAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hsetnx-await.html
$dokka.location:io.vertx.kotlin.redis$hsetnxAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hsetnx-await.html
$dokka.location:io.vertx.kotlin.redis$hstrlenAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hstrlen-await.html
$dokka.location:io.vertx.kotlin.redis$hvalsAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/hvals-await.html
$dokka.location:io.vertx.kotlin.redis$hvalsAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/hvals-await.html
$dokka.location:io.vertx.kotlin.redis$incrAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/incr-await.html
$dokka.location:io.vertx.kotlin.redis$incrAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/incr-await.html
$dokka.location:io.vertx.kotlin.redis$incrbyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/incrby-await.html
$dokka.location:io.vertx.kotlin.redis$incrbyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/incrby-await.html
$dokka.location:io.vertx.kotlin.redis$incrbyfloatAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Double)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/incrbyfloat-await.html
$dokka.location:io.vertx.kotlin.redis$incrbyfloatAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Double)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/incrbyfloat-await.html
$dokka.location:io.vertx.kotlin.redis$infoAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/info-await.html
$dokka.location:io.vertx.kotlin.redis$infoAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/info-await.html
$dokka.location:io.vertx.kotlin.redis$infoSectionAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/info-section-await.html
$dokka.location:io.vertx.kotlin.redis$infoSectionAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/info-section-await.html
$dokka.location:io.vertx.kotlin.redis$keysAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/keys-await.html
$dokka.location:io.vertx.kotlin.redis$keysAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/keys-await.html
$dokka.location:io.vertx.kotlin.redis$lastsaveAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/lastsave-await.html
$dokka.location:io.vertx.kotlin.redis$lastsaveAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/lastsave-await.html
$dokka.location:io.vertx.kotlin.redis$lindexAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/lindex-await.html
$dokka.location:io.vertx.kotlin.redis$lindexAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/lindex-await.html
$dokka.location:io.vertx.kotlin.redis$linsertAwait(io.vertx.redis.RedisClient, kotlin.String, io.vertx.redis.op.InsertOptions, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/linsert-await.html
$dokka.location:io.vertx.kotlin.redis$linsertAwait(io.vertx.redis.RedisTransaction, kotlin.String, io.vertx.redis.op.InsertOptions, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/linsert-await.html
$dokka.location:io.vertx.kotlin.redis$llenAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/llen-await.html
$dokka.location:io.vertx.kotlin.redis$llenAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/llen-await.html
$dokka.location:io.vertx.kotlin.redis$lpopAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/lpop-await.html
$dokka.location:io.vertx.kotlin.redis$lpopAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/lpop-await.html
$dokka.location:io.vertx.kotlin.redis$lpushAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/lpush-await.html
$dokka.location:io.vertx.kotlin.redis$lpushAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/lpush-await.html
$dokka.location:io.vertx.kotlin.redis$lpushManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/lpush-many-await.html
$dokka.location:io.vertx.kotlin.redis$lpushManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/lpush-many-await.html
$dokka.location:io.vertx.kotlin.redis$lpushxAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/lpushx-await.html
$dokka.location:io.vertx.kotlin.redis$lpushxAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/lpushx-await.html
$dokka.location:io.vertx.kotlin.redis$lrangeAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/lrange-await.html
$dokka.location:io.vertx.kotlin.redis$lrangeAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/lrange-await.html
$dokka.location:io.vertx.kotlin.redis$lremAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/lrem-await.html
$dokka.location:io.vertx.kotlin.redis$lremAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/lrem-await.html
$dokka.location:io.vertx.kotlin.redis$lsetAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/lset-await.html
$dokka.location:io.vertx.kotlin.redis$lsetAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/lset-await.html
$dokka.location:io.vertx.kotlin.redis$ltrimAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/ltrim-await.html
$dokka.location:io.vertx.kotlin.redis$ltrimAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/ltrim-await.html
$dokka.location:io.vertx.kotlin.redis$mgetAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/mget-await.html
$dokka.location:io.vertx.kotlin.redis$mgetAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/mget-await.html
$dokka.location:io.vertx.kotlin.redis$mgetManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/mget-many-await.html
$dokka.location:io.vertx.kotlin.redis$mgetManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/mget-many-await.html
$dokka.location:io.vertx.kotlin.redis$migrateAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int, kotlin.String, kotlin.Int, kotlin.Long, io.vertx.redis.op.MigrateOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/migrate-await.html
$dokka.location:io.vertx.kotlin.redis$migrateAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int, kotlin.String, kotlin.Int, kotlin.Long, io.vertx.redis.op.MigrateOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/migrate-await.html
$dokka.location:io.vertx.kotlin.redis$monitorAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/monitor-await.html
$dokka.location:io.vertx.kotlin.redis$monitorAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/monitor-await.html
$dokka.location:io.vertx.kotlin.redis$moveAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/move-await.html
$dokka.location:io.vertx.kotlin.redis$moveAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/move-await.html
$dokka.location:io.vertx.kotlin.redis$msetAwait(io.vertx.redis.RedisClient, io.vertx.core.json.JsonObject)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/mset-await.html
$dokka.location:io.vertx.kotlin.redis$msetAwait(io.vertx.redis.RedisTransaction, io.vertx.core.json.JsonObject)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/mset-await.html
$dokka.location:io.vertx.kotlin.redis$msetnxAwait(io.vertx.redis.RedisClient, io.vertx.core.json.JsonObject)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/msetnx-await.html
$dokka.location:io.vertx.kotlin.redis$msetnxAwait(io.vertx.redis.RedisTransaction, io.vertx.core.json.JsonObject)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/msetnx-await.html
$dokka.location:io.vertx.kotlin.redis$multiAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/multi-await.html
$dokka.location:io.vertx.kotlin.redis$objectAwait(io.vertx.redis.RedisClient, kotlin.String, io.vertx.redis.op.ObjectCmd)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/object-await.html
$dokka.location:io.vertx.kotlin.redis$objectAwait(io.vertx.redis.RedisTransaction, kotlin.String, io.vertx.redis.op.ObjectCmd)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/object-await.html
$dokka.location:io.vertx.kotlin.redis$persistAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/persist-await.html
$dokka.location:io.vertx.kotlin.redis$persistAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/persist-await.html
$dokka.location:io.vertx.kotlin.redis$pexpireAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/pexpire-await.html
$dokka.location:io.vertx.kotlin.redis$pexpireAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/pexpire-await.html
$dokka.location:io.vertx.kotlin.redis$pexpireatAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/pexpireat-await.html
$dokka.location:io.vertx.kotlin.redis$pexpireatAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/pexpireat-await.html
$dokka.location:io.vertx.kotlin.redis$pfaddAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/pfadd-await.html
$dokka.location:io.vertx.kotlin.redis$pfaddAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/pfadd-await.html
$dokka.location:io.vertx.kotlin.redis$pfaddManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/pfadd-many-await.html
$dokka.location:io.vertx.kotlin.redis$pfaddManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/pfadd-many-await.html
$dokka.location:io.vertx.kotlin.redis$pfcountAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/pfcount-await.html
$dokka.location:io.vertx.kotlin.redis$pfcountAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/pfcount-await.html
$dokka.location:io.vertx.kotlin.redis$pfcountManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/pfcount-many-await.html
$dokka.location:io.vertx.kotlin.redis$pfcountManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/pfcount-many-await.html
$dokka.location:io.vertx.kotlin.redis$pfmergeAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/pfmerge-await.html
$dokka.location:io.vertx.kotlin.redis$pfmergeAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/pfmerge-await.html
$dokka.location:io.vertx.kotlin.redis$pingAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/ping-await.html
$dokka.location:io.vertx.kotlin.redis$pingAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/ping-await.html
$dokka.location:io.vertx.kotlin.redis$psetexAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/psetex-await.html
$dokka.location:io.vertx.kotlin.redis$psetexAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/psetex-await.html
$dokka.location:io.vertx.kotlin.redis$psubscribeAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/psubscribe-await.html
$dokka.location:io.vertx.kotlin.redis$psubscribeAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/psubscribe-await.html
$dokka.location:io.vertx.kotlin.redis$psubscribeManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/psubscribe-many-await.html
$dokka.location:io.vertx.kotlin.redis$psubscribeManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/psubscribe-many-await.html
$dokka.location:io.vertx.kotlin.redis$pttlAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/pttl-await.html
$dokka.location:io.vertx.kotlin.redis$pttlAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/pttl-await.html
$dokka.location:io.vertx.kotlin.redis$publishAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/publish-await.html
$dokka.location:io.vertx.kotlin.redis$publishAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/publish-await.html
$dokka.location:io.vertx.kotlin.redis$pubsubChannelsAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/pubsub-channels-await.html
$dokka.location:io.vertx.kotlin.redis$pubsubChannelsAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/pubsub-channels-await.html
$dokka.location:io.vertx.kotlin.redis$pubsubNumpatAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/pubsub-numpat-await.html
$dokka.location:io.vertx.kotlin.redis$pubsubNumpatAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/pubsub-numpat-await.html
$dokka.location:io.vertx.kotlin.redis$pubsubNumsubAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/pubsub-numsub-await.html
$dokka.location:io.vertx.kotlin.redis$pubsubNumsubAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/pubsub-numsub-await.html
$dokka.location:io.vertx.kotlin.redis$punsubscribeAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/punsubscribe-await.html
$dokka.location:io.vertx.kotlin.redis$punsubscribeAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/punsubscribe-await.html
$dokka.location:io.vertx.kotlin.redis$randomkeyAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/randomkey-await.html
$dokka.location:io.vertx.kotlin.redis$randomkeyAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/randomkey-await.html
$dokka.location:io.vertx.kotlin.redis$renameAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/rename-await.html
$dokka.location:io.vertx.kotlin.redis$renameAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/rename-await.html
$dokka.location:io.vertx.kotlin.redis$renamenxAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/renamenx-await.html
$dokka.location:io.vertx.kotlin.redis$renamenxAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/renamenx-await.html
$dokka.location:io.vertx.kotlin.redis$restoreAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/restore-await.html
$dokka.location:io.vertx.kotlin.redis$restoreAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/restore-await.html
$dokka.location:io.vertx.kotlin.redis$roleAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/role-await.html
$dokka.location:io.vertx.kotlin.redis$roleAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/role-await.html
$dokka.location:io.vertx.kotlin.redis$rpopAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/rpop-await.html
$dokka.location:io.vertx.kotlin.redis$rpopAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/rpop-await.html
$dokka.location:io.vertx.kotlin.redis$rpoplpushAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/rpoplpush-await.html
$dokka.location:io.vertx.kotlin.redis$rpoplpushAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/rpoplpush-await.html
$dokka.location:io.vertx.kotlin.redis$rpushAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/rpush-await.html
$dokka.location:io.vertx.kotlin.redis$rpushAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/rpush-await.html
$dokka.location:io.vertx.kotlin.redis$rpushManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/rpush-many-await.html
$dokka.location:io.vertx.kotlin.redis$rpushManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/rpush-many-await.html
$dokka.location:io.vertx.kotlin.redis$rpushxAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/rpushx-await.html
$dokka.location:io.vertx.kotlin.redis$rpushxAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/rpushx-await.html
$dokka.location:io.vertx.kotlin.redis$saddAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sadd-await.html
$dokka.location:io.vertx.kotlin.redis$saddAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sadd-await.html
$dokka.location:io.vertx.kotlin.redis$saddManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sadd-many-await.html
$dokka.location:io.vertx.kotlin.redis$saddManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sadd-many-await.html
$dokka.location:io.vertx.kotlin.redis$saveAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/save-await.html
$dokka.location:io.vertx.kotlin.redis$saveAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/save-await.html
$dokka.location:io.vertx.kotlin.redis$scanAwait(io.vertx.redis.RedisClient, kotlin.String, io.vertx.redis.op.ScanOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/scan-await.html
$dokka.location:io.vertx.kotlin.redis$scanAwait(io.vertx.redis.RedisTransaction, kotlin.String, io.vertx.redis.op.ScanOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/scan-await.html
$dokka.location:io.vertx.kotlin.redis$scardAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/scard-await.html
$dokka.location:io.vertx.kotlin.redis$scardAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/scard-await.html
$dokka.location:io.vertx.kotlin.redis$scriptDebugAwait(io.vertx.redis.RedisClient, io.vertx.redis.op.ScriptDebugOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/script-debug-await.html
$dokka.location:io.vertx.kotlin.redis$scriptExistsAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/script-exists-await.html
$dokka.location:io.vertx.kotlin.redis$scriptExistsAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/script-exists-await.html
$dokka.location:io.vertx.kotlin.redis$scriptExistsManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/script-exists-many-await.html
$dokka.location:io.vertx.kotlin.redis$scriptExistsManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/script-exists-many-await.html
$dokka.location:io.vertx.kotlin.redis$scriptFlushAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/script-flush-await.html
$dokka.location:io.vertx.kotlin.redis$scriptFlushAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/script-flush-await.html
$dokka.location:io.vertx.kotlin.redis$scriptKillAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/script-kill-await.html
$dokka.location:io.vertx.kotlin.redis$scriptKillAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/script-kill-await.html
$dokka.location:io.vertx.kotlin.redis$scriptLoadAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/script-load-await.html
$dokka.location:io.vertx.kotlin.redis$scriptLoadAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/script-load-await.html
$dokka.location:io.vertx.kotlin.redis$sdiffAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sdiff-await.html
$dokka.location:io.vertx.kotlin.redis$sdiffAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sdiff-await.html
$dokka.location:io.vertx.kotlin.redis$sdiffstoreAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sdiffstore-await.html
$dokka.location:io.vertx.kotlin.redis$sdiffstoreAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sdiffstore-await.html
$dokka.location:io.vertx.kotlin.redis$selectAwait(io.vertx.redis.RedisClient, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/select-await.html
$dokka.location:io.vertx.kotlin.redis$selectAwait(io.vertx.redis.RedisTransaction, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/select-await.html
$dokka.location:io.vertx.kotlin.redis$setAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/set-await.html
$dokka.location:io.vertx.kotlin.redis$setAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/set-await.html
$dokka.location:io.vertx.kotlin.redis$setBinaryAwait(io.vertx.redis.RedisClient, kotlin.String, io.vertx.core.buffer.Buffer)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/set-binary-await.html
$dokka.location:io.vertx.kotlin.redis$setBinaryAwait(io.vertx.redis.RedisTransaction, kotlin.String, io.vertx.core.buffer.Buffer)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/set-binary-await.html
$dokka.location:io.vertx.kotlin.redis$setBinaryWithOptionsAwait(io.vertx.redis.RedisClient, kotlin.String, io.vertx.core.buffer.Buffer, io.vertx.redis.op.SetOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/set-binary-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$setBinaryWithOptionsAwait(io.vertx.redis.RedisTransaction, kotlin.String, io.vertx.core.buffer.Buffer, io.vertx.redis.op.SetOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/set-binary-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$setWithOptionsAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, io.vertx.redis.op.SetOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/set-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$setWithOptionsAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, io.vertx.redis.op.SetOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/set-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$setbitAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/setbit-await.html
$dokka.location:io.vertx.kotlin.redis$setbitAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/setbit-await.html
$dokka.location:io.vertx.kotlin.redis$setexAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/setex-await.html
$dokka.location:io.vertx.kotlin.redis$setexAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/setex-await.html
$dokka.location:io.vertx.kotlin.redis$setnxAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/setnx-await.html
$dokka.location:io.vertx.kotlin.redis$setnxAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/setnx-await.html
$dokka.location:io.vertx.kotlin.redis$setrangeAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/setrange-await.html
$dokka.location:io.vertx.kotlin.redis$setrangeAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/setrange-await.html
$dokka.location:io.vertx.kotlin.redis$sinterAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sinter-await.html
$dokka.location:io.vertx.kotlin.redis$sinterAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sinter-await.html
$dokka.location:io.vertx.kotlin.redis$sinterstoreAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sinterstore-await.html
$dokka.location:io.vertx.kotlin.redis$sinterstoreAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sinterstore-await.html
$dokka.location:io.vertx.kotlin.redis$sismemberAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sismember-await.html
$dokka.location:io.vertx.kotlin.redis$sismemberAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sismember-await.html
$dokka.location:io.vertx.kotlin.redis$slaveofAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/slaveof-await.html
$dokka.location:io.vertx.kotlin.redis$slaveofAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/slaveof-await.html
$dokka.location:io.vertx.kotlin.redis$slaveofNooneAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/slaveof-noone-await.html
$dokka.location:io.vertx.kotlin.redis$slaveofNooneAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/slaveof-noone-await.html
$dokka.location:io.vertx.kotlin.redis$slowlogGetAwait(io.vertx.redis.RedisClient, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/slowlog-get-await.html
$dokka.location:io.vertx.kotlin.redis$slowlogGetAwait(io.vertx.redis.RedisTransaction, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/slowlog-get-await.html
$dokka.location:io.vertx.kotlin.redis$slowlogLenAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/slowlog-len-await.html
$dokka.location:io.vertx.kotlin.redis$slowlogLenAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/slowlog-len-await.html
$dokka.location:io.vertx.kotlin.redis$slowlogResetAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/slowlog-reset-await.html
$dokka.location:io.vertx.kotlin.redis$slowlogResetAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/slowlog-reset-await.html
$dokka.location:io.vertx.kotlin.redis$smembersAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/smembers-await.html
$dokka.location:io.vertx.kotlin.redis$smembersAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/smembers-await.html
$dokka.location:io.vertx.kotlin.redis$smoveAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/smove-await.html
$dokka.location:io.vertx.kotlin.redis$smoveAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/smove-await.html
$dokka.location:io.vertx.kotlin.redis$sortAwait(io.vertx.redis.RedisClient, kotlin.String, io.vertx.redis.op.SortOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sort-await.html
$dokka.location:io.vertx.kotlin.redis$sortAwait(io.vertx.redis.RedisTransaction, kotlin.String, io.vertx.redis.op.SortOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sort-await.html
$dokka.location:io.vertx.kotlin.redis$spopAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/spop-await.html
$dokka.location:io.vertx.kotlin.redis$spopAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/spop-await.html
$dokka.location:io.vertx.kotlin.redis$spopManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/spop-many-await.html
$dokka.location:io.vertx.kotlin.redis$spopManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/spop-many-await.html
$dokka.location:io.vertx.kotlin.redis$srandmemberAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/srandmember-await.html
$dokka.location:io.vertx.kotlin.redis$srandmemberAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/srandmember-await.html
$dokka.location:io.vertx.kotlin.redis$srandmemberCountAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/srandmember-count-await.html
$dokka.location:io.vertx.kotlin.redis$srandmemberCountAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/srandmember-count-await.html
$dokka.location:io.vertx.kotlin.redis$sremAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/srem-await.html
$dokka.location:io.vertx.kotlin.redis$sremAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/srem-await.html
$dokka.location:io.vertx.kotlin.redis$sremManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/srem-many-await.html
$dokka.location:io.vertx.kotlin.redis$sremManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/srem-many-await.html
$dokka.location:io.vertx.kotlin.redis$sscanAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, io.vertx.redis.op.ScanOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sscan-await.html
$dokka.location:io.vertx.kotlin.redis$sscanAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, io.vertx.redis.op.ScanOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sscan-await.html
$dokka.location:io.vertx.kotlin.redis$strlenAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/strlen-await.html
$dokka.location:io.vertx.kotlin.redis$strlenAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/strlen-await.html
$dokka.location:io.vertx.kotlin.redis$subscribeAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/subscribe-await.html
$dokka.location:io.vertx.kotlin.redis$subscribeAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/subscribe-await.html
$dokka.location:io.vertx.kotlin.redis$subscribeManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/subscribe-many-await.html
$dokka.location:io.vertx.kotlin.redis$subscribeManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/subscribe-many-await.html
$dokka.location:io.vertx.kotlin.redis$sunionAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sunion-await.html
$dokka.location:io.vertx.kotlin.redis$sunionAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sunion-await.html
$dokka.location:io.vertx.kotlin.redis$sunionstoreAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sunionstore-await.html
$dokka.location:io.vertx.kotlin.redis$sunionstoreAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sunionstore-await.html
$dokka.location:io.vertx.kotlin.redis$swapdbAwait(io.vertx.redis.RedisClient, kotlin.Int, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/swapdb-await.html
$dokka.location:io.vertx.kotlin.redis$swapdbAwait(io.vertx.redis.RedisTransaction, kotlin.Int, kotlin.Int)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/swapdb-await.html
$dokka.location:io.vertx.kotlin.redis$syncAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/sync-await.html
$dokka.location:io.vertx.kotlin.redis$syncAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/sync-await.html
$dokka.location:io.vertx.kotlin.redis$timeAwait(io.vertx.redis.RedisClient)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/time-await.html
$dokka.location:io.vertx.kotlin.redis$timeAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/time-await.html
$dokka.location:io.vertx.kotlin.redis$touchAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/touch-await.html
$dokka.location:io.vertx.kotlin.redis$touchManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/touch-many-await.html
$dokka.location:io.vertx.kotlin.redis$ttlAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/ttl-await.html
$dokka.location:io.vertx.kotlin.redis$ttlAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/ttl-await.html
$dokka.location:io.vertx.kotlin.redis$typeAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/type-await.html
$dokka.location:io.vertx.kotlin.redis$typeAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/type-await.html
$dokka.location:io.vertx.kotlin.redis$unlinkAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/unlink-await.html
$dokka.location:io.vertx.kotlin.redis$unlinkAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/unlink-await.html
$dokka.location:io.vertx.kotlin.redis$unlinkManyAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/unlink-many-await.html
$dokka.location:io.vertx.kotlin.redis$unlinkManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/unlink-many-await.html
$dokka.location:io.vertx.kotlin.redis$unsubscribeAwait(io.vertx.redis.RedisClient, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/unsubscribe-await.html
$dokka.location:io.vertx.kotlin.redis$unsubscribeAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/unsubscribe-await.html
$dokka.location:io.vertx.kotlin.redis$unwatchAwait(io.vertx.redis.RedisTransaction)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/unwatch-await.html
$dokka.location:io.vertx.kotlin.redis$waitAwait(io.vertx.redis.RedisClient, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/wait-await.html
$dokka.location:io.vertx.kotlin.redis$waitAwait(io.vertx.redis.RedisTransaction, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/wait-await.html
$dokka.location:io.vertx.kotlin.redis$watchAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/watch-await.html
$dokka.location:io.vertx.kotlin.redis$watchManyAwait(io.vertx.redis.RedisTransaction, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/watch-many-await.html
$dokka.location:io.vertx.kotlin.redis$zaddAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Double, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zadd-await.html
$dokka.location:io.vertx.kotlin.redis$zaddAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Double, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zadd-await.html
$dokka.location:io.vertx.kotlin.redis$zaddManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.Map((kotlin.String, kotlin.Double)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zadd-many-await.html
$dokka.location:io.vertx.kotlin.redis$zaddManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.Map((kotlin.String, kotlin.Double)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zadd-many-await.html
$dokka.location:io.vertx.kotlin.redis$zcardAwait(io.vertx.redis.RedisClient, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zcard-await.html
$dokka.location:io.vertx.kotlin.redis$zcardAwait(io.vertx.redis.RedisTransaction, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zcard-await.html
$dokka.location:io.vertx.kotlin.redis$zcountAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Double, kotlin.Double)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zcount-await.html
$dokka.location:io.vertx.kotlin.redis$zcountAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Double, kotlin.Double)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zcount-await.html
$dokka.location:io.vertx.kotlin.redis$zincrbyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Double, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zincrby-await.html
$dokka.location:io.vertx.kotlin.redis$zincrbyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Double, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zincrby-await.html
$dokka.location:io.vertx.kotlin.redis$zinterstoreAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)), io.vertx.redis.op.AggregateOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zinterstore-await.html
$dokka.location:io.vertx.kotlin.redis$zinterstoreAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)), io.vertx.redis.op.AggregateOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zinterstore-await.html
$dokka.location:io.vertx.kotlin.redis$zinterstoreWeighedAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.Map((kotlin.String, kotlin.Double)), io.vertx.redis.op.AggregateOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zinterstore-weighed-await.html
$dokka.location:io.vertx.kotlin.redis$zinterstoreWeighedAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.Map((kotlin.String, kotlin.Double)), io.vertx.redis.op.AggregateOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zinterstore-weighed-await.html
$dokka.location:io.vertx.kotlin.redis$zlexcountAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zlexcount-await.html
$dokka.location:io.vertx.kotlin.redis$zlexcountAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zlexcount-await.html
$dokka.location:io.vertx.kotlin.redis$zrangeAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zrange-await.html
$dokka.location:io.vertx.kotlin.redis$zrangeAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zrange-await.html
$dokka.location:io.vertx.kotlin.redis$zrangeWithOptionsAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.Long, io.vertx.redis.op.RangeOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zrange-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$zrangeWithOptionsAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.Long, io.vertx.redis.op.RangeOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zrange-with-options-await.html
$dokka.location:io.vertx.kotlin.redis$zrangebylexAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String, io.vertx.redis.op.LimitOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zrangebylex-await.html
$dokka.location:io.vertx.kotlin.redis$zrangebylexAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String, io.vertx.redis.op.LimitOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zrangebylex-await.html
$dokka.location:io.vertx.kotlin.redis$zrangebyscoreAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String, io.vertx.redis.op.RangeLimitOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zrangebyscore-await.html
$dokka.location:io.vertx.kotlin.redis$zrangebyscoreAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String, io.vertx.redis.op.RangeLimitOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zrangebyscore-await.html
$dokka.location:io.vertx.kotlin.redis$zrankAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zrank-await.html
$dokka.location:io.vertx.kotlin.redis$zrankAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zrank-await.html
$dokka.location:io.vertx.kotlin.redis$zremAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zrem-await.html
$dokka.location:io.vertx.kotlin.redis$zremAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zrem-await.html
$dokka.location:io.vertx.kotlin.redis$zremManyAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zrem-many-await.html
$dokka.location:io.vertx.kotlin.redis$zremManyAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)))io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zrem-many-await.html
$dokka.location:io.vertx.kotlin.redis$zremrangebylexAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zremrangebylex-await.html
$dokka.location:io.vertx.kotlin.redis$zremrangebylexAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zremrangebylex-await.html
$dokka.location:io.vertx.kotlin.redis$zremrangebyrankAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zremrangebyrank-await.html
$dokka.location:io.vertx.kotlin.redis$zremrangebyrankAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.Long)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zremrangebyrank-await.html
$dokka.location:io.vertx.kotlin.redis$zremrangebyscoreAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zremrangebyscore-await.html
$dokka.location:io.vertx.kotlin.redis$zremrangebyscoreAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zremrangebyscore-await.html
$dokka.location:io.vertx.kotlin.redis$zrevrangeAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.Long, kotlin.Long, io.vertx.redis.op.RangeOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zrevrange-await.html
$dokka.location:io.vertx.kotlin.redis$zrevrangeAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.Long, kotlin.Long, io.vertx.redis.op.RangeOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zrevrange-await.html
$dokka.location:io.vertx.kotlin.redis$zrevrangebylexAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String, io.vertx.redis.op.LimitOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zrevrangebylex-await.html
$dokka.location:io.vertx.kotlin.redis$zrevrangebylexAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String, io.vertx.redis.op.LimitOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zrevrangebylex-await.html
$dokka.location:io.vertx.kotlin.redis$zrevrangebyscoreAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, kotlin.String, io.vertx.redis.op.RangeLimitOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zrevrangebyscore-await.html
$dokka.location:io.vertx.kotlin.redis$zrevrangebyscoreAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, kotlin.String, io.vertx.redis.op.RangeLimitOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zrevrangebyscore-await.html
$dokka.location:io.vertx.kotlin.redis$zrevrankAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zrevrank-await.html
$dokka.location:io.vertx.kotlin.redis$zrevrankAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zrevrank-await.html
$dokka.location:io.vertx.kotlin.redis$zscanAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String, io.vertx.redis.op.ScanOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zscan-await.html
$dokka.location:io.vertx.kotlin.redis$zscanAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String, io.vertx.redis.op.ScanOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zscan-await.html
$dokka.location:io.vertx.kotlin.redis$zscoreAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zscore-await.html
$dokka.location:io.vertx.kotlin.redis$zscoreAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.String)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zscore-await.html
$dokka.location:io.vertx.kotlin.redis$zunionstoreAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.List((kotlin.String)), io.vertx.redis.op.AggregateOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zunionstore-await.html
$dokka.location:io.vertx.kotlin.redis$zunionstoreAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.List((kotlin.String)), io.vertx.redis.op.AggregateOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zunionstore-await.html
$dokka.location:io.vertx.kotlin.redis$zunionstoreWeighedAwait(io.vertx.redis.RedisClient, kotlin.String, kotlin.collections.Map((kotlin.String, kotlin.Double)), io.vertx.redis.op.AggregateOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-client/zunionstore-weighed-await.html
$dokka.location:io.vertx.kotlin.redis$zunionstoreWeighedAwait(io.vertx.redis.RedisTransaction, kotlin.String, kotlin.collections.Map((kotlin.String, kotlin.Double)), io.vertx.redis.op.AggregateOptions)io.vertx.kotlin.redis/io.vertx.redis.-redis-transaction/zunionstore-weighed-await.html
$dokka.location:io.vertx.kotlin.redis.sentinel$ckquorumAwait(io.vertx.redis.sentinel.RedisSentinel, kotlin.String)io.vertx.kotlin.redis.sentinel/io.vertx.redis.sentinel.-redis-sentinel/ckquorum-await.html
$dokka.location:io.vertx.kotlin.redis.sentinel$closeAwait(io.vertx.redis.sentinel.RedisSentinel)io.vertx.kotlin.redis.sentinel/io.vertx.redis.sentinel.-redis-sentinel/close-await.html
$dokka.location:io.vertx.kotlin.redis.sentinel$failoverAwait(io.vertx.redis.sentinel.RedisSentinel, kotlin.String)io.vertx.kotlin.redis.sentinel/io.vertx.redis.sentinel.-redis-sentinel/failover-await.html
$dokka.location:io.vertx.kotlin.redis.sentinel$flushConfigAwait(io.vertx.redis.sentinel.RedisSentinel)io.vertx.kotlin.redis.sentinel/io.vertx.redis.sentinel.-redis-sentinel/flush-config-await.html
$dokka.location:io.vertx.kotlin.redis.sentinel$getMasterAddrByNameAwait(io.vertx.redis.sentinel.RedisSentinel, kotlin.String)io.vertx.kotlin.redis.sentinel/io.vertx.redis.sentinel.-redis-sentinel/get-master-addr-by-name-await.html
$dokka.location:io.vertx.kotlin.redis.sentinel$masterAwait(io.vertx.redis.sentinel.RedisSentinel, kotlin.String)io.vertx.kotlin.redis.sentinel/io.vertx.redis.sentinel.-redis-sentinel/master-await.html
$dokka.location:io.vertx.kotlin.redis.sentinel$mastersAwait(io.vertx.redis.sentinel.RedisSentinel)io.vertx.kotlin.redis.sentinel/io.vertx.redis.sentinel.-redis-sentinel/masters-await.html
$dokka.location:io.vertx.kotlin.redis.sentinel$resetAwait(io.vertx.redis.sentinel.RedisSentinel, kotlin.String)io.vertx.kotlin.redis.sentinel/io.vertx.redis.sentinel.-redis-sentinel/reset-await.html
$dokka.location:io.vertx.kotlin.redis.sentinel$sentinelsAwait(io.vertx.redis.sentinel.RedisSentinel, kotlin.String)io.vertx.kotlin.redis.sentinel/io.vertx.redis.sentinel.-redis-sentinel/sentinels-await.html
$dokka.location:io.vertx.kotlin.redis.sentinel$slavesAwait(io.vertx.redis.sentinel.RedisSentinel, kotlin.String)io.vertx.kotlin.redis.sentinel/io.vertx.redis.sentinel.-redis-sentinel/slaves-await.html
$dokka.location:io.vertx.kotlin.servicediscovery$getRecordAwait(io.vertx.servicediscovery.ServiceDiscovery, io.vertx.core.json.JsonObject)io.vertx.kotlin.servicediscovery/io.vertx.servicediscovery.-service-discovery/get-record-await.html
$dokka.location:io.vertx.kotlin.servicediscovery$getRecordAwait(io.vertx.servicediscovery.ServiceDiscovery, java.util.function.Function((io.vertx.servicediscovery.Record, kotlin.Boolean)))io.vertx.kotlin.servicediscovery/io.vertx.servicediscovery.-service-discovery/get-record-await.html
$dokka.location:io.vertx.kotlin.servicediscovery$getRecordAwait(io.vertx.servicediscovery.ServiceDiscovery, java.util.function.Function((io.vertx.servicediscovery.Record, kotlin.Boolean)), kotlin.Boolean)io.vertx.kotlin.servicediscovery/io.vertx.servicediscovery.-service-discovery/get-record-await.html
$dokka.location:io.vertx.kotlin.servicediscovery$getRecordsAwait(io.vertx.servicediscovery.ServiceDiscovery, io.vertx.core.json.JsonObject)io.vertx.kotlin.servicediscovery/io.vertx.servicediscovery.-service-discovery/get-records-await.html
$dokka.location:io.vertx.kotlin.servicediscovery$getRecordsAwait(io.vertx.servicediscovery.ServiceDiscovery, java.util.function.Function((io.vertx.servicediscovery.Record, kotlin.Boolean)))io.vertx.kotlin.servicediscovery/io.vertx.servicediscovery.-service-discovery/get-records-await.html
$dokka.location:io.vertx.kotlin.servicediscovery$getRecordsAwait(io.vertx.servicediscovery.ServiceDiscovery, java.util.function.Function((io.vertx.servicediscovery.Record, kotlin.Boolean)), kotlin.Boolean)io.vertx.kotlin.servicediscovery/io.vertx.servicediscovery.-service-discovery/get-records-await.html
$dokka.location:io.vertx.kotlin.servicediscovery$publishAwait(io.vertx.servicediscovery.ServiceDiscovery, io.vertx.servicediscovery.Record)io.vertx.kotlin.servicediscovery/io.vertx.servicediscovery.-service-discovery/publish-await.html
$dokka.location:io.vertx.kotlin.servicediscovery$unpublishAwait(io.vertx.servicediscovery.ServiceDiscovery, kotlin.String)io.vertx.kotlin.servicediscovery/io.vertx.servicediscovery.-service-discovery/unpublish-await.html
$dokka.location:io.vertx.kotlin.servicediscovery$updateAwait(io.vertx.servicediscovery.ServiceDiscovery, io.vertx.servicediscovery.Record)io.vertx.kotlin.servicediscovery/io.vertx.servicediscovery.-service-discovery/update-await.html
$dokka.location:io.vertx.kotlin.servicediscovery.spi$publishAwait(io.vertx.servicediscovery.spi.ServicePublisher, io.vertx.servicediscovery.Record)io.vertx.kotlin.servicediscovery.spi/io.vertx.servicediscovery.spi.-service-publisher/publish-await.html
$dokka.location:io.vertx.kotlin.servicediscovery.spi$unpublishAwait(io.vertx.servicediscovery.spi.ServicePublisher, kotlin.String)io.vertx.kotlin.servicediscovery.spi/io.vertx.servicediscovery.spi.-service-publisher/unpublish-await.html
$dokka.location:io.vertx.kotlin.servicediscovery.spi$updateAwait(io.vertx.servicediscovery.spi.ServicePublisher, io.vertx.servicediscovery.Record)io.vertx.kotlin.servicediscovery.spi/io.vertx.servicediscovery.spi.-service-publisher/update-await.html
io.vertx.kotlin.amqpbridge
io.vertx.kotlin.cassandra
io.vertx.kotlin.circuitbreaker
io.vertx.kotlin.config
io.vertx.kotlin.core
io.vertx.kotlin.core.buffer
io.vertx.kotlin.core.cli
io.vertx.kotlin.core.datagram
io.vertx.kotlin.core.dns
io.vertx.kotlin.core.eventbus
io.vertx.kotlin.core.file
io.vertx.kotlin.core.http
io.vertx.kotlin.core.json
io.vertx.kotlin.core.metrics
io.vertx.kotlin.core.net
io.vertx.kotlin.core.shareddata
io.vertx.kotlin.core.streams
io.vertx.kotlin.ext.asyncsql
io.vertx.kotlin.ext.auth
io.vertx.kotlin.ext.auth.htpasswd
io.vertx.kotlin.ext.auth.jdbc
io.vertx.kotlin.ext.auth.jwt
io.vertx.kotlin.ext.auth.mongo
io.vertx.kotlin.ext.auth.oauth2
io.vertx.kotlin.ext.auth.oauth2.providers
io.vertx.kotlin.ext.auth.shiro
io.vertx.kotlin.ext.bridge
io.vertx.kotlin.ext.consul
io.vertx.kotlin.ext.dropwizard
io.vertx.kotlin.ext.healthchecks
io.vertx.kotlin.ext.jdbc
io.vertx.kotlin.ext.jwt
io.vertx.kotlin.ext.mail
io.vertx.kotlin.ext.mongo
io.vertx.kotlin.ext.shell
io.vertx.kotlin.ext.shell.command
io.vertx.kotlin.ext.shell.term
io.vertx.kotlin.ext.sql
io.vertx.kotlin.ext.stomp
io.vertx.kotlin.ext.unit
io.vertx.kotlin.ext.unit.report
io.vertx.kotlin.ext.web
io.vertx.kotlin.ext.web.api
io.vertx.kotlin.ext.web.api.contract
io.vertx.kotlin.ext.web.api.contract.openapi3
io.vertx.kotlin.ext.web.client
io.vertx.kotlin.ext.web.common.template
io.vertx.kotlin.ext.web.handler
io.vertx.kotlin.ext.web.handler.sockjs
io.vertx.kotlin.ext.web.sstore
io.vertx.kotlin.kafka.admin
io.vertx.kotlin.kafka.client.common
io.vertx.kotlin.kafka.client.consumer
io.vertx.kotlin.kafka.client.producer
io.vertx.kotlin.micrometer
io.vertx.kotlin.mqtt
io.vertx.kotlin.rabbitmq
io.vertx.kotlin.redis
io.vertx.kotlin.redis.op
io.vertx.kotlin.redis.sentinel
io.vertx.kotlin.servicediscovery
io.vertx.kotlin.servicediscovery.spi
io.vertx.kotlin.servicediscovery.types
